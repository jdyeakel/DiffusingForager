(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    676928,      12497]
NotebookOptionsPosition[    671971,      12340]
NotebookOutlinePosition[    672331,      12356]
CellTagsIndexPosition[    672288,      12353]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MetapopDyn", "[", 
      RowBox[{
      "a_", ",", "\[Lambda]_", ",", "\[Sigma]_", ",", "\[Rho]_", ",", "m_", 
       ",", "\[Mu]_", ",", "T_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"R", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"a", "*", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}]}], " ", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", "*", 
               RowBox[{"X", "[", "t", "]"}]}], " ", "+", " ", 
              RowBox[{"m", "*", 
               RowBox[{"Y", "[", "t", "]"}]}]}], ")"}], "*", 
            RowBox[{"R", "[", "t", "]"}]}]}]}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Sigma]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Rho]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"X", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Mu]", "*", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Y", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Lambda]", "*", 
            RowBox[{"Y", "[", "t", "]"}]}], "-", 
           RowBox[{"\[Sigma]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "+", 
           RowBox[{"\[Rho]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], " ", "*", " ", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"R", "[", "0", "]"}], "\[Equal]", "0.16"}], ",", 
         RowBox[{
          RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0.16"}], ",", 
         RowBox[{
          RowBox[{"Y", "[", "0", "]"}], "\[Equal]", "0.16"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "X", ",", "Y"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "All"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "0.5"}], ",", 
       RowBox[{"\[Lambda]", "=", "0.2"}], ",", 
       RowBox[{"\[Sigma]", "=", "0.5"}], ",", 
       RowBox[{"\[Rho]", "=", "0.2"}], ",", 
       RowBox[{"m", "=", "0.2"}], ",", 
       RowBox[{"\[Mu]", "=", "0.3"}], ",", 
       RowBox[{"T", "=", "1000"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Traj", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"R", "[", "t", "]"}], ",", 
           RowBox[{"X", "[", "t", "]"}], ",", 
           RowBox[{"Y", "[", "t", "]"}]}], "}"}], "/.", 
         RowBox[{"MetapopDyn", "[", 
          RowBox[{
          "a", ",", "\[Lambda]", ",", "\[Sigma]", ",", "\[Rho]", ",", "m", 
           ",", "\[Mu]", ",", "T"}], "]"}]}], " ", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{"Traj", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "All"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time\>\"", ",", "\"\<R,S,F\>\""}], "}"}]}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.636818991590914*^9, 3.6368190277522917`*^9}, {
   3.636819069088731*^9, 3.6368191125387383`*^9}, {3.636819264811551*^9, 
   3.6368192980259027`*^9}, 3.6368225644646*^9, {3.636829939892223*^9, 
   3.636830014380571*^9}, {3.639404872826383*^9, 3.6394049722443237`*^9}, {
   3.6394050144911413`*^9, 3.639405019012155*^9}, {3.6394063834669647`*^9, 
   3.6394064149109983`*^9}, {3.6463985279599457`*^9, 3.646398609007303*^9}, {
   3.646398645453455*^9, 3.646398754993803*^9}, {3.646398793627618*^9, 
   3.646398828570057*^9}, {3.646398898504942*^9, 3.646398916564762*^9}, {
   3.646399089033573*^9, 3.646399093251112*^9}, {3.6463992694913187`*^9, 
   3.646399271481216*^9}, {3.646399330822397*^9, 3.646399353267209*^9}, {
   3.6463994019138317`*^9, 3.646399444394405*^9}, {3.646399508960676*^9, 
   3.646399534049861*^9}, {3.6463999152131853`*^9, 3.646400034745784*^9}, {
   3.646400132351523*^9, 3.6464001410179853`*^9}, {3.646400202948778*^9, 
   3.646400231178789*^9}, {3.646400293450811*^9, 3.64640029727627*^9}, {
   3.64640032943053*^9, 3.646400337373057*^9}, {3.6464003864565907`*^9, 
   3.646400422694214*^9}, {3.646400520282331*^9, 3.646400566181733*^9}, {
   3.646400624135583*^9, 3.6464006531024637`*^9}, 3.646401179779606*^9, {
   3.646413474146559*^9, 3.646413508873995*^9}, {3.6464147899261913`*^9, 
   3.646414836692885*^9}, {3.646673579737204*^9, 3.6466736183704348`*^9}, {
   3.646674392355935*^9, 3.6466744309787188`*^9}, {3.646675181556884*^9, 
   3.646675227641704*^9}, {3.646675321723659*^9, 3.646675353025045*^9}, {
   3.64667575507104*^9, 3.6466757867580757`*^9}, {3.646675849303026*^9, 
   3.6466758675577517`*^9}, 3.6466790733558197`*^9, {3.646679246481843*^9, 
   3.646679252826593*^9}, {3.649002839449933*^9, 3.649002860143219*^9}, {
   3.663351628871316*^9, 3.663351651229472*^9}, 3.663351767965734*^9, {
   3.6633597009112062`*^9, 3.663359734075075*^9}, {3.6633606768519907`*^9, 
   3.663360680606036*^9}, {3.663447624368971*^9, 3.6634476529510107`*^9}, {
   3.664129451638467*^9, 3.664129475440546*^9}, {3.66413613394307*^9, 
   3.6641362001276207`*^9}, {3.664136395418762*^9, 3.664136443243495*^9}, {
   3.6641393538180943`*^9, 3.664139395274169*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/rmQ9TPbvk//8+Cw9vIf7DJs/+f/B+nvn84=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/Yti/uf/AyBuC+M=
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
BWbWy//zB1Jw5Q7hy/87b/+g3o8t7P/9fxA2rLE=
     "]]}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"R,S,F\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{706.95703125, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 999.9999795918368}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.646399097394348*^9, 3.646399276565907*^9, {3.646399332611264*^9, 
   3.646399356054983*^9}, {3.646399407471919*^9, 3.6463994452861977`*^9}, {
   3.646399519007917*^9, 3.6463995347807207`*^9}, {3.646399933529674*^9, 
   3.646400035119308*^9}, {3.6464001337508717`*^9, 3.646400141511561*^9}, {
   3.646400205377198*^9, 3.6464002316434*^9}, 3.646400298727111*^9, {
   3.6464003302470913`*^9, 3.6464003379219007`*^9}, {3.6464003871530333`*^9, 
   3.6464004232952757`*^9}, {3.646400530477583*^9, 3.646400566546845*^9}, {
   3.646400626464662*^9, 3.6464006542402973`*^9}, 3.646401193146693*^9, {
   3.646413475754074*^9, 3.6464135093525963`*^9}, {3.6464148095266047`*^9, 
   3.646414837628758*^9}, {3.646673580305324*^9, 3.646673619411201*^9}, {
   3.646674394071185*^9, 3.646674431555167*^9}, {3.646675184780552*^9, 
   3.6466752284246187`*^9}, {3.646675323176228*^9, 3.646675353923946*^9}, {
   3.646675759387485*^9, 3.6466757873699923`*^9}, {3.646675862242443*^9, 
   3.646675868145846*^9}, {3.646679248804887*^9, 3.646679253454431*^9}, 
   3.6490028621621323`*^9, 3.649178061710877*^9, 3.649178115973216*^9, {
   3.663351625902285*^9, 3.663351652086905*^9}, 3.663351768630843*^9, 
   3.6633597014269238`*^9, 3.6633597349322968`*^9, 3.663360681662324*^9, {
   3.6634476253028593`*^9, 3.6634476533173113`*^9}, 3.6641294816273727`*^9, {
   3.664136129117447*^9, 3.66413620096839*^9}, {3.664136396142663*^9, 
   3.664136443902113*^9}, {3.66413935437337*^9, 3.664139395616802*^9}}]
}, Open  ]],

Cell["The below code solves for the steady state", "Text",
 CellChangeTimes->{{3.636819917046274*^9, 3.636819943537436*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sol", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"0", " ", "==", " ", 
        RowBox[{
         RowBox[{"\[Alpha]", "*", "R", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "R"}], ")"}]}], "-", 
         RowBox[{"R", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Rho]", "*", "H"}], "+", 
            RowBox[{"m", "*", "F"}]}], ")"}]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"0", "\[Equal]", 
        RowBox[{
         RowBox[{"\[Sigma]", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "R"}], ")"}], "*", "F"}], "-", 
         RowBox[{"\[Rho]", "*", "R", "*", "H"}], "-", 
         RowBox[{"\[Mu]", "*", "H"}]}]}], ",", "\[NonBreakingSpace]", 
       "\[IndentingNewLine]", 
       RowBox[{"0", "\[Equal]", 
        RowBox[{
         RowBox[{"\[Lambda]", "*", "F"}], "-", 
         RowBox[{"\[Sigma]", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "R"}], ")"}], "*", "F"}], "+", 
         RowBox[{"\[Rho]", "*", "R", "*", "H"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"R", ",", "H", ",", "F"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.636733761306307*^9, 3.636733821361238*^9}, {
   3.6367338732188787`*^9, 3.6367338900380793`*^9}, {3.636733950263845*^9, 
   3.636733950848785*^9}, {3.636821460636732*^9, 3.636821506722666*^9}, {
   3.638802895588224*^9, 3.638802913904401*^9}, {3.639404459689352*^9, 
   3.6394044601112328`*^9}, {3.639751571463934*^9, 3.6397516353744717`*^9}, 
   3.63975174554202*^9, {3.6399159847423*^9, 3.639916071779233*^9}, {
   3.64633936483854*^9, 3.646339391852702*^9}, {3.646399544303945*^9, 
   3.646399547796715*^9}, {3.646679261252306*^9, 3.646679276354968*^9}, 
   3.650124557035658*^9, {3.664129300305913*^9, 3.664129339358344*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "0"}], ",", 
     RowBox[{"H", "\[Rule]", "0"}], ",", 
     RowBox[{"F", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "1"}], ",", 
     RowBox[{"H", "\[Rule]", "0"}], ",", 
     RowBox[{"F", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ",", 
     RowBox[{"H", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}], ",", 
     RowBox[{"F", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6367338562774057`*^9, 3.636733892835491*^9}, 
   3.636733953271134*^9, 3.6367342268947773`*^9, 3.6368028539326344`*^9, 
   3.636802918057365*^9, 3.63681183160989*^9, {3.636821468543605*^9, 
   3.636821514826768*^9}, 3.638037586765584*^9, 3.63863731133125*^9, 
   3.638640475795381*^9, 3.6387056476591587`*^9, 3.638802922695804*^9, 
   3.639404469794877*^9, 3.639751651214674*^9, 3.639751752013788*^9, 
   3.639753818415154*^9, 3.639916083995297*^9, 3.646339399287528*^9, 
   3.646399019070917*^9, 3.646399465618232*^9, 3.646399549397532*^9, 
   3.646591489201261*^9, {3.6466792659419737`*^9, 3.646679276734028*^9}, 
   3.649789057395759*^9, 3.649849743665978*^9, 3.650034871886655*^9, 
   3.650125498957747*^9, 3.66335154366611*^9, 3.664129342666638*^9, 
   3.664135613107689*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InternalSol1", " ", "=", " ", 
   RowBox[{"Sol", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"InternalSol2", " ", "=", " ", 
     RowBox[{"Sol", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.636734010604021*^9, 3.636734036566966*^9}, {
  3.6367343790332203`*^9, 3.6367343796497917`*^9}, {3.6397516932049723`*^9, 
  3.63975171269001*^9}, {3.646339476460618*^9, 3.646339479500432*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "InternalSol1", "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
    RowBox[{"\[Mu]", "->", "0.2"}], ",", 
    RowBox[{"\[Rho]", "\[Rule]", "0.5"}], ",", 
    RowBox[{"\[Sigma]", "\[Rule]", "0.5"}], ",", " ", 
    RowBox[{"m", "\[Rule]", "0.2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.636734039540743*^9, 3.636734111419137*^9}, {
   3.636821532476531*^9, 3.636821534605826*^9}, {3.638802937516183*^9, 
   3.6388029446389923`*^9}, 3.639404479065029*^9, {3.6397516641921864`*^9, 
   3.63975168223667*^9}, {3.639751719417858*^9, 3.639751719980227*^9}, {
   3.6399160959739017`*^9, 3.639916124787385*^9}, {3.6463394835723267`*^9, 
   3.646339491410533*^9}, {3.646399476469509*^9, 3.6463994824753513`*^9}, {
   3.646399553709423*^9, 3.646399555895651*^9}, {3.6497890642685843`*^9, 
   3.649789064819036*^9}, {3.664129368439653*^9, 3.664129370587388*^9}, {
   3.664129422925795*^9, 3.66412942352055*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"R", "\[Rule]", "0.5333333333333334`"}], ",", 
    RowBox[{"H", "\[Rule]", "0.2592592592592592`"}], ",", 
    RowBox[{"F", "\[Rule]", "0.5185185185185185`"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{{3.6367340942464657`*^9, 3.6367341118464622`*^9}, 
   3.636734230112893*^9, 3.636802854162773*^9, 3.636802925190996*^9, 
   3.6368118495181103`*^9, 3.636821536360592*^9, 3.638037596377495*^9, 
   3.638637315679579*^9, 3.638640475900714*^9, 3.6387056477640343`*^9, 
   3.638802946313595*^9, 3.639404480350066*^9, {3.639751674958169*^9, 
   3.639751720872808*^9}, 3.639751779895405*^9, 3.639753818579537*^9, 
   3.639916128895604*^9, 3.646339492406941*^9, {3.6463994730716743`*^9, 
   3.646399482880644*^9}, {3.646399556551483*^9, 3.646399564778727*^9}, 
   3.646591489356626*^9, 3.6497890690336437`*^9, 3.649849743794527*^9, 
   3.6500348720858994`*^9, 3.650125499149332*^9, 3.6633515438093863`*^9, {
   3.664129423887477*^9, 3.6641294294853*^9}, 3.664135621064705*^9}]
}, Open  ]],

Cell["\<\
This means only InternalSol2 is an INTERNAL, POSITIVE SOLUTION\
\>", "Text",
 CellChangeTimes->{{3.6367341216915073`*^9, 3.63673413469573*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntPosSol", " ", "=", " ", "InternalSol1"}], ";"}]], "Input",
 CellChangeTimes->{{3.636734140626615*^9, 3.6367341644216967`*^9}, {
   3.636734214526906*^9, 3.63673421628828*^9}, 3.63673438707572*^9, {
   3.636821601636962*^9, 3.636821603414339*^9}, {3.6399161377925653`*^9, 
   3.639916138244009*^9}, {3.646339507845647*^9, 3.646339508059929*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Rstar", " ", "=", " ", 
  RowBox[{
   RowBox[{"IntPosSol", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Hstar", " ", "=", " ", 
  RowBox[{
   RowBox[{"IntPosSol", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Fstar", " ", "=", " ", 
  RowBox[{
   RowBox[{"IntPosSol", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.636734243619029*^9, 3.63673430689607*^9}, {
  3.664135695621868*^9, 3.664135697794962*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
   RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]], "Output",
 CellChangeTimes->{{3.636734281637939*^9, 3.63673430732928*^9}, 
   3.636802854231922*^9, 3.636802930763019*^9, 3.636811860836183*^9, 
   3.6368216155344687`*^9, 3.6368289138881903`*^9, 3.638037605140617*^9, 
   3.6386373157441387`*^9, 3.638640475938632*^9, 3.638705647808175*^9, 
   3.6388029559596043`*^9, 3.6394045010089903`*^9, 3.639751795452619*^9, 
   3.639753818623708*^9, 3.63991614491415*^9, 3.646339512999179*^9, 
   3.646399591554145*^9, 3.646591489414483*^9, 3.649789074142665*^9, 
   3.649849743864037*^9, 3.650034872143837*^9, 3.6501254992258797`*^9, 
   3.663351543848957*^9, {3.664129551639027*^9, 3.664129556672278*^9}, 
   3.664135626152213*^9, 3.664135702426548*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox["\[Lambda]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "\[Mu]"}], "+", 
     RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
     RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.636734281637939*^9, 3.63673430732928*^9}, 
   3.636802854231922*^9, 3.636802930763019*^9, 3.636811860836183*^9, 
   3.6368216155344687`*^9, 3.6368289138881903`*^9, 3.638037605140617*^9, 
   3.6386373157441387`*^9, 3.638640475938632*^9, 3.638705647808175*^9, 
   3.6388029559596043`*^9, 3.6394045010089903`*^9, 3.639751795452619*^9, 
   3.639753818623708*^9, 3.63991614491415*^9, 3.646339512999179*^9, 
   3.646399591554145*^9, 3.646591489414483*^9, 3.649789074142665*^9, 
   3.649849743864037*^9, 3.650034872143837*^9, 3.6501254992258797`*^9, 
   3.663351543848957*^9, {3.664129551639027*^9, 3.664129556672278*^9}, 
   3.664135626152213*^9, 3.66413570243321*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "\[Mu]"}], "+", 
     RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
     RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.636734281637939*^9, 3.63673430732928*^9}, 
   3.636802854231922*^9, 3.636802930763019*^9, 3.636811860836183*^9, 
   3.6368216155344687`*^9, 3.6368289138881903`*^9, 3.638037605140617*^9, 
   3.6386373157441387`*^9, 3.638640475938632*^9, 3.638705647808175*^9, 
   3.6388029559596043`*^9, 3.6394045010089903`*^9, 3.639751795452619*^9, 
   3.639753818623708*^9, 3.63991614491415*^9, 3.646339512999179*^9, 
   3.646399591554145*^9, 3.646591489414483*^9, 3.649789074142665*^9, 
   3.649849743864037*^9, 3.650034872143837*^9, 3.6501254992258797`*^9, 
   3.663351543848957*^9, {3.664129551639027*^9, 3.664129556672278*^9}, 
   3.664135626152213*^9, 3.664135702437533*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alpha", "=", "0.5"}], ",", 
      RowBox[{"lambda", "=", "0.1"}], ",", 
      RowBox[{"mu", "=", "0.3"}], ",", 
      RowBox[{"rho", "=", "0.3"}], ",", 
      RowBox[{"mr", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Rstarspec", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"IntPosSol", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "mu"}], ",", 
         RowBox[{"\[Rho]", "\[Rule]", "rho"}], ",", 
         RowBox[{"m", "\[Rule]", "mr"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Xstarspec", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"IntPosSol", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "mu"}], ",", 
         RowBox[{"\[Rho]", "\[Rule]", "rho"}], ",", 
         RowBox[{"m", "\[Rule]", "mr"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ystarspec", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"IntPosSol", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "mu"}], ",", 
         RowBox[{"\[Rho]", "\[Rule]", "rho"}], ",", 
         RowBox[{"m", "\[Rule]", "mr"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FigFP", "=", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Rstarspec", ",", "Xstarspec", ",", "Ystarspec", ",", 
             RowBox[{"Xstarspec", "+", "Ystarspec"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", "lambda", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Starvation rate \[Sigma]\>\"", ",", 
              "\"\<Steady State\>\""}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(R\), \(*\)]\)\>\"", ",", 
              "\"\<\!\(\*SuperscriptBox[\(H\), \(*\)]\)\>\"", ",", 
              "\"\<\!\(\*SuperscriptBox[\(F\), \(*\)]\)\>\"", ",", 
              "\"\<\!\(\*SuperscriptBox[\(H\), \(*\)]\)+\!\(\*SuperscriptBox[\
\(F\), \(*\)]\)\>\""}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Dotted", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"lambda", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"lambda", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"\"\<Transcritial Bifurcation\>\"", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"lambda", "-", "0.02"}], ")"}], ",", "0.5"}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"90", "Degree"}]}], "]"}], "]"}]}], "\[IndentingNewLine]",
         "}"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.636828847643564*^9, 3.636828890382423*^9}, {
   3.6368289268709183`*^9, 3.636828927925363*^9}, {3.636829012263837*^9, 
   3.63682919871548*^9}, 3.6368292951195927`*^9, 3.636829408492687*^9, {
   3.636829466693036*^9, 3.636829490835649*^9}, {3.636829527412133*^9, 
   3.6368295651378517`*^9}, {3.636829721658711*^9, 3.636829747275872*^9}, {
   3.636829785769545*^9, 3.6368298188516083`*^9}, {3.6368298613805933`*^9, 
   3.636829908707963*^9}, {3.638037552949978*^9, 3.638037557241889*^9}, {
   3.638037674373057*^9, 3.6380376751294727`*^9}, {3.638037760460108*^9, 
   3.638037762100814*^9}, {3.638705651353438*^9, 3.638705664494424*^9}, {
   3.638708839338275*^9, 3.638708846561138*^9}, {3.6387996604295607`*^9, 
   3.638799687647542*^9}, {3.638802961133232*^9, 3.638802989175686*^9}, {
   3.6388057445606728`*^9, 3.638805757735209*^9}, {3.638805795345224*^9, 
   3.638805822945912*^9}, {3.639404510474008*^9, 3.6394045150562897`*^9}, {
   3.639751802166316*^9, 3.639751902022428*^9}, {3.639753826942215*^9, 
   3.6397538521396646`*^9}, {3.639916174262718*^9, 3.639916240307322*^9}, {
   3.646339519093129*^9, 3.6463395718605957`*^9}, {3.646339619190909*^9, 
   3.6463396500440702`*^9}, {3.646340092812203*^9, 3.646340117377707*^9}, {
   3.6463401638182077`*^9, 3.64634019379604*^9}, {3.646398387466496*^9, 
   3.64639843949728*^9}, {3.646399596759367*^9, 3.646399603015993*^9}, {
   3.646407678126123*^9, 3.646407693507011*^9}, {3.6465671320911016`*^9, 
   3.646567138928913*^9}, 3.6465914985470057`*^9, {3.646591548398472*^9, 
   3.646591565692947*^9}, {3.646592739360794*^9, 3.646592739459112*^9}, {
   3.649789088176059*^9, 3.6497894390904016`*^9}, {3.64978950630929*^9, 
   3.649789508197551*^9}, {3.649849590920107*^9, 3.6498496237786903`*^9}, {
   3.649849686041395*^9, 3.6498497577936287`*^9}, {3.6498519728974943`*^9, 
   3.6498519749520693`*^9}, {3.64985201091964*^9, 3.649852146734466*^9}, 
   3.6633515347482452`*^9, {3.6641294878627*^9, 3.6641295278560743`*^9}, {
   3.664129567164752*^9, 3.6641295771984663`*^9}, {3.664133746965197*^9, 
   3.664133781253888*^9}, {3.664135707551635*^9, 3.664135710048244*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVzXs0lAkABXBJqIgtY5PsmCKRcdKo1MHdIo8s0cNOakWK2vJI7A6Zs7NN
q5I3bVPp7MqidCKdyJBeNok6TMZ7aMaMmW++ic+2DUVlZ/+4557fP/cyDibs
PKyvp6cXpMv/7VCXTly+LMS0r0XLh3KOl0Fw2cidW0LYbNFetb0YBunoK8nz
JiEg386bzorBFRpdpJUJsWvu9Nz53J+wKOWJMNSpAQlli9Oyf8jAJMvwwvzG
BsSes6u6Tf8dz2pymamSRnSb2yjkFWWIvn09iU1/CMt3m0TqlnuwzrmT6cF/
AqLVi3lA2Yxc43mJG141I4P/LJPNbUdwvOWDmoUt8EmfkLBmOtFvlmwxnNaK
5+JBzhpTMeLft+glP27Djo8y9pHCHnRYxHxs2PAK2RLtlx69fqTZPmXzSzqw
r2Lq0wR9EJfuzy8P/6cT0sbepj6VBL3pffbfOb1GK2Pkx7flwyiWlyQkBXeh
MnmGozWXwujxi+P9x8Vw738pXtIoBbvh6wlBaTdW7nN3Czokg0tYpGf2sx4k
vLP24GllIM06zAdme8GySxXdyhhBIIovxbr1wzgya+3GBXK4mh8iHHcPYE9L
BuWYLsfnL6GPfLIGwas43+NOyRGcuzmyqFqCYzO++2N2KfCbZ8BZD80Q4k50
mQ7VKxAVVRdlz3iDuMkZ9hfaKA4uMeMzGFKc0Ut5cC12FIbzwgSSJikyBR6l
8oZRHPe7snhdiAwHW1nCVQZKlP2drax4I0N04fsuG38lRCFFnwNOjcA728hR
mq3EI6YgNcNEDvuEPMfz7Ur8aVXtTt2UwyAoqIhYoMLub1NCOT4KZHL6OhTb
VGi7795xVaxAWGbbTs80FVheZnmaxFEsJjZFB91R4QBNXtutr0SvoxURK1Uh
wiFmvTRfCW6fyu4XUwIh/p+mLJkq0BxXJHt7EDBoyKUTTSrUnswcmT1M4Nbm
DZmj4QQsWjYOBecToJkM7OWOEXAvsfpmYT2B0KVM/nquGtHRRnfPSAjwWIWU
lRWJ13v8cnn6aiT9MflYUEnipWmgc46dGt8vi+v29tegIIyxwtBfjUWdBd5m
cg027Z0VpB1V41xPrWXKybdQ+LaLzp1VQ6vROBuZj8HOJeQGVa6G3U76Ddb1
MWhrZBHrmtVY9e8cLs91HOAH10wOqWFdOlX08eU4hp20xJxpNbpKya9MIyjk
N+efDlhCou7sqaGiSAre2oe/1ussOGZyc3k0hdnwqkQHCxL7WS7fOh+h0K0/
YjOPRkL59ER8YBKFpYF6dY8sSUzLPrSdz6AwmOcqdV1GwtbW6IxhNYW/rk25
LWCQ0DcQ7MipofBi3Iv1s86jqtXWlvcobOHVMxQ6V1Zvv2svpDDOCOloWkHC
DTlSn2YKtewTcYl2JPwiaJ78Xt3fUk79awcSTlvLjRcOUIi9xm30Wk3CZNVG
cYGEwlaVpqpS584x9rHrMgr+fuaxpx1JhHOLLz/RUJjh9Cx3XUPCI4p5OGCc
wsBRXmmxzvRtD9eKJnR7c6uWGTuTUJhIn0u1FHzzSgaGdW6ZSCw88oGCoWv8
yu1MEjfFcw5MTFPY292+v1bnrPoCJ85nChdFTRm2LiTii1dOzs5SME/1K7mg
83/KsG9z
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVz3081AcAx3EkEnXIeciQ6iTrjJ3TE30bWpFup6TD5jn1msddeZXitTaV
9URxLx37Fe4QPbiuPHTycNwiqnm6MpJOnt34XZnQlLU/Pq/33x/rsLi9BzXU
1NT2fO5/11UkjWZnS1A9FmXaHSGDJqvwzd1bEtBSZwLUg2RQDD3rbaqRoIal
irM/IEMO1ap9ul+CgAj5fJanDMsT6iU+dlXwkuVT8+1leM/QuqDzsAoxyXNT
vLkGPBKn0xN7HyKy7/W3PRkNCL8j4HKsarHfNDp1uL0e5ml3z7uk1IPOcvGb
C5EifcnieOdnMjwNr563S6gFK9a4WqzbCIP1BoHaP1ejm3LUqO/EY5xml/iL
BFWI/adR7ai0BaZr5Jla5hK0GkXOVTk/QxbXJSZSUIkTqxo4KfmtuCYRRcK/
AlcrdYoC3raBLGOpv/UoR1fSXzRvuw4k3gkOmGeWgRjIj+OyOlG3zKnDi30f
2tLm6O5oOagxql+Mf70HTpWJii98jrzJ+9KZMjHs/UJcLz16Ae8ExvSMphjj
lFb9noUuLD0mdFDffxe7QVw95NQN76P3LSyiRHDUjxhd79sDXia5TuFXio+f
fOo8Lr4Eu2/B9x3ugJW+JYQn6sXS0sAgkz23ccbVM9VF+Qpj8ZY/Wh64hdDQ
ilCa9WusSOr080+4ibAVlBRrawUu0HR7EkUl0Frsx++tUYCz9CuTnKFiRO/M
Mfya3Q/5IY+NC4xiFP5xafjG637oUy5f2Zp+A+1s3kfPk2/Ae+xVYDlchDo6
P/Gs3gBGdvrOCtlFyDMTbSJLBrDL5kiiRmUhfLcn+Bz3GESOdVb3IttCtFRu
av1dPohUp8kGi5ICMLZRLivjh+CfzjRZblOAYOpA+XONYXRm6FfEi4UIWhfJ
VFwZhsbmoZXWHkKwd83PGNNHsETHcF99hwCaVelWozUjqJS6386MEeDWFufz
QwGjGPyhkZalKQBVr8c/eWIUs7nNtaVF+fAxpacwk8egOhLm6MbKxylGJmlm
No4F1m4H+rs8cHPfS/k3xxEblsvLzc3DgZUxz913KaHbviVN6JmH5W0Z7pQB
Ja7rpMYZvs3Fby/KjROO/I2IYWNL/+BcTCuVG7T1J8AJmpk0bbqOtXutihmC
CbAt9pxbse06bKbUk085TqK8nmnrXX0N5sIZ3tzTSTQQV+T7nK6hUzhusCyI
hPMnWkiDhEBF6slXvBASdlw+s7iSAD9Kr+SLcBI1Y83+aeUEvmfYb99wmETK
k7VpgWICww0/xe7mknBt6SqYKybwoX+25dxZEpQK+5MefAKrVmmf1hKR6Kk5
42t0jICGJv+7NDEJt8A6xaIEAkMjtubGZSRmH/AlU1wCN0Ve92gSEqXUUbY8
loAT0hQeMhL7NW2NsiMJ7AyiuqZ0keicEfc5+BGwcytaottDwvvFajrNl4Ce
zUZ5Ri8J4eovm8z2Emib4EQJ+km8yZK+WsQiEJBMZNcrSSRNMTNf7iDgEko/
6DlJIoOW7dLhTsBqR61Du4pEd7iBY/M3BAb1FE2K6c9/dLV/K10JNKriMw/P
kljD8WsTbSVQIlcPVn0g8eTPU6obmwlcfJBhd/wjidrouMC8jQRiiTXvFxZI
rDU0NMhmEvgPq65Zpw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVxX081HcAB3DPaRGtKGm41oMMG4dR+GiUSHItD3mZx7RanjrxKqUlohSX
eOWKtkRJhdr2w53Hu4uEG/IU3eUunBvx1QPFmG1/vF9vWmj0vnAlBQWFPf/5
/80Vp+XXr3PAflVQtGO1GCqed14/esAB5R6rrqQphmREKHpay8HaeHlxo5IY
N3QMO6elHJy/5ngqdFKE5XE8DsOEi4ki5q23jSLM0NUuLa3mgmY/ExkUL0Lj
Y5bZSVE1coV7f3IVvURY6W2mn2EdzmxY39rPHYB+5qN0+2Qetsf5K8ZnvQBL
XTXGRihAn3uGg6SvF55RujWPlzWh9ZVHyo6gHvRrHV/1KqEZIfOOycpzXYj6
0KRwvKEFjLWDky7dz9G+6tAs10YI4j3R2cbpRIIR3y+5oB1WrcoZhN+B3Mql
d/3fdiBcaybpyGg7+k6/2Ohh8hz0FFbanNefyB8qiGZ6duHmKs9tMZ/asKTh
WUR/RDduFsr5NEEr/Lirp9iFPSAjmgWxrBaY+wQ7ZDT2YuprIYlNe4YxrXbt
gcU+ZFpONyf93IzdyM/90aoftrk7e72vPIWF9kH5lv0DKCt7/4UxrwkL/zDq
XS6/BFdWXz9NGuHJ2hqcUy5CKv9JaqddI847uKXZj4tR2n2t3SfpCUJCKkI2
0gahedNAUfmFAKErtZJpNAk2B1wIy3MWQE3Vhy2qlYDnGpZFf8hHhOuNzy29
pBDviT2yuImPO08yZMWDUuxeZloa8YCHTq+cBbdTrxGpa/v3NVMe6s3YJ1M1
hvDGGnMJNQ24pVduS0qGQAXovtzu1oD9TnGMEy7DCLcMaVKtqUdLpW17Xvcw
mj3Dix4u1IHuqHVlPGYEKr4d63Xs6hCkM0T1KMmwTbRmxZb0WgRuPmQtyZIh
qcf3noWsBl675j/qmo3iombePM2+BipclqG8dhQrCsLP/VBUjQdbbdJH/OXo
vlxiK1Wrho7GwIHECTneRZsbqCVwwVhjlmyd+BdkpSvdw6Y5OEvPJnp6Yzg9
E9PsfJQD5q8zDez7YyhcSQKjSRV810b2OO8aB8vOzzsuqgrLO646aw2Nw9r1
TpfwQyUu9FK6cbFv8Mw0q/dcWiWmx8dNl2hPoCHV7vd9OpXYsM/wHv32BOZ6
Zu9mllVg03vFxLMWk9jJMDaw21MB/cKPObNtk7hiHTnoOEqhq3BshWYgQfGZ
dc2MSxQq0k6Jc4IJfvG2NK67SIF9VKNkXRiBR7SvwOQChQC6uZPpYYJb7Lz7
KucpyPjHonYzCR72FWyrPkNhTvqp5WIqQbp6WACdScHIaEmKWjlBqOdB7D1A
QUmFvTfzMUFMCkvO96UwMmqsr/sHASfdstXGh8L9cvffNnIItmuX2Rt+T8EK
mRIXAYGjskH7Ow8KroE6Dsl9BOKTqsVFThRMvrurvmyAoNJoQKoPChqbvu2+
KiKYPRDsne1AoWPC7+htKYHxMS/Zua0U/BPzr/PGCfLiD5cdtKJgH2IW7jZJ
YCpilootKRjuqPumc4pA+plw2MeCwrCG5KlkmuANzWnezZxC01RM9uFPBHp8
J5HAlEJJt2LQ1BzB6rzgDw5fUbhcddXkxAJBRla2S9UWClH5X84sLhLcyBC2
WRpT+BeVEmv9
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVk3040wkAx5FIyZDXHFJNcs1xs17p67JOqB21m7c7r6We83pqT6k8V7ly
dUXZHk15HqE3vS1X0fTDTN5WYjNE0lhGdvZTTkunXPfH5/n8/fnj4xKftn2X
gZ6e3rYv/O8VlYdHCwtFePQmya53pwqGrCtDd2+KsDxHF6kfrYJyuK2/uUYE
gjWR5hGmwgVrZ9nUoAgROxUzBYEqmHHrRaHu1QhsKLEu8VDhPd3oT5NH1UjO
mp7kTw+hsSKPltn/CLsGXn3flz+EhNulGeHOtWDbJeeoZYNwyL17yie7HqtY
PpzpWCXy5s1NX93WAGkCMePOHQAr1YaoWNAEykqLKOPf+tFL2Wc1cLAFx0LK
I4SlfUj9p0lvn1gK22UKnpFDL9qtEqerV7eBn+GTkljag4NLJOHZJe24KBIm
IqIb56tMrka+7YD2Pkv/LbMLPYefU7e6y3HgdkzkDEOBIlVJWgarE7ULveVB
IZ0wFrcm9yYrYJUycdTmmBzh1bYTgrIuXNLeE+vuy+DBifU909iNYC59Smco
wxil3bxvtgfz95d56v/YgWAUnd/t3YvgffccHZPa4WW+c3Qluw88HrlCyXmG
T59D65inX4A1MMt+hzaw8tbH8oX9mHcnKtp221Mc9w3M8dG8xEi60y9OYU8Q
F1cZR3V5BcvDnZwIrhTxiyjZLi5KnKIu6MsUtsJoLkfQX6NE2PxvbC8MtyA5
4ILltyGDkO9mrpmlt+DK4zPqa68GQaGcPbchrxmyEP6nwENDyG8JuuykbkId
TZB5wlQFdQD7Q1lIEy7ZC9eS5SoEuO7NNKhqBNuPG3qA+RqFLgW9c9waIa1a
235R8RonvLUSx/LHoG+knNWkDyM8j2Fr5voYMdaqB10GasjzzSvTKxoQvSKR
oTynhv664cUuzAaEbJnR2dBGYGRiuaNeLoFhdZ7zaM0IKsX+t3gpEtxcv/rU
cOQoVD83UQsMJbA27YvIGh+Frri19s7VeoTa0bIZWW9A7o332sSqxxE6j7S3
H8NnVrAn7Z0YGcXvxYIbY0iJL+YXF4sRtjily3+LBvNl63PLAsUw68j3p6g0
KDLJSbN8W4c/uh/YcPf+jXi1jVNETB2mNJpVxubj4ETrtHbNtVi+3fk6vXQc
LMdtJxdtrIXrpH7WES8t7tUz3LYSNXAo0/Gnn2ohLjqn2OFdg86yMYuF0SS8
P1NjJSIClTmHXvJjSbhlCBjXqwgIkkzLv0ogv/zXGpH7gMBPdA+/VXtIHH2y
PDeqgoBa8mtqcAaJDdKey9PXCXwc/CA9eYKEWaXHIaaAwJIlxr8bCUk8rznO
ttpPwMBQ8ENuBQm/qDrlHC6B4RE3B5v7JHQPBaLJDAI3hEF/UUUkblmPhihS
CXgjV8lsILHD0M2qMJFAQLS1b3YPCbmuYsCTQ8B909V5C/pIBHUvpVHZBExd
1yjy+0mULv262X47gY7x8KTSQRLKAvHLOSwCkVlFhfUaEgcnGbwXmwn4xNF2
BWpJnKUW+sj9CThvrvWUTZDoSbDwav2OwGtTZbNy6ksfTe/fKl8CTRPpvD0f
SCwN53QINxAoV+jHTHwkIX12ZOLaOgKnH+a7H/hEgkhOi7q0hkBq0bL3s7Mk
lllaWhQyCPwHrXhi2w==
         "]]}}}, {
      Dashing[{0, Small}], 
      LineBox[{{0.1, 0}, {0.1, 1}}]}, 
     GeometricTransformationBox[
      InsetBox[
       FormBox["\"Transcritial Bifurcation\"", TraditionalForm], {0.08, 
       0.5}], {{{0, -1}, {1, 0}}, Center}]}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Steady State\"", TraditionalForm], None}, {
        FormBox["\"Starvation rate \[Sigma]\"", TraditionalForm], None}}, 
     FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(R\\), \\(*\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(H\\), \\(*\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(F\\), \\(*\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(H\\), \
\\(*\\)]\\)+\\!\\(\\*SuperscriptBox[\\(F\\), \\(*\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.636828891978991*^9, 3.636828929172289*^9, 3.636829018882822*^9, 
   3.6368290688651323`*^9, 3.636829102090407*^9, 3.6368292001679487`*^9, 
   3.6368292961357203`*^9, 3.6368294118337*^9, {3.636829467774069*^9, 
   3.636829491963479*^9}, {3.6368295428464947`*^9, 3.636829567510602*^9}, {
   3.636829742014682*^9, 3.636829748105545*^9}, {3.636829793166854*^9, 
   3.636829805372933*^9}, 3.636829846593967*^9, {3.636829890968876*^9, 
   3.636829909911626*^9}, 3.638037612294804*^9, 3.638037675968644*^9, 
   3.638037762712059*^9, 3.638637315930397*^9, 3.638640476132234*^9, {
   3.638705648048143*^9, 3.638705664957114*^9}, {3.6387088434700203`*^9, 
   3.638708847212545*^9}, {3.638799673562715*^9, 3.63879968853969*^9}, {
   3.63880297202958*^9, 3.638802989701627*^9}, 3.638805758758151*^9, {
   3.638805801179553*^9, 3.638805823709331*^9}, 3.639404522326849*^9, {
   3.6397518333074627`*^9, 3.639751843872826*^9}, {3.6397518752772818`*^9, 
   3.639751902596304*^9}, 3.639753853117202*^9, {3.639916220390346*^9, 
   3.639916241480801*^9}, {3.646339526144821*^9, 3.6463395727891607`*^9}, {
   3.646339623724451*^9, 3.646339650600472*^9}, {3.646340099845911*^9, 
   3.646340118048833*^9}, {3.646340168912354*^9, 3.6463401947036543`*^9}, {
   3.646398390307703*^9, 3.64639844082697*^9}, 3.6463996060719624`*^9, 
   3.646407702248352*^9, {3.6465914897003508`*^9, 3.646591499068818*^9}, {
   3.646591549163529*^9, 3.6465915662381268`*^9}, 3.6465927417411118`*^9, 
   3.649789083477162*^9, {3.64978912068495*^9, 3.64978916160948*^9}, {
   3.649789231998828*^9, 3.6497892406335583`*^9}, {3.6497892746928368`*^9, 
   3.649789319782489*^9}, {3.649789382628107*^9, 3.649789410628214*^9}, 
   3.64978950892266*^9, {3.649849716077764*^9, 3.649849758432613*^9}, {
   3.649852059474835*^9, 3.649852147354486*^9}, 3.650034880203405*^9, 
   3.650125499344994*^9, {3.663351537506962*^9, 3.663351543936224*^9}, {
   3.664129529119361*^9, 3.6641295781833982`*^9}, {3.6641337480994*^9, 
   3.664133782102124*^9}, 3.664135629442482*^9, 3.6641385215065527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/Manuscript/\
fig_FP.pdf\>\"", ",", "FigFP"}], "]"}]], "Input",
 CellChangeTimes->{{3.649789511048077*^9, 3.649789512651924*^9}, {
  3.649789543514022*^9, 3.6497895572262983`*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
Manuscript/fig_FP.pdf\"\>"], "Output",
 CellChangeTimes->{3.64978956003055*^9, 3.64984977264023*^9, 
  3.6498527722722683`*^9, 3.65003488098094*^9, 3.6501254997070217`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Rstarspec", ",", "Xstarspec", ",", "Ystarspec"}], "}"}], ",", 
   RowBox[{"\[Sigma]", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.636829427804101*^9, 3.6368294439324083`*^9}, 
   3.639916263202137*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.6368294453349113`*^9, 3.6386404762560863`*^9, 
  3.6387071307828007`*^9, 3.6394045323180933`*^9, 3.6397538619342613`*^9, 
  3.639916264683671*^9, 3.650034881023757*^9, 3.650125499768462*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dR", "=", "   ", 
   RowBox[{
    RowBox[{"\[Alpha]", "*", "R", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}]}], "-", 
    RowBox[{"R", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Rho]", "*", "H"}], "+", 
       RowBox[{"m", "*", "F"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dX", " ", "=", 
   RowBox[{
    RowBox[{"\[Sigma]", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}], "*", "F"}], "-", 
    RowBox[{"\[Rho]", "*", "R", "*", "H"}], "-", 
    RowBox[{"\[Mu]", "*", "H"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dY", " ", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", "*", "F"}], "-", 
    RowBox[{"\[Sigma]", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}], "*", "F"}], "+", 
    RowBox[{"\[Rho]", "*", "R", "*", "H"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacSpec", " ", "=", " ", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dR", ",", "R"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dR", ",", "H"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dR", ",", "F"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dX", ",", "R"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dX", ",", "H"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dX", ",", "F"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dY", ",", "R"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dY", ",", "H"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dY", ",", "F"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.6367345537246017`*^9, 3.636734687079061*^9}, {
   3.636821627840353*^9, 3.636821652950233*^9}, {3.63682186789629*^9, 
   3.6368218773918257`*^9}, {3.638803003472077*^9, 3.6388030173960943`*^9}, 
   3.638806884048028*^9, {3.639404444029475*^9, 3.639404444472543*^9}, {
   3.639751926584313*^9, 3.6397519519424887`*^9}, {3.639916282231394*^9, 
   3.639916301631213*^9}, {3.646340205798622*^9, 3.646340216096526*^9}, {
   3.64639961265875*^9, 3.64639961546839*^9}, {3.6641354513200493`*^9, 
   3.664135457874148*^9}, {3.664135714434786*^9, 3.66413573909451*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "F"}], " ", "m"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "R"}], ")"}], " ", "\[Alpha]"}], "-", 
      RowBox[{"R", " ", "\[Alpha]"}], "-", 
      RowBox[{"H", " ", "\[Rho]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "R"}], " ", "\[Rho]"}], ",", 
     RowBox[{
      RowBox[{"-", "m"}], " ", "R"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "H"}], " ", "\[Rho]"}], "-", 
      RowBox[{"F", " ", "\[Sigma]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], "-", 
      RowBox[{"R", " ", "\[Rho]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "R"}], ")"}], " ", "\[Sigma]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"H", " ", "\[Rho]"}], "+", 
      RowBox[{"F", " ", "\[Sigma]"}]}], ",", 
     RowBox[{"R", " ", "\[Rho]"}], ",", 
     RowBox[{"\[Lambda]", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "R"}], ")"}], " ", "\[Sigma]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.638803018810583*^9, 3.638806888503537*^9, 3.639404437484146*^9, 
   3.639404546547593*^9, 3.6397519616799917`*^9, 3.6397538621132708`*^9, 
   3.639916304123005*^9, 3.646340220370294*^9, 3.6463996165093718`*^9, 
   3.649851625764737*^9, {3.650034855890368*^9, 3.650034881075095*^9}, 
   3.650125499818701*^9, {3.664135460266553*^9, 3.664135487809733*^9}, 
   3.664135632374612*^9, 3.664135741542385*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacSpec", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.636821661986713*^9, 3.636821666550809*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "F"}], " ", "m"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "R"}], ")"}], " ", "\[Alpha]"}], "-", 
       RowBox[{"R", " ", "\[Alpha]"}], "-", 
       RowBox[{"H", " ", "\[Rho]"}]}], 
      RowBox[{
       RowBox[{"-", "R"}], " ", "\[Rho]"}], 
      RowBox[{
       RowBox[{"-", "m"}], " ", "R"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "H"}], " ", "\[Rho]"}], "-", 
       RowBox[{"F", " ", "\[Sigma]"}]}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", 
       RowBox[{"R", " ", "\[Rho]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "R"}], ")"}], " ", "\[Sigma]"}]},
     {
      RowBox[{
       RowBox[{"H", " ", "\[Rho]"}], "+", 
       RowBox[{"F", " ", "\[Sigma]"}]}], 
      RowBox[{"R", " ", "\[Rho]"}], 
      RowBox[{"\[Lambda]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "R"}], ")"}], " ", "\[Sigma]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.636821667145422*^9, 3.636821881986177*^9, {3.638637296530751*^9, 
   3.63863732244209*^9}, 3.6386404762971478`*^9, 3.638707131027398*^9, {
   3.6388030114900637`*^9, 3.638803022643118*^9}, 3.638806898000214*^9, 
   3.639404437600232*^9, 3.639404550950568*^9, 3.639751964420309*^9, 
   3.639753862157166*^9, 3.639916307617361*^9, 3.646340223619935*^9, 
   3.6463996212174597`*^9, 3.649851625900284*^9, {3.6500348560670843`*^9, 
   3.650034881125455*^9}, 3.650125499868082*^9, {3.66413546364902*^9, 
   3.664135490393856*^9}, 3.6641356366939993`*^9, 3.664135746691572*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"JacSpecSol", " ", "=", " ", 
   RowBox[{"JacSpec", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", "\[Rule]", "Rstar"}], ",", 
      RowBox[{"H", "\[Rule]", "Hstar"}], ",", 
      RowBox[{"F", "\[Rule]", "Fstar"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.649851577822241*^9, 3.649851620337479*^9}, {
  3.664135751875751*^9, 3.6641357566005297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["JacSpecSol"], "Input",
 CellChangeTimes->{{3.649851867892756*^9, 3.649851871071999*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"m", " ", "\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"m", " ", "\[Mu]"}], "+", 
           RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
           RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}], "-", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], "+", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
          RowBox[{
           RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
           RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ")"}]}]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[Mu]", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"m", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", 
         SuperscriptBox["\[Lambda]", "2"], " ", "\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"m", " ", "\[Mu]"}], "+", 
           RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
           RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}], "-", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}], " ", "\[Sigma]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], "-", 
      FractionBox[
       RowBox[{"\[Mu]", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ",", 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}], " ", "\[Sigma]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}], ",", 
     FractionBox[
      RowBox[{"\[Mu]", " ", "\[Rho]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
       RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], ",", 
     RowBox[{"\[Lambda]", "-", 
      RowBox[{"\[Sigma]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
          RowBox[{
           RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
           RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ")"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.649851871548547*^9, {3.650034856150935*^9, 3.650034881179166*^9}, 
   3.650125499940329*^9, 3.664135496003161*^9, 3.66413564228056*^9, 
   3.664135761891519*^9, 3.664136107454238*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"R", ",", "H", ",", "F"}], "}"}], "/.", "Sol"}], ")"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
    RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "mu"}], ",", 
    RowBox[{"\[Rho]", "\[Rule]", "rho"}], ",", 
    RowBox[{"\[Sigma]", "\[Rule]", "sigma"}], ",", 
    RowBox[{"m", "\[Rule]", "mr"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6498522805727053`*^9, 3.6498522890383053`*^9}, {
  3.664135508410368*^9, 3.6641355111542177`*^9}, {3.664135766579782*^9, 
  3.664135768490623*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"mu", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "lambda"}], "+", "sigma"}], ")"}]}], 
      RowBox[{
       RowBox[{"lambda", " ", "rho"}], "+", 
       RowBox[{"mu", " ", "sigma"}]}]], ",", 
     FractionBox[
      RowBox[{"alpha", " ", 
       SuperscriptBox["lambda", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"mu", "+", "rho"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mr", " ", "mu"}], "+", 
         RowBox[{"lambda", " ", "rho"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lambda", " ", "rho"}], "+", 
         RowBox[{"mu", " ", "sigma"}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"alpha", " ", "lambda", " ", "mu", " ", 
       RowBox[{"(", 
        RowBox[{"mu", "+", "rho"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mr", " ", "mu"}], "+", 
         RowBox[{"lambda", " ", "rho"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lambda", " ", "rho"}], "+", 
         RowBox[{"mu", " ", "sigma"}]}], ")"}]}]]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.6498522674657173`*^9, 3.64985229001208*^9}, {
   3.650034856214478*^9, 3.650034881223432*^9}, 3.650125499968363*^9, 
   3.664135512245902*^9, 3.6641356537588873`*^9, 3.6641357707485437`*^9}]
}, Open  ]],

Cell["\<\
This plot shows that the bifurcation at lambda=sigma is a Transcritical (I \
think)\
\>", "Text",
 CellChangeTimes->{{3.649852619904641*^9, 3.649852633799219*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"R", ",", "H", ",", "F"}], "}"}], "/.", "Sol"}], ")"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
    RowBox[{"\[Rho]", "\[Rule]", "0.2"}], ",", 
    RowBox[{"m", "\[Rule]", "0.2"}], ",", 
    RowBox[{"\[Sigma]", "\[Rule]", "sigma"}]}], "}"}]}]], "Input",
 CellChangeTimes->{3.664136361861033*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"0.2`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.1`"}], "+", "sigma"}], ")"}]}], 
      RowBox[{"0.020000000000000004`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2`", " ", "sigma"}]}]], ",", 
     FractionBox["0.03333333333333334`", 
      RowBox[{"0.020000000000000004`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2`", " ", "sigma"}]}]], ",", 
     FractionBox["0.06666666666666668`", 
      RowBox[{"0.020000000000000004`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2`", " ", "sigma"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6641363422180357`*^9, 3.664136363487423*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Eig", " ", "=", " ", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"JacSpecSol", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
         RowBox[{"\[Rho]", "\[Rule]", "0.2"}], ",", 
         RowBox[{"m", "\[Rule]", "0.2"}], ",", 
         RowBox[{"\[Sigma]", "\[Rule]", "sigma"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"REig", " ", "=", " ", 
     RowBox[{"Re", "[", "Eig", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"IEig", " ", "=", " ", 
     RowBox[{"Im", "[", "Eig", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"REig", ",", "IEig"}], "}"}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"LightGray", ",", 
              RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
              RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Real part\>\"", ",", "\"\<Imaginary part\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FP", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"R", ",", "H", ",", "F"}], "}"}], "/.", "Sol"}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
            RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
            RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
            RowBox[{"\[Rho]", "\[Rule]", "0.2"}], ",", 
            RowBox[{"m", "\[Rule]", "0.2"}], ",", 
            RowBox[{"\[Sigma]", "\[Rule]", "sigma"}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPointPlot3D", "[", 
            RowBox[{"FP", ",", "\[IndentingNewLine]", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "4"}], "]"}], ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}], "]"}]}], 
             ",", 
             RowBox[{"PlotLabel", "\[Rule]", "FP"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\!\(\*SuperscriptBox[\(R\), \(*\)]\)\>\"", ",", 
                "\"\<\!\(\*SuperscriptBox[\(S\), \(*\)]\)\>\"", ",", 
                "\"\<\!\(\*SuperscriptBox[\(F\), \(*\)]\)\>\""}], "}"}]}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
              RowBox[{"Polygon", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigma", ",", "0.1"}], "}"}], ",", "0", ",", "1", ",", 
     "0.001"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649851637240397*^9, 3.649851850415141*^9}, {
   3.649851893272331*^9, 3.649851938695746*^9}, {3.649852202725564*^9, 
   3.6498522482523193`*^9}, {3.6498523075192347`*^9, 3.649852398675373*^9}, {
   3.6498524300737867`*^9, 3.649852531643402*^9}, {3.649852566131813*^9, 
   3.6498525864283524`*^9}, {3.649852656835186*^9, 3.6498526905529823`*^9}, {
   3.649853031191595*^9, 3.649853112024125*^9}, {3.649870564797371*^9, 
   3.6498706648861237`*^9}, {3.649870696987735*^9, 3.649870820868453*^9}, 
   3.64987095170216*^9, {3.6500348911622667`*^9, 3.650034894725707*^9}, {
   3.650035089322117*^9, 3.6500352576861277`*^9}, {3.650035291253294*^9, 
   3.650035322718047*^9}, {3.66413581711614*^9, 3.664135846219429*^9}, 
   3.664136380265555*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sigma$$ = 0.51, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`sigma$$], 0.1}, 0, 1, 0.001}}, Typeset`size$$ = {
    600., {144., 149.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`sigma$51558$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sigma$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`sigma$$, $CellContext`sigma$51558$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`Eig = Eigenvalues[
          
          ReplaceAll[$CellContext`JacSpecSol, {$CellContext`\[Alpha] -> 
            0.5, $CellContext`\[Lambda] -> 0.1, $CellContext`\[Mu] -> 
            0.2, $CellContext`\[Rho] -> 0.2, $CellContext`m -> 
            0.2, $CellContext`\[Sigma] -> $CellContext`sigma$$}]]; \
$CellContext`REig = Re[$CellContext`Eig]; $CellContext`IEig = 
        Im[$CellContext`Eig]; Row[{
          Show[{
            ListPlot[
             Transpose[{$CellContext`REig, $CellContext`IEig}], 
             PlotRange -> {{-1, 1}, {-1, 1}}], 
            Graphics[{LightGray, 
              Opacity[0.3], 
              Disk[]}]}, ImageSize -> 300, Frame -> True, AspectRatio -> 1, 
           FrameLabel -> {"Real part", "Imaginary part"}], $CellContext`FP = 
           ReplaceAll[
             
             ReplaceAll[{$CellContext`R, $CellContext`H, $CellContext`F}, \
$CellContext`Sol], {$CellContext`\[Alpha] -> 0.5, $CellContext`\[Lambda] -> 
              0.1, $CellContext`\[Mu] -> 0.2, $CellContext`\[Rho] -> 
              0.2, $CellContext`m -> 
              0.2, $CellContext`\[Sigma] -> $CellContext`sigma$$}]; Show[{
             ListPointPlot3D[$CellContext`FP, PlotStyle -> Directive[{
                 ColorData[97, 4], 
                 PointSize[Large]}], PlotLabel -> $CellContext`FP, 
              PlotRange -> {{-1, 1}, {0, 1}, {0, 1}}, ImageSize -> 300, 
              AxesLabel -> {
               "\!\(\*SuperscriptBox[\(R\), \(*\)]\)", 
                "\!\(\*SuperscriptBox[\(S\), \(*\)]\)", 
                "\!\(\*SuperscriptBox[\(F\), \(*\)]\)"}], 
             Graphics3D[{
               Opacity[0.5], 
               Polygon[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}}]}]}]}]), 
      "Specifications" :> {{{$CellContext`sigma$$, 0.1}, 0, 1, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{645., {188., 193.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.649870666284898*^9, {3.649870735026792*^9, 3.649870789572033*^9}, 
   3.6498708213292103`*^9, 3.649870952272958*^9, {3.650034856272545*^9, 
   3.6500348954054956`*^9}, 3.650035209616267*^9, 3.650035259444368*^9, 
   3.65003529198211*^9, 3.6500353233809958`*^9, 3.650125500317459*^9, {
   3.664135820040226*^9, 3.664135847157679*^9}, 3.664136381322379*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["FP"], "Input",
 CellChangeTimes->{{3.64985254118918*^9, 3.649852541280491*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.16666666666666669`", ",", "0.33333333333333337`"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6498525418317547`*^9}]
}, Open  ]],

Cell["Specific Bifurcations", "Text",
 CellChangeTimes->{{3.636735249182033*^9, 3.6367352528544283`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Sigma]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Mu]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Alpha]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Rho]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Lambda]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.639916661498138*^9, 3.639916737347307*^9}, {
  3.639916927000423*^9, 3.639916930351451*^9}, {3.639917059900681*^9, 
  3.639917061445949*^9}, {3.639917271531619*^9, 3.639917273202471*^9}, {
  3.639917355594678*^9, 3.6399173562835493`*^9}, {3.639917760808323*^9, 
  3.639917762454817*^9}, {3.63991860916257*^9, 3.6399186110231857`*^9}, {
  3.6463403665580263`*^9, 3.6463403774819403`*^9}, {3.646406263215164*^9, 
  3.6464063123309517`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Sigma]", "\[Rule]", "\[Lambda]"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.664135962610614*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{"-", "\[Rho]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.664135962638755*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Alpha]", "\[Rule]", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.664135962643132*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Rho]", "\[Rule]", 
    RowBox[{"-", "\[Mu]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.664135962647373*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "\[Sigma]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.6641359626517057`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SylvesterMatrix", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "Jac", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dim", " ", "=", " ", 
       RowBox[{"Length", "[", "Jac", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Mat", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Dim", "-", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Dim", "-", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Col1", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[DoubledPi]", ",", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Dim", "-", "1"}], ")"}], "*", "2"}], ",", "2"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Mat", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "=", " ", "Col1"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Mat", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[DoubledPi]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Mat", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "-", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "2", ",", 
          RowBox[{"Dim", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Dim", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Todel", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "Mat", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<", "0"}], "||", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", 
            RowBox[{"(", "Dim", ")"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Mat", "=", 
       RowBox[{"Mat", "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Todel", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "Todel", "]"}], ",", "1"}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"CPG", " ", "=", " ", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"CharacteristicPolynomial", "[", 
         RowBox[{"Jac", ",", "\[Lambda]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CPGL", " ", "=", " ", 
       RowBox[{"CoefficientList", "[", 
        RowBox[{"CPG", ",", "\[Lambda]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Mat2", " ", "=", " ", 
       RowBox[{"Mat", "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[DoubledPi]", ",", "i"}], "]"}], "\[Rule]", " ", 
           RowBox[{"CPGL", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "CPGL", "]"}], "-", "1"}], ")"}], ",", 
            "1"}], "}"}]}], "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 Background->RGBColor[1, 0.925, 0.925]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sylv", "=", 
   RowBox[{"SylvesterMatrix", "[", "JacSpecSol", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HopfSol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Det", "[", "Sylv", "]"}], "\[Equal]", "0"}], ",", "muy"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.636736436134536*^9, 3.636736500049109*^9, {3.6367367219487257`*^9, 
   3.636736738826749*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.636736677937512*^9, {3.6367367334010353`*^9, 3.636736755454893*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CPG", " ", "=", " ", 
   RowBox[{"CharacteristicPolynomial", "[", 
    RowBox[{"JacSpecSol", ",", "L"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CPGL", " ", "=", " ", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"CPG", ",", "L"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.63673694172998*^9, 3.6367370423808413`*^9}, 
   3.636737084247136*^9, 3.63673732646585*^9, 3.636737388095427*^9, {
   3.636822176583478*^9, 3.636822178990656*^9}, {3.646399699282878*^9, 
   3.646399702476984*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sylv", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}]}], " ", 
  ";"}]], "Input",
 CellChangeTimes->{{3.6367370874757833`*^9, 3.636737102643981*^9}, {
  3.636737292648432*^9, 3.636737383415155*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HopfAnalytic", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Det", "[", "Sylv", "]"}], "\[Equal]", "0"}], ",", "\[Rho]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639918749090508*^9, 3.639918773681662*^9}, {
   3.646399710646468*^9, 3.64639971556273*^9}, 3.646400755370916*^9, 
   3.646400812843563*^9, {3.650040941506727*^9, 3.650040944197229*^9}, {
   3.664136569643469*^9, 3.66413657049122*^9}}],

Cell[CellGroupData[{

Cell[BoxData["HopfAnalytic"], "Input",
 CellChangeTimes->{{3.650041464139906*^9, 3.650041465288834*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]", "\[Rule]", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 RowBox[{"m", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], "-", 
                 SuperscriptBox["\[Lambda]", "3"], "+", 
                 RowBox[{"m", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
                 RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
                 RowBox[{"m", " ", "\[Lambda]", " ", "\[Sigma]"}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Lambda]", "2"], " ", "\[Sigma]"}], "-", 
                 RowBox[{"m", " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
                 RowBox[{"\[Alpha]", " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
                 RowBox[{
                 "4", " ", "\[Lambda]", " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
                 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "-", 
                 RowBox[{"\[Lambda]", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}], "-", 
                 RowBox[{"\[Mu]", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]}], 
                RowBox[{"4", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], " ", 
                 "\[Sigma]"}]]}], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SqrtBox[
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]]}],
               "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}], "-", 
                    SuperscriptBox["\[Lambda]", "3"], "+", 
                    RowBox[{"m", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
                    RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
                    RowBox[{"m", " ", "\[Lambda]", " ", "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Sigma]"}], "-", 
                    
                    RowBox[{"m", " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
                    RowBox[{"\[Alpha]", " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
                    
                    RowBox[{
                    "4", " ", "\[Lambda]", " ", "\[Mu]", " ", "\[Sigma]"}], 
                    "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]], "-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "4"], " ", "\[Mu]"}], "+", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}], "-", 
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", "m", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", 
                    TemplateBox[{"4"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}],
                     "+", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    " ", "\[Sigma]"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"2", " ", "m", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"3", " ", "m", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], 
                   RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], " ", 
                    "\[Sigma]"}]], "-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "4"], " ", "\[Mu]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "5"], " ", "\[Mu]"}], "+", 
                    TemplateBox[{"29"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "+", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", 
                    SuperscriptBox["\[Sigma]", "3"]}]}], 
                   RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "4"], " ", "\[Sigma]"}], "+", 
                    
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "-", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "-", 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]], "-", 
                  FractionBox[
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]], 
                  "-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    ")"}], 
                    RowBox[{"1", "/", "3"}]], 
                   RowBox[{"3", " ", 
                    SuperscriptBox["2", 
                    RowBox[{"1", "/", "3"}]], " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", " ", "\[Sigma]"}], "-", 
                    SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"8", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}], "+", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}], "+", 
                    RowBox[{"m", " ", "\[Alpha]", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[Mu]", "3"]}], "+", 
                    RowBox[{"3", " ", "m", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "3"]}], "-", 
                    RowBox[{
                    "2", " ", "m", " ", "\[Alpha]", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"3", " ", "m", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", "\[Sigma]"}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"2", " ", "m", " ", 
                    SuperscriptBox["\[Mu]", "4"], " ", "\[Sigma]"}]}], 
                    ")"}]}], 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}]}]]}], "-", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}], "-", 
                    SuperscriptBox["\[Lambda]", "3"], "+", 
                    RowBox[{"m", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
                    RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
                    RowBox[{"m", " ", "\[Lambda]", " ", "\[Sigma]"}], "+", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "-", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "+", 
                    RowBox[{"\[Alpha]", " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
                    
                    RowBox[{
                    "4", " ", "\[Lambda]", " ", "\[Mu]", " ", "\[Sigma]"}], 
                    "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], "3"], 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "3"], " ", 
                    SuperscriptBox["\[Sigma]", "3"]}]], "+", 
                    FractionBox[
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}], "-", 
                    SuperscriptBox["\[Lambda]", "3"], "+", 
                    RowBox[{"m", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
                    RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
                    RowBox[{"m", " ", "\[Lambda]", " ", "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Sigma]"}], "-", 
                    
                    RowBox[{"m", " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
                    RowBox[{"\[Alpha]", " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
                    
                    RowBox[{
                    "4", " ", "\[Lambda]", " ", "\[Mu]", " ", "\[Sigma]"}], 
                    "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "4"], " ", "\[Mu]"}], "+", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}], "-", 
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", "m", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", "m", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"2", " ", "m", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"3", " ", "m", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"4", " ", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}], "-", 
                    SuperscriptBox["\[Lambda]", "3"], "+", 
                    RowBox[{"m", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
                    RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
                    RowBox[{"m", " ", "\[Lambda]", " ", "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Sigma]"}], "-", 
                    
                    RowBox[{"m", " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
                    RowBox[{"\[Alpha]", " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
                    
                    RowBox[{
                    "4", " ", "\[Lambda]", " ", "\[Mu]", " ", "\[Sigma]"}], 
                    "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], "2"], 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]], "-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "4"], " ", "\[Mu]"}], "+", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}], "-", 
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", "m", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "+", 
                    RowBox[{"2", " ", "m", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", "\[Sigma]"}], "-", 
                    RowBox[{"2", " ", "m", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"3", " ", "m", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], " ", 
                    "\[Sigma]"}]], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "4"], " ", "\[Mu]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "5"], " ", "\[Mu]"}], "+", 
                    TemplateBox[{"28"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "+", 
                    RowBox[{"3", " ", "m", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox["\[Sigma]", "3"]}], "+", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", 
                    SuperscriptBox["\[Sigma]", "3"]}]}], 
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "4"], " ", "\[Sigma]"}], "+", 
                    
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "-", 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]], "+", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"1", "/", "3"}]], " ", 
                    TemplateBox[{"2"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "4"], " ", "\[Mu]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "5"], " ", "\[Mu]"}], "+", 
                    TemplateBox[{"28"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {"Deploy", FontColor -> GrayLevel[1], 
                    FontSize -> Smaller, ShowStringCharacters -> False}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 1, FrameStyle -> GrayLevel[0.75], 
                    RoundingRadius -> 7]& )], "+", 
                    RowBox[{"3", " ", "m", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox["\[Sigma]", "3"]}], "+", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", 
                    SuperscriptBox["\[Sigma]", "3"]}]}], ")"}], "2"], "-", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "+", 
                    RowBox[{"12", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "4"], " ", "\[Sigma]"}], "+", 
                    
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "3"], " ", "\[Mu]", " ", 
                    "\[Sigma]"}], "-", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {"Deploy", FontColor -> GrayLevel[1], 
                    FontSize -> Smaller, ShowStringCharacters -> False}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 1, FrameStyle -> GrayLevel[0.75], 
                    RoundingRadius -> 7]& )], "-", 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", "\[Mu]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Lambda]", "3"], " ", 
                    SuperscriptBox["\[Mu]", "3"], " ", "\[Sigma]"}], "+", 
                    TemplateBox[{"8"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {"Deploy", FontColor -> GrayLevel[1], 
                    FontSize -> Smaller, ShowStringCharacters -> False}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 1, FrameStyle -> GrayLevel[0.75], 
                    RoundingRadius -> 7]& )], "+", 
                    RowBox[{"m", " ", "\[Alpha]", " ", 
                    SuperscriptBox["\[Mu]", "4"], " ", 
                    SuperscriptBox["\[Sigma]", "3"]}], "+", 
                    RowBox[{"m", " ", 
                    SuperscriptBox["\[Mu]", "5"], " ", 
                    SuperscriptBox["\[Sigma]", "3"]}]}], ")"}]}]}], ")"}]}], 
                    RowBox[{"3", " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", " ", "\[Sigma]"}], "-", 
                    SuperscriptBox["\[Sigma]", "2"]}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {"Deploy", FontColor -> GrayLevel[1], 
                    FontSize -> Smaller, ShowStringCharacters -> False}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 1, FrameStyle -> GrayLevel[0.75], 
                    RoundingRadius -> 7]& )], "3"]}], "+", 
                    SuperscriptBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {"Deploy", FontColor -> GrayLevel[1], 
                    FontSize -> Smaller, ShowStringCharacters -> False}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 1, FrameStyle -> GrayLevel[0.75], 
                    RoundingRadius -> 7]& )], "2"]}]]}], ")"}], 
                    RowBox[{"1", "/", "3"}]]}]], "+", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {"Deploy", FontColor -> GrayLevel[1], 
                    FontSize -> Smaller, ShowStringCharacters -> False}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 1, FrameStyle -> GrayLevel[0.75], 
                    RoundingRadius -> 7]& )], ")"}], "3"]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {"Deploy", FontColor -> GrayLevel[1], 
                    FontSize -> Smaller, ShowStringCharacters -> False}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 1, FrameStyle -> GrayLevel[0.75], 
                    RoundingRadius -> 7]& )], ")"}], "2"]}]]}], ")"}], 
                    RowBox[{"1", "/", "3"}]], 
                    RowBox[{"3", " ", 
                    SuperscriptBox["2", 
                    RowBox[{"1", "/", "3"}]], " ", 
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", " ", "\[Sigma]"}], "-", 
                    SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Rho]", "\[Rule]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
            "}"}], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"\[Rho]", "\[Rule]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
            "}"}]}], "}"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 127, 19079721035985321106, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 127, 19079721035985321106, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 127, 19079721035985321106, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[127]]], "Output",
 CellChangeTimes->{
  3.6500414659214067`*^9, {3.664136054788082*^9, 3.66413608131364*^9}, 
   3.664136576047873*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "HopfAnalytic", "]"}]], "Input",
 CellChangeTimes->{{3.650040946376001*^9, 3.6500409510612993`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6500414333491173`*^9}]
}, Open  ]],

Cell["\<\
The solution to the Hopf Bifurcation surface may not be analytically \
tractable
Try Solving numerically with a = 1\
\>", "Text",
 CellChangeTimes->{{3.636737525783757*^9, 3.636737558522097*^9}, {
  3.636744978724807*^9, 3.636744979061075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hsp", " ", "=", " ", 
   RowBox[{"HopfAnalytic", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
      RowBox[{"\[Rho]", "\[Rule]", "0.2"}], ",", 
      RowBox[{"m", "\[Rule]", "0.2"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Hsp", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[Sigma]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Sigma]\>\"", ",", "\"\<\[Lambda]\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.646400690908239*^9, 3.646400783799788*^9}, {
  3.6464008170780478`*^9, 3.646400863708932*^9}, {3.646401262660769*^9, 
  3.646401282964713*^9}, {3.646401386010373*^9, 3.64640140294523*^9}, {
  3.6464017110996943`*^9, 3.646401716799921*^9}, {3.6464023986360826`*^9, 
  3.64640241015652*^9}, {3.664136001494297*^9, 3.664136035267358*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxFxXss1AEcAPDDVnlOltPPjOiyYWKcNhWpRNJV7oiaZF7LKFq0rtqadJY8
IlbRaXROJXMnKpXH4eZUdJw7brrunM77cjHHZh7VH77fPz77OMal0RMNSSQS
7Z//n0icGhBMR/hvPll/Nk5FUA9tTjaVFTYSgfBe3x3cCiIc3t/vzX9EJMCC
Z10+BUQGnJ2Vd+MBcQ9OyNARuUQpvK00pOrPfDX8od8rONieB0dlK0a68prg
tIZr7k8XP8ILRUM9BgbtcE9Hd7v4YCeczAwxP6cVwh3GXht1l0VwDUe4brvn
KxxAbn3BqO+F3UWK5m5XMSwNYMy9nuuHU01SJDJPCfxNHtlqUTgIM4Ki1BqN
FN5XmRdZSRmCR9dLpJfuDMPjIWIOuUsO88tUzAHHEZh73yjX5eYPWB9/fibp
swI2DcyhN9go4duW42bqaBVs1uZGGqaNwn7XT691reDs6nzObrYajomg9hmH
jsHvZIklbUu4by/fcOLxL3jXsSR9SaAG9qH6FDdN4KqFgi8c1jis9Q5jEV4T
sPOs+4zBIC6kZErSsybhh1JZPJ0yBesYgmJDIf42wvqo79VpmNOXXTFmNQMv
i6JvWXXio8Xtessrs/DSwAHiroUWTi91EjBbcJs+J0tNzG+YIatbtVvHFy5W
pSpq5+D2WB7L4qQO/iRODVWewt/7u26vD8Pr7LhsWiReLi9vzI/DM8/kqE2Y
uFvABb+tNbgzz9Zo+BXuZC/vqXmD71ylhwc14Fuaj6ewWnC1B7XMaBBXPJ+P
GZThcnMehSPHv8+68I8o8ZaXDqKsabyZ/DM/TIs3ssrpjjq8Nt5aKVjEuRIJ
p2gZrzxclBy7grP5NA/PNfyJg6l+YwP/CxUIhds=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Lambda]\"", TraditionalForm], None}, {
     FormBox["\"\[Sigma]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{812.87890625, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.646400746120895*^9, 3.646400784850089*^9}, {
   3.6464008276918373`*^9, 3.6464008646839857`*^9}, 3.646401284548765*^9, 
   3.646401404029707*^9, 3.646401717786158*^9, {3.6464023998590097`*^9, 
   3.646402410905472*^9}, 3.650041521374461*^9, {3.664135992830934*^9, 
   3.664136036184882*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Hsp"], "Input",
 CellChangeTimes->{{3.664136041438506*^9, 3.6641360425230637`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "\[Sigma]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.0005760000000000003`", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.0003200000000000002`"}], " ", "\[Sigma]"}], "+", 
            
            RowBox[{"0.004320000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", "#1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.005760000000000002`"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008800000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00016000000000000015`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.024000000000000007`", " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008000000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.0024000000000000002`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.016000000000000004`", " ", "\[Sigma]"}]}], ")"}], " ", 
          
          SuperscriptBox["#1", "4"]}], "+", 
         RowBox[{"0.008000000000000002`", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.0005760000000000003`", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.0003200000000000002`"}], " ", "\[Sigma]"}], "+", 
            
            RowBox[{"0.004320000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", "#1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.005760000000000002`"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008800000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00016000000000000015`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.024000000000000007`", " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008000000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.0024000000000000002`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.016000000000000004`", " ", "\[Sigma]"}]}], ")"}], " ", 
          
          SuperscriptBox["#1", "4"]}], "+", 
         RowBox[{"0.008000000000000002`", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "2"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.0005760000000000003`", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.0003200000000000002`"}], " ", "\[Sigma]"}], "+", 
            
            RowBox[{"0.004320000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", "#1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.005760000000000002`"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008800000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00016000000000000015`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.024000000000000007`", " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008000000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.0024000000000000002`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.016000000000000004`", " ", "\[Sigma]"}]}], ")"}], " ", 
          
          SuperscriptBox["#1", "4"]}], "+", 
         RowBox[{"0.008000000000000002`", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "3"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.0005760000000000003`", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.0003200000000000002`"}], " ", "\[Sigma]"}], "+", 
            
            RowBox[{"0.004320000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", "#1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.005760000000000002`"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008800000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00016000000000000015`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.024000000000000007`", " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008000000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.0024000000000000002`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.016000000000000004`", " ", "\[Sigma]"}]}], ")"}], " ", 
          
          SuperscriptBox["#1", "4"]}], "+", 
         RowBox[{"0.008000000000000002`", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "4"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.0005760000000000003`", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.0003200000000000002`"}], " ", "\[Sigma]"}], "+", 
            
            RowBox[{"0.004320000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", "#1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.005760000000000002`"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008800000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00016000000000000015`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.024000000000000007`", " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008000000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.0024000000000000002`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.016000000000000004`", " ", "\[Sigma]"}]}], ")"}], " ", 
          
          SuperscriptBox["#1", "4"]}], "+", 
         RowBox[{"0.008000000000000002`", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "5"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.664136021004897*^9, 3.6641360432501373`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MetapopDyn", "[", 
      RowBox[{
      "a_", ",", "\[Lambda]_", ",", "\[Sigma]_", ",", "\[Rho]_", ",", "m_", 
       ",", "\[Mu]_", ",", "T_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"R", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"a", "*", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}]}], " ", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", "*", 
               RowBox[{"X", "[", "t", "]"}]}], " ", "+", " ", 
              RowBox[{"m", "*", 
               RowBox[{"Y", "[", "t", "]"}]}]}], ")"}], "*", 
            RowBox[{"R", "[", "t", "]"}]}]}]}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Sigma]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Rho]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"X", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Mu]", "*", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Y", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Lambda]", "*", 
            RowBox[{"Y", "[", "t", "]"}]}], "-", 
           RowBox[{"\[Sigma]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "+", 
           RowBox[{"\[Rho]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], " ", "*", " ", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"R", "[", "0", "]"}], "\[Equal]", "0.16"}], ",", 
         RowBox[{
          RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0.16"}], ",", 
         RowBox[{
          RowBox[{"Y", "[", "0", "]"}], "\[Equal]", "0.16"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "X", ",", "Y"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "All"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "0.5"}], ",", 
       RowBox[{"\[Lambda]", "=", "0.4"}], ",", 
       RowBox[{"\[Sigma]", "=", "0.5"}], ",", 
       RowBox[{"\[Rho]", "=", "0.1"}], ",", 
       RowBox[{"m", "=", "0.2"}], ",", 
       RowBox[{"\[Mu]", "=", "0.3"}], ",", 
       RowBox[{"T", "=", "1000"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Traj", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"R", "[", "t", "]"}], ",", 
           RowBox[{"X", "[", "t", "]"}], ",", 
           RowBox[{"Y", "[", "t", "]"}]}], "}"}], "/.", 
         RowBox[{"MetapopDyn", "[", 
          RowBox[{
          "a", ",", "\[Lambda]", ",", "\[Sigma]", ",", "\[Rho]", ",", "m", 
           ",", "\[Mu]", ",", "T"}], "]"}]}], " ", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{"Traj", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "All"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time\>\"", ",", "\"\<R,S,F\>\""}], "}"}]}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.636818991590914*^9, 3.6368190277522917`*^9}, {
   3.636819069088731*^9, 3.6368191125387383`*^9}, {3.636819264811551*^9, 
   3.6368192980259027`*^9}, 3.6368225644646*^9, {3.636829939892223*^9, 
   3.636830014380571*^9}, {3.639404872826383*^9, 3.6394049722443237`*^9}, {
   3.6394050144911413`*^9, 3.639405019012155*^9}, {3.6394063834669647`*^9, 
   3.6394064149109983`*^9}, {3.6463985279599457`*^9, 3.646398609007303*^9}, {
   3.646398645453455*^9, 3.646398754993803*^9}, {3.646398793627618*^9, 
   3.646398828570057*^9}, {3.646398898504942*^9, 3.646398916564762*^9}, {
   3.646399089033573*^9, 3.646399093251112*^9}, {3.6463992694913187`*^9, 
   3.646399271481216*^9}, {3.646399330822397*^9, 3.646399353267209*^9}, {
   3.6463994019138317`*^9, 3.646399444394405*^9}, {3.646399508960676*^9, 
   3.646399534049861*^9}, {3.6463999152131853`*^9, 3.646400034745784*^9}, {
   3.646400132351523*^9, 3.6464001410179853`*^9}, {3.646400202948778*^9, 
   3.646400231178789*^9}, {3.646400293450811*^9, 3.64640029727627*^9}, {
   3.64640032943053*^9, 3.646400337373057*^9}, {3.6464003864565907`*^9, 
   3.646400422694214*^9}, {3.646400520282331*^9, 3.646400566181733*^9}, {
   3.646400624135583*^9, 3.6464006531024637`*^9}, 3.646401179779606*^9, {
   3.646413474146559*^9, 3.646413508873995*^9}, {3.6464147899261913`*^9, 
   3.646414836692885*^9}, {3.646673579737204*^9, 3.6466736183704348`*^9}, {
   3.646674392355935*^9, 3.6466744309787188`*^9}, {3.646675181556884*^9, 
   3.646675227641704*^9}, {3.646675321723659*^9, 3.646675353025045*^9}, {
   3.64667575507104*^9, 3.6466757867580757`*^9}, {3.646675849303026*^9, 
   3.6466758675577517`*^9}, 3.6466790733558197`*^9, {3.646679246481843*^9, 
   3.646679252826593*^9}, {3.649002839449933*^9, 3.649002860143219*^9}, {
   3.663351628871316*^9, 3.663351651229472*^9}, 3.663351767965734*^9, {
   3.6633597009112062`*^9, 3.663359734075075*^9}, {3.6633606768519907`*^9, 
   3.663360680606036*^9}, {3.663447624368971*^9, 3.6634476529510107`*^9}, {
   3.664129451638467*^9, 3.664129475440546*^9}, {3.66413613394307*^9, 
   3.6641362001276207`*^9}, {3.664136395418762*^9, 3.664136443243495*^9}, {
   3.6641373073452673`*^9, 3.66413731288132*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
hydW8uHHeud4T/T/AK2lQ5k=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
vCFKl60460CDrA4IlEcbUjJr5Q7R4Gn8kgWi6OHf5KCHzjRQXlO06B/mVfbJ
k6tdjtBgPscldgbt/HF3I+8oDdLV4w4K4d9L7tELyXCngWgbL0oGXVe9cq25
Jw3uRL5s34iO1Jtr+uxNgw1hW21s0JuvfwklnaSBlva6vCD+9Wzlc2UVPxpc
dOJUZaEzOXde1wXQwHQu1eMd2nHuv8gTp2mg3TZwYBnOh/iZCDWxEBo8OXll
jzO6+sux1sJzNNAxPSeZiw49ZBlrF04DXs7gzim05nN1jZFIGry+9CR7D85/
n4nU+4QYGmyTfPTqFnqPUqdWK5kGf6RMV0XgegonV3WE0GgwJCIdPoh+vDCP
JsekAW2V+hpnrAe14aBPzvE0aN64L8kKr/dzpSLxn1NpIGbLHNiB9XTXXnd4
+BYNLL6XFB3m16PtTNjxu7i+XX/WvUEv3FW/4P09GpRH39+wHev32E6X1VWl
NCh107ipgPXN3qGSr/eIBpe+6DFp6JLtI1sKymlw1qS84jtawpxkm1hNg5iB
dVKFmLdbTe3ei9TS4IN7+XV+3nptk/OIrKeBwlZ79kH0ha2fR0YbaaDPSyLm
ossNCyM8m7Aea046jqIH9UNEPrykQXFfatsW7MelemaJ9m9oQFge2XYGba4r
uuZpCw2WUf9uuon21WkpMGijgax02sPuaf5+4LL+jfdYT0RdZwns75pN3tWK
Hfj5yy780uPx80XH/r+PNKBEhZ49iJbfON0u2k2DOdXMptNoS7Vaz+geGpSc
7v5GQ59WjR8b76PBzTVaL5LRGcpOUd4DNBBuueKfiX62Tkm0c4gGn+46tFxB
Tyr+SNrznQb/HP0FMtDr1pQo1g7TwCClRSQJbb867obRGA3CT56bIKHD5HcZ
3vpJgz2/lnb5obNXLKtZN0mDDCfPrr3o13Kfdl+cooFApYOMNpq3LL9j0TQN
bg+SMxei1Zae8Y6dwf58Ppjfged/QNrk58Q/Gmg0qhzJR8dKisT4CNDh5H7C
QBD6hsQbsS4hOgzb+obrod+JX0reJ0IHSX+i7QTOv8Aiz3X1onQo7qYm30Jr
imrdMhanw90jc4keaOqCp7XKUnTY/otwvQbXu0iQszdVhg7k6NQdAeiueceP
i2XpcHH9zquyaL3ZrxOTK+mg7cd+fBjrpW9SWrlRmQ6H1si8fIn1J/mr87bJ
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
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
3IT5V1BhThbj5y9sR36bcZA887cz9ov+B2xAQPU=
     "]]}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"R,S,F\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{761.76171875, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 999.9999795918368}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.646401204160153*^9, 3.646401247275033*^9}, {
   3.6464013547812634`*^9, 3.6464013717914553`*^9}, {3.646401585698496*^9, 
   3.64640169676338*^9}, 3.646401763527343*^9, {3.646401800940693*^9, 
   3.646401851275248*^9}, {3.6464018999240847`*^9, 3.646401949882011*^9}, {
   3.646406342749927*^9, 3.646406367989051*^9}, {3.6464082224573917`*^9, 
   3.646408233786303*^9}, {3.66413730778607*^9, 3.664137313424819*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Hsp2", " ", "=", 
     RowBox[{"HopfAnalytic", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
        RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
        RowBox[{"m", "\[Rule]", "MR"}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"\[Rho]", "/.", 
       RowBox[{"Hsp2", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
      RowBox[{"RegionFunction", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
         RowBox[{"x", ">", "y"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}], ",", 
           RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "2"}], "]"}], ",", 
           RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], "}"}]}], ",", 
      RowBox[{"Mesh", "\[Rule]", "5"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Sigma]\>\"", ",", "\"\<\[Lambda]\>\"", ",", "\"\<\[Rho]\>\""}],
         "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SN\>\"", ",", "\"\<Hopf\>\""}], "}"}]}], ",", 
      RowBox[{"Lighting", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"\"\<Ambient\>\"", ",", " ", "White"}], "}"}], "}"}]}]}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"MR", ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "1"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.646400879021022*^9, 3.646400917455304*^9}, {
   3.6464009697528353`*^9, 3.646400986103135*^9}, {3.646401137815827*^9, 
   3.6464011427707253`*^9}, {3.646401419763637*^9, 3.646401428023664*^9}, {
   3.646402201642568*^9, 3.646402202181402*^9}, 3.646404414417719*^9, {
   3.646404467448902*^9, 3.64640452131289*^9}, {3.646404553849976*^9, 
   3.6464045646835413`*^9}, {3.646404596680439*^9, 3.646404603883389*^9}, {
   3.6464050318147573`*^9, 3.646405055299224*^9}, {3.646405446345079*^9, 
   3.646405668732765*^9}, {3.646405724923647*^9, 3.646405828886814*^9}, {
   3.646405921423428*^9, 3.646405955535101*^9}, {3.64640606800887*^9, 
   3.646406075681841*^9}, {3.646406139068281*^9, 3.646406198963415*^9}, {
   3.646406503456519*^9, 3.646406525873679*^9}, {3.650041548705781*^9, 
   3.650041549167699*^9}, {3.6641362162260113`*^9, 3.664136233716751*^9}, 
   3.664136267526045*^9, {3.664136462706143*^9, 3.664136539588032*^9}, {
   3.664136595275827*^9, 3.664136646329547*^9}, 3.6641366976549673`*^9, {
   3.664136997978074*^9, 3.664137002847334*^9}, {3.6641370639665318`*^9, 
   3.664137094976321*^9}, {3.664137329137762*^9, 3.664137342374453*^9}, {
   3.6641375007477407`*^9, 3.6641375575813828`*^9}, {3.664137599239478*^9, 
   3.664137646329812*^9}, {3.664138369301044*^9, 3.664138388180533*^9}, 
   3.6641385771373568`*^9, {3.6641387020481853`*^9, 3.664138724762972*^9}, {
   3.6641388897918797`*^9, 3.664138931694538*^9}, 3.664139061907773*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \\!\\(1\\/0.`\\^2\\) \
encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.664139064311719*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \\!\\(1\\/0.`\\^2\\) \
encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.664139064340974*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \\!\\(0.`\\\\ 2\\^\\(1/3\\)\\\\ \
ComplexInfinity\\) encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6641390643923264`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \\!\\(1\\/0.`\\^\\(1/3\\)\\) \
encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.664139064441277*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \\!\\(1\\/0.`\\) encountered.\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6641390644913187`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \\!\\(0.`\\\\ 2\\^\\(1/3\\)\\\\ \
ComplexInfinity\\\\ ComplexInfinity\\) encountered.\"\>"}]], "Message", "MSG",
 
 ShowCellLabel->True,
 CellChangeTimes->{3.664139064537196*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \\!\\(1\\/0.`\\^2\\) \
encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6641390645918007`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \\!\\(1\\/0.`\\) encountered.\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.664139064641678*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Power :: infy\\), \
\\\"MessageName\\\"]\\) will be suppressed during this calculation.\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6641390646919003`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Power :: infy\\), \
\\\"MessageName\\\"]\\) will be suppressed during this calculation.\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.664139064741922*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \\!\\(0.`\\\\ 2\\^\\(1/3\\)\\\\ \
ComplexInfinity\\) encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.664139064791175*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \\!\\(\\(0.`\\\\ \
ComplexInfinity\\)\\/2\\^\\(1/3\\)\\) encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.664139064842022*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \\!\\(0.`\\\\ 2\\^\\(1/3\\)\\\\ \
ComplexInfinity\\) encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.664139064892645*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \\!\\(0.`\\\\ 2\\^\\(1/3\\)\\\\ \
ComplexInfinity\\\\ ComplexInfinity\\) encountered.\"\>"}]], "Message", "MSG",
 
 ShowCellLabel->True,
 CellChangeTimes->{3.6641390649414988`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Infinity :: \
indet\\), \\\"MessageName\\\"]\\) will be suppressed during this calculation.\
\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6641390649917173`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Infinity :: \
indet\\), \\\"MessageName\\\"]\\) will be suppressed during this calculation.\
\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.66413906504113*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{Graphics3DBox[
      GraphicsComplex3DBox[CompressedData["
1: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
YhO0T2inVOVtpH7UDvNXsLfoH5JOrY2daGeg17m4oCyulpt3gn7cJcb7YGYF
2hnmmS3vDLOESjFPAn1y2fKWG2WFaGegdw272PDrRC7mE6B/Ob9eOLc/C+0M
9OmOrhsOv03HeAz6NCbrZ1cYC+0M9JG1BwteX0rEOAd66diGwjusOLQz0Cds
lAivn/sa4wroz88+kBZhEIl2hvo9j3jqb4Shfwf920TTTVe+BqOdgT51c93M
IVYg+l/QG0/d11z91h/tDPSX71aMfXT1Rb8JeoMtlo//1HihnYG+5OWDgvEH
HugHQW/wcH3rQh03tDPQ2xjtK9nk6oL+DvRlZ1UNbv91RjsDfdvCYL8sByf0
d6CPy/jUnuPqiHYG+oCky5JPT9gTcQ92gj6bRc4/PzCRynhFHt5vctc3biZH
t8++w8OTjXplu0u3l4h9IfwvI+zpzDzUbxV9+vf9qs+kYLpiGJP2HvW6H8Si
rSOLiZl+axab9RH1EfIOX5V18on/zWw9Ju0z6vlt7hlZ27wjYyIv/rIYFaj/
9EGhxX3jG3Ku8oIVm1WFeqtM39h411SSZrNhAQ9PDeqdQxuky/uSyJK9//xp
9DrUj+rx9H7+G0/u/ni/gc6sR33egz8y/9bEkopQzzQGuxH1Nts+HTGRekWE
X29bS2c2ob4ya//qgvpwojTT5zqb1Yx6z61rGTeXhJJ7V6bGMdgtqNdW/10y
IzuIhGVcH5qYaEW96y2FfXNzAkjlos9yTFo76vvy1kq8WeZHeA1kzWn0DtTT
OsxNzkj5kK3F/u9ZjE7Ua2f++fHUz5No0mYK0pldqJedzXsqRcedUzfrn2Kz
ulFv9E8tKequK8muqfJlsHtQb6Izsu5eNpP0b93bOjHRi3qVbS/mSe1zJqsc
QiSZtG+o9xTwk/tQ+oKodM424GSmqO/Std4+X8+BPDpwh8VifEc9X8Gt3730
58SaN+NRBp1JNr406nJXYhKRfK22swpteD7YqS5NN1HS0RL9JOj3B5/Wai2x
IPO1aYdcOHa5p5gpqsyRS4yumnuvKyEm0z5WnePYn+sOi4M7OdLmp6pgmGo2
GaJ7v6HsbK7LhhxK9gVU+wZdSSYpDjeGKXs6mJA4Qkl+vufi6f2vyZ2hmUKU
3UwsO76Qksxvwe1630LJ5kuh6yn7yDDv30jJ9l2axxWCA8iQVuAayg52D+VP
2oOXVITQyxEvoi5sEEutt2eU6+S6b9eQvz+c50oSSvZNruvQRa29lDy2eNfB
xAEnImg6Z3L91BdsLaZk5b/4p/+W2xN9mfqT1DolFPKcnlzPzbmp6lHWpKQ7
qoVaD0HjT5PrksRX2hC00YJI+T28Rd13fWm/yfu/N+3IprtXTclWsYq1U/Vf
EasfsXW3OPu9a9y/Sy6ikuR5b84U4uzneJ+PJ+onsojOci1BlcE8kurF/4NH
P4Pw63SG63Piy5rtAZs8Vxahf4Q4Mn2Lwq9Tr9u5fvB/8UKwcJZS770mMlH1
+/URfR8Sqh+7XJLhQ35XT+03n9OE8Qz8T2jyuczUlno8hjjoeqxYdZtdK/oj
wAU3Esc2417Eob/vjxq6RQS/YPwDf1VZcXPhDIUS9FOgV8/Uv3CroAivB/SV
g1Z9F3rzMS6CHyvcJbSBz+odHkO7kVl1Vz/Y5qJfg3btHzQqhL2y8L6A3jXM
0W6tXybGUfB7RSH/lcpnpeAxtGvfNrUpeXo6+kFoJ938RrPwTTLGXdBLfXx6
tH4oEeMu+MmpzxgrHwzH4TG0Ezo4bc98zQT0m9DOeFznWKBuLMZp0J91SDJz
Wf0a4zT61TeL0np3RuIxtBN0u9AesuAV+llod/SG3oOnNuEY10E/Qzri/X88
YRjXwQ+3lUxpMVUPxmNopybcca3VOwT9MrTrOh0U+FkyCPMA0NMkvi7oWxKI
eQD4bc/UH1MUr/vhMbQrWqi1WHFFAPpxzB9sr7kueOuL+wL0ebz78u9v88G8
Afz8+VLhjLE7nngM7QQ7s/vPFnih34d2wz8KOr/t8sD9BfqSfXkho4vcMc+A
uODK0D/I5nPFY2gnrCl9ZMcMN4wT2O7o3LwzK1wwLwG9tL2pnRJhYl4CcYTn
i8iwSYwTHkM7o7AcCU0DZ4wr0E76VOuynT9eYB4Del2DajlzH0fMYyDu7J++
XyNtvT0eQzvp8hGnrWcdMA5BO4Pfj4Ji5z7HvAf0NuOX3T9OscO8B+KUtNZ2
6f4FNngM7YpiFkh0TbPFuAXthHkUvrRLW2N8Ar3nznLlnjNWpKhFQFyZmUQE
Ht0SmMITR5YEyPXFhNQStvwBxRRGLnniaJjGpL0jw2+WRfgwismJhcYP6cwS
8vvS6z4avZiwdtxdNBGQTToMz1Uz2OWEJTz4gs36TMhY3UxvFosEsYe/sxhf
iKGpcySNXk3yHGbu5VOLIxcV3Gfx8NSTTT2bchnsOjJ+Z+TelHMRxL7ay5lG
byI9aiX1LMZXopQxW60tI4j02OmuojNbSGXD9n8TE81Ett8+XvvFS6JEdr5i
sNvIVuY0Gxq9jThJJdoLVnqQsF/TZZm0TuKkWL6QzuwgwtV9xe5OLoQ3ojKP
xegm/SMBgQx2FxFO+3J+lRrHHs4HH2ezOHV77K1NTBpnXTZkZS/3eU6yBQ0b
Jya+kSitfRksBqceF0l3rQuwJjOE5yixWd9J/41aGpP2ndO/xmv5DZYY7wHn
s7i39Eq1GVELKtfO4MSPujKPLZKcPMJtxTna7WNcHhj6M6mI3XJA2gyPoT/V
jWta9pmZkcTYk6n6nPVqWJTnIsaRKa5Mx4yQUqIaefXFe8566dSvGAvhyMw/
i0tvqb4ju/7Mq2Cz8nE9Xdn1I8//KyTxRcoz9NmluJ7n5uldEp77liz8mLOC
h6cS13NDXvVc54okUiZzeQedWYPrOZxO7hnvjSH2fmPHmLQGXM96fu0LBVlh
JMT8YxKD3YTrKTGsu2XgZSCZKut7gElrxfUUJSvsOgZ9yOW+G6UsRjuuZ8iX
8pHjoe7kbcCuc2xWJ66nqJc7GX7FJCtO8nVNTHTjeooaTrFmHXxBHs36YkSj
9+F61rj6/FOxsiM1b0Kn0Jn9uJ5811ZNGcy1IvcyZfjT2GGk2EbonThHvq3u
fLr2/BfcDwFrQtpvcfAjP5OE8pyb0O49XjVe4uHhxN38O+GOT3LQ7m3e2tPp
zDKy5+ThbSK1qWj3CuuktJi0KuJ3xzxhf0Q82j2PU6Exm1VLlAoqI9tFotDu
M4e13Wn0RsI07hbmHwxGu8+UnlLDYnDsf9u+W1Iq/mj3y9o/abNZraSS5972
saVeaPcPvPx+TExw/OfHduOTlq5o99VHGE9p9C7ipMkUbZnjjHa/farcbDqz
h3QdPqOakG2Pds9k8Xsy2H1E4vD9r3vtbDBvgLwl0eHgGRc+bv4Edf2+3vW0
s0eaMU4DXvsxdcEh+XaMr4AfaYkTMWjswvwDcD3dT3ZtuxsxHsD4Mwu/vamW
7MI4BOMvG9q1rN+vHs+H/ooz7q5W7GnF+ATnKyuEyDwoaCR/FFP9xDjrLn/2
yGDqRCz5xTIb/WVZjnkY5HduR+JXG5zqID8H3aeGcvwjn8RRAxOOfJa5fa6Q
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
3ArUuN+K39fBd3wN731V5mxowv7BfpZIP9M6q9+P3/HB+YfmBQdWTGnA+YPd
5cxePCJ0oR3zdhi/s75t1pmFLWTmoSPRjGtteP9fb3VssPRoISWr/5u0P8Gk
m2KUXG4SZHn0mQkp+L71PvUdXZNs/mNKuv/Q1JQ3ZJGAph1Vk78fNN3kCyV3
fig2H5eJJefplf0UP9XFWPmDkoc6HWnfs8KIcMJtPoqfCqlO56dkU3poy60t
geTUrruikvQmknPn7VRRjvy2emNpSo43KTpQvZLipwQqRyZ5qhPXnoTfO+lG
hIKEdhuy28jT+nMrrnOk8gk5RafzzsQi6s5Oip8qkvOc5KlkzFsfJmbZk5aL
8pP8lPgPnXxKrnj72Oq5pA3Zv2D+JD9lESqjRsk3hQ439jMtiN2dIwxenn4y
9Nr92L+JbyTDKEgugGVK+K3dLlDfH9LK1mlS8pmMw8zVzAwiv0FXidonparx
ypQc3Dw7Q909gYy7TtekeBu7tKPalKTd2X6MxzyKpI8FPab4GcU1fU8o2RZF
UwlICCb3dPa7UTzM1Oe2HpSM1mmanrDHj3h36n+h+JbGhy6TvIui4g131woP
Muyzd5JXkdukeZWSL+L/W7Rkmws5pSowyZ94t0j/pKSchNCcD9YvSF6okttG
ehfp+u18bTlHKpQvtLRStSNrzi5Zo8bsIYpRlwcJR+ZMPAxOP2hFDBgPPCje
I2nCd5L/iK3nP79e0Jzo7tHuob7fNLMY6qdkwhQnX43PqcTA6pMj5U9Ho4Sd
Kbmwv2XZminxZMN3vQgqb0xdwIqi5N3cOiE36wjSdZo/h8oDjYxP5FFS3UhJ
KVgziIRkh7OpvE66faBh8neS3HmS3G/6kgTXoBEqTxsSL5zM12pV7EiztTsR
pN+2pvIudbbbZP71X1xC2iLCJPpjZDKPSnihvYiSJq+7D5UucSSpF4ylDTl5
Ec0zX+g6Rx49ll9yb7stWSx0+I07J88xU3H1d+BIi0+0OSnalsSoYKlyBvV9
Mo/WhgSONJ5W6d910YzQQqbwUt+N7vvmwkdJ2cHQtjWcuqx0t99yyk+evdS5
kpK7Cmoyp6VHE7vgPTJU3rC4yGInJUeSRzQfioUSRYHao1R+UC695jglzXqE
bS2WBxCz3Xsm84CCkkvJlJS0Dl6ksseLNPXPmoz3NNNN8pSUkHoq3rPLlewL
rvlIxXUzmbHJ+H7tvohjn40TsZm2qOcrJ34P7r1YUs2Rs2NO3Z//9DkZmX2v
k4rT+/y8J+N1UN23ZV2brIlGtsJkPPZVu36XkiF8LuKfP5gTltGCSZ52ZIbs
VEruWyO8J2OxKVmskyxiyIlfZgHjU65zZFecx+0Or2ckxmL5YjXmd1Jeqd1F
OLKaMNedX2BC2kof/UfVuRJX/CfrXbfFXT2/G58RjeGmZIqn8LWbnkLJbGPd
hIc7TMju5tFgKh6oSb2IoGSJq9HsnbR0cqbW5yYVR9rH2hiUPMWjWH8uP54s
kt9lScXHQB0za0qem3d7xYWnkeRzVLUf5VcvfBIJpOS96/Vrn88IJg4LjFKp
PG2p7Jt0SiprtArYHX1JxN/yTeZjN1Q33qAkk+fMWl0pD2Kw6pAlL08bqddw
vPaPk3/t/qL8YG8Kk7SIh5lR+ZV4WvFknjVjTUJdTIkjUTVuEVejft+2ZP1f
wpFOByr+WmbbErs98esNOfnS0N2ROdc5MmrN8NjlcksyelDo//vdnOodUpQs
N1oivo5lRt7s7j3vu7oK48hkOc0zgHmCXOOFFXffJSIO8avebO59g0UpiEMd
npM/5Egry0Ac6uo1j9hFbR/eIg51cskGvtDNydmIQ91rUje6Ubz5HXc+YS56
kcmdGI8Ah/pWy139c1tWLuJQrx467vCY90c+4sCTT1PeYnhgohBx4MFe3e8b
0vnxHvGB7nu2/crvyYwV0+0lZkZzr7f8Nytz6DPZcelehOVEHOINrQPBq642
E5Uj+anLDN8gzscsluUTbiM1Do7Gqy9zr7eHs28ZmR2k00NOYe1H7vUuClf3
+O3bTVaSA04JUnmIPy0wX5bkwclHenOuL/tRgHiKr/uLAYvvJMOwgv+RKXf+
R592d7TNziBvWZ08ppaBiCvYJf1bEpdBREJfMHTyuPiN4HCbibPuxHV0XnKo
vj3iwB/ubnK/ejaMifhgVLzx5Y+B+J0X4Ebb1AdUDPJJ8hYXg1e/wxHv1De4
PlhXQgpt55w51RCD+IvgvJ8uluXkWkqxt+7peMQlSqbyzrFJJJ9HR/pi3f0R
hzzmSfSRFYdZAYjD+75Ss6LnPVjhxL2u/9n3sfLNMkqn/RAHe9Kf0burxTIM
cchj1A5m/hovfI045G39knIfSWAU4pBPLnoiM6qzjTv/gxYdhuR5NbH6ksrz
1Za7jwY3xudfUPlC5m/oN24XSOLaj5Ze9ym3d2T1x0yxS8KhiNf30Fy1pkSS
uvmfZ1au9kD8sdvBhm6lOOKx3Wy1sLI34pD3PgwOeKi3jmufkM97ZX6KE17C
3e9Qz/6w33kw3jQZcdkvi7cZfvcgz2anTmS5OSAOefB3ve8rkuq59mPdKxSf
KRZE3BnPro294NoDPH8yUv02qL7JE3HgoxPDL4X8qeXam8da0xcj71PI1MAM
oXl63PX97PGkVP3ZG7RHtPP/5cl546En97oGIw7PQbyfapqW8nHvT+mPmJQ7
jTHk7UvDID8pL8RnXis/EzIaTcZ64mLbjnHnCb+jsU/swJX5FW6IW7XWyGpx
6umVNLnZQR+41/u1VlTYOzSUnNf0K6lMcuXabdmnYwFzXpIZwd6KCpFc+/zJ
W/F6tWIuGZPqNV+6l2uHkGfLhzTNHFbm7iO9282eumH1hNdjl1bfeq4fdr0q
mCFzqpGs9RyNPjqQivguvu6SQcs64n+DNrGxi7u+P1u8fzcN1hLnTWdnXbbj
4pD/vyxq882w4PYzU1RbWsiinjTWG4YoL+SOW5fXwpi2txD32fzzoYUXFNsR
h3127p3Wqo7yUsJcuJN1TZj7/8XMgm4OTT/cRM5pva0Tp3P/jxjTddqXz+s6
CUPuSt1Sq3bEVUwE/LLufsN+YL/aTf0cMUP3M/aD/99hiZLjWFY9ebaIt04g
twfxffdiAmf97cJ+YB9b/JK44PAgG/sB/PZDsevhCZ9xPoCrZTeoyZfXYf+A
Pzyswe8xrwXPh7g6d9mKbROFn/F8/D8SLx6dDf1ci+dDvI2MM6ia5VCA5wO+
YFn604Wd3H4gDj/OeDVtZXsh4hCHvW90/Bef/hZxiMPbK7NkjaclIg5x+NE+
puGDXWG4jvkdx+62SGeS69p+Pw521uB9y0x6Uy6cm01ie+dp6q5tQXy71fD0
V53vSeW2h+f5rSvwfi68V3Ejm/q92ebNrRJTO3DcvOFx73m5RYR54sJ347+9
2E/1Ky/fVVafSV3ct4FdvLnYj/1/c/3UOPWj0JnYmMt0Nvazqn1FZ9mvMuJm
urzi1Mw2vJ+bGLHbC6QriYWv6sSGzmo8v+5IOs8yqypywkRZk5ZWj+f3VKkc
nZdbQ2qzhpo3fP6I57uzTi/TEq4jahIxPkeFKxFXE/m9LTqqkZTUsqczV3xA
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
mNLks6QD/gOQ6R0e
       "], {{{
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.8], 
          EdgeForm[None], 
          StyleBox[
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1:eJxNnHf8j9X7x+/3PdLW1JLSoL2nmdLUoNKQpESl0JAyyixp0VAkm1J2oZCZ
b0RCS0tJg0KFUFq/19P18uj3x/mc630+5z73uc+5znW9rus651S8qdXlLdMk
SUaXSZJM+Ur9GVtKkupKw/MkKaeyp5RXVL53Er8PVdpHaV+lb1S/k9KPog9z
2X5KM1z/YJ4pkqS16uyq/Fq97Ei1XVnpaP2urP+frfwlveMg0c8qf9nv6638
GP3vCNHnKO+kZ65Vulm/2yivq/xKpWGqt4fyXsoXqP35Sv30u7meqaT8duWn
Ka+pVEPpVdWrrvwF5UtV9xOlgfp9qupVVd5V+Zf63y16xxd59LWCyvdUGqHf
Jyvvo/wTpev1v4/z+NaK/l7G7RD3fx+P1yEem8P8+3965xylvqKfVBsnJvGd
V4jeXXl5pRvUj2eVX618O7X1j8bwMP2/jspqK52r1Fm/Gyk147tU73vlNym/
2P8/T+mRIp6ppvwufyPf+oXaa6e0LInxOUbpWKXTnR/nvh2p/CR/O/Rzyk9R
fpTS0Uqv5JE/r7yb2q1Ge8rv0LPniL5QaZne00HpG9HdVN5C6Q76Voq5O1Cp
np4pwxgpr6Xyp0W3VXpX7TZSPkb5IJUfoiQymax6OyqvrHxkHmPST/mHSjeJ
Hscc6n+70Nci5ooxZqyXqi9tlD4WvVz17lT+uvLBebT5BO/UMzuLPlL5Qr5b
6QHGznwED8ELfG9Vj8cpLuuhtl/R+wreqXmeqLyM0nkq31H5g6rzq+hflLoz
r6rzsuuX9Hu68h2UFiSRd6B91Zkmemf17TvRQ1XWEj4RPYVxUXkl0eNFb6c0
V//bXnk75f+qfFIpfp+bxbtS5kf0pjToh0T/YfoQ5WeovVz0KaK/hy/1+2aN
RTe1d5Xy41S+UOW7qvx8PbuT6E76XyH6/VL83kX0z8rLKt0iupnS6XxDEWX/
07M7qewH2lE6Rm3+j+dUnqn8nVKM19kIJ+WvMB6iv6KO0kVZPPcwPKdn18JP
erar8luVmvMYzJLHuvpd9ZcolRX9jPkL3ropD55qrj+Hm8e20+/BpVhz2yfB
e4eWgke7qt51aqeL8v4qq6ey+pZFyIpn8lgX8ErfPNbWaeadbWuM30307E1K
Z4pemIfcnK78xjzk8a3K31b+lNJ9SnVU90KlUaK/5f1Ka0VvVP68+fOqUsiR
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
CeMA/9HP1e4Pd1w3Mv/8HxgUzuw=
              "]], 
             Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[CompressedData["
1:eJwt0K1Lg1EYhvGzsYEgFoMaNvADwSSiYDDoYI6ZFGxWBQ0DTVZFYUFQYaIw
mGULGgxGk18oMmz+AWLS4jCIYJHhb7wL13vu6z7nPAfegeWNxfV4CKEbSdz6
LCVC6JN7ccN3MCV/6hvY5at4lg/RZW+NP+KH/2LC0BVel4diIcwiL/frcjiT
j1vu7ih/QhopdOiGrQ8YN+c1Fs19ac8rYA5V/Zf1Xn9hrSDr7iTfxr79D907
tvgernRNfokFPoOqfIBOd0d4EWXnTnVv2OR5nMsnGHRujN+hxkvo0V3zEqb5
N/5wxDPJ6B/Nt95MROf+AT3IMCA=
              "]]}], Lighting -> {{"Ambient", 
              GrayLevel[1]}}]}, {}, {}, {}, {}}, {{
          GrayLevel[0], 
          Line3DBox[CompressedData["
1:eJwt1OdvTmEYgPGDGrG3okqrqqpqU7VqF21R1F6tVav23lvEB4n4YO8YsfcK
Mb76c0RC8LvDh6vXuc79vO05p895MyprytfVSpKk2I8sbo/ylCSZi2mYgw91
k2QqZ/BsnoIylGIWOjtfwhWYjJlId24SH8FxHMYJTMRRHMNGrEExVqOLz0zg
DajEKszAeizBSkxHpnXVvBiHcBArsBY7sQPzsRnzsB1LUYXlqMEu7MYebMU6
7MV+7MNCbMEiHMAybMI2LMA9z+muZ/aRr/N8LqqdJK0dt62TJG/1PJ2rz3E8
42yu5+AXP9BneIK+ze/1WS7RqT7/Ti/Qefo8u+Ukh+vr3/xQb+Pe+g6XWbDI
uR+ubbRuxx38nmFxDzqTL3BTa3K5sU7MH9EO3SvuiZfosZyq08yHx7PXXfki
dzDP4ya6tvljvUvn6/tcpcdz+9gD5iP4tGurcu6b4yxcctzNuvy4Hp1i3RO9
J+5HP+RlsSfj78W+MB8Z/4P4HF+OdeZ9uJmuZ/5U79N99GNeoSdxx9gv5kWx
R3Q2X+EC83782bV9ca45Glj3zPkDzvfVT7lal3BaXLv5KK7W3fkqF5kP4Ba6
oflzfUj30895tS7jTjrbfHTsdZ3D1+L/bz6IW+rG5i/0Ed1ff3Vtf/ilXuv8
VE7XOdaNif2ue/B1LjUv4Fa6qflLfUwP0K+5Jt5r7qxzzcfGexD7k29wuXlh
7N94Fuav9Ak9UL/lDXoGd9F55p9c2zvH4+J9db4n3+QK64ZxG93Sutf6pB6k
3/MmXcEZOt98fLxXsc/5Fs8xH8FtdWvzN/qUHhzfQ7xFp3Mj/Z2H8hAUoiDe
d/NM51O8Fz/5fjwHv2fr/++4uVzKs+PvuIeZPA3D4zss9i6GOB7Jg2OPxj6p
+++78S84bXqQ
           "]]}, {
          GrayLevel[0.2], 
          
          Line3DBox[{1330, 1353, 1329, 1352, 1328, 1351, 1481, 1327, 1350, 
           1326, 1349, 1480, 1325, 1348, 1324, 1347, 1407, 1406, 1487, 1323, 
           1346, 1389, 1386, 1387, 1345, 1433, 1388, 1365, 1448, 1369, 1451, 
           1368, 1443, 1445, 1444, 1376, 1427, 1428, 1419, 1490, 1426, 1425}], 
          
          Line3DBox[{1337, 1355, 1336, 1354, 1335, 1483, 1473, 1334, 1412, 
           1411, 1333, 1393, 1408, 1488, 1410, 1409, 1332, 1403, 1404, 1390, 
           1392, 1391, 1331, 1370, 1434, 1436, 1435, 1366, 1380, 1452, 1381, 
           1453, 1377, 1424, 1379, 1476, 1489, 1475}], 
          
          Line3DBox[{1341, 1356, 1340, 1416, 1415, 1339, 1486, 1397, 1413, 
           1396, 1414, 1338, 1405, 1363, 1394, 1362, 1438, 1395, 1437, 1449, 
           1454, 1450, 1378, 1463, 1385, 1421, 1431, 1432, 1420, 1430, 1485, 
           1477}], 
          
          Line3DBox[{1342, 1357, 1402, 1398, 1399, 1401, 1400, 1441, 1364, 
           1439, 1371, 1446, 1440, 1447, 1455, 1456, 1422, 1442, 1372, 1423, 
           1492, 1474}], 
          
          Line3DBox[{1358, 1417, 1359, 1491, 1429, 1418, 1384, 1375, 1367, 
           1315, 1360, 1361, 1316, 1457, 1459, 1458, 1493, 1478, 1317, 1460, 
           1462, 1461, 1466, 1318, 1468, 1464, 1467, 1465, 1319, 1479, 1343, 
           1320, 1373, 1374, 1321, 1484, 1382, 1383, 1322, 1344, 1469, 1472, 
           1482, 1470, 1471}]}, {
          GrayLevel[0.2], 
          
          Line3DBox[{1212, 1492, 1290, 1270, 1274, 1273, 1218, 1304, 1305, 
           1303, 1233, 1293, 1211, 1287, 1286, 1250, 1285, 1249, 1248, 1203, 
           1251, 1181, 1197, 1486, 1247, 1180, 1196, 1261, 1179, 1195, 1483, 
           1178, 1194, 1177, 1193, 1175, 1481, 1191, 1173, 1189, 1169, 1186, 
           1482, 1313}], 
          
          Line3DBox[{1220, 1489, 1268, 1271, 1216, 1298, 1219, 1297, 1209, 
           1291, 1210, 1282, 1204, 1241, 1281, 1240, 1239, 1237, 1238, 1256, 
           1255, 1254, 1253, 1487, 1252, 1171, 1188, 1168, 1479, 1185, 1165, 
           1310}], 
          
          Line3DBox[{1230, 1490, 1276, 1266, 1289, 1288, 1267, 1223, 1301, 
           1300, 1294, 1302, 1208, 1280, 1207, 1170, 1187, 1236, 1235, 1200, 
           1167, 1184, 1307, 1493, 1309, 1308, 1164, 1183, 1306, 1262, 1224, 
           1312}], 
          
          Line3DBox[{1272, 1265, 1491, 1199, 1278, 1264, 1231, 1215, 1206, 
           1163, 1182, 1225, 1198, 1162, 1314}], 
          
          Line3DBox[{1279, 1485, 1269, 1232, 1277, 1217, 1299, 1222, 1292, 
           1221, 1205, 1295, 1296, 1284, 1202, 1283, 1201, 1246, 1245, 1243, 
           1244, 1242, 1488, 1260, 1259, 1258, 1257, 1176, 1192, 1174, 1480, 
           1190, 1172, 1214, 1229, 1213, 1263, 1228, 1275, 1227, 1234, 1484, 
           1226, 1166, 1311}]}, {}, {}}}, VertexNormals -> CompressedData["
1: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
A7lEX40=
        "]], Axes -> True, AxesLabel -> {
        FormBox["\"\[Sigma]\"", TraditionalForm], 
        FormBox["\"\[Lambda]\"", TraditionalForm], 
        FormBox["\"\[Rho]\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
      DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
      ImageSize -> {393.44921875, Automatic}, Lighting -> {{"Ambient", 
         GrayLevel[1]}}, Method -> {"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
      PlotRange -> {{0, 1}, {0, 1}, {0, 1}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], Automatic}, Ticks -> {Automatic, Automatic, Automatic}, 
      ViewPoint -> {2.5891200533184255`, 1.3590420778854249`, 
       1.7027806611660983`}, ViewVertical -> {0., 0., 1.}],FormBox[
      FormBox[
       TemplateBox[{"\"SN\"", "\"Hopf\""}, "SwatchLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> {{"Ambient", 
                    GrayLevel[1]}}, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.8]]}, Lighting -> {{"Ambient", 
                    GrayLevel[1]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "}"}], "}"}]}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{Graphics3DBox[
      GraphicsComplex3DBox[CompressedData["
1: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
MmOxvxwMUp7hDyqbbtbsTwBp4RslTHoPmAW4l5KY9aZKV217FPajWqd5Znh1
uR1LFxfEgkP+rpNsZh8UnzQ+RaLhjU2shNlh2L+GLKiZkY9qRrgkOEVBl41Q
9/R0P0jPV+ohUTJDZHj9uyDsd3lz/WbkQvljEvdtwoCLkcotQxuCfAPp9tUE
qm8+VPe72B/744u3r1tSCd5NJ6lqmhqM9w3RvtOKru0+7F1fcBnt66xwfxsc
ldkFHjGU3wHUPIj4kmRsR6DU2vyhpR41cCRg9ziVlg9rtZqjGQS/bFzIalVt
AwhOlLVTaeUgqW7YTeLUfcfdmvplUHjzvkwS/TN4rlz6heS/JZ2+d9OlEjQu
cjuxmdVQ7njoBYmUX/G6WVvywcf/TBSVVgOO49LPSb511aGFgjeL4V+prz+V
1gBO3/sDSYy8dUvhoXkWnBH4U0BnN8Cec/kBJH9R57JafWIupCpBBp1N5Nf6
jp9IdCub3yy6Ih2W3XTvYNJbgFJ4IZPk/2k7iMsEs0DtsPlVNrMd7DoYZiTe
2158nFc0CfrNPaemp9vBwIMyw+ukf902VzcNPGfv+DU93Qmtb8//JpEnR7LQ
4nA87F93xYlK+wLpBz/PyCuu7oxzKmLCr6R5T6i0blDTkncg0Xr6Lt/AqRgI
qt+6lMbohhWzvGfkBq/SR4x3xcNxs6aFNEYveP77J0ziYfs5rnazIoD7BW8A
nd0LtxPNZnhpB+2vTVYxkCAe6k1nE34uruwjiQ7emx+c3RYCRuq18gxqP9Rd
UZ3hqcWdY9ImESBce2sDgzoIxy97yZKoNFV9MUs8EFhj/hlM+iAois2d4feE
np+7Ny0E5AfXHEijD8NY8ivJOAIVR4Wv8rn6gViopRabOQyMqoZkJsG3p1qf
/xUXiPctUbz3K7fKcbedP97/RPoYxD383nGiA+8PIvl0sc+tD7XtoJ75/LkE
JRlMqX+Mm6eTYMmTIYaMRjvEBS50kKClgt53jd8UQv5ymE9R4fcX+CspE2jO
SAeJl+52EgR+eTXLZ+H9ZqALRn80Z2eCkH67sBbBU1XjteYadYCk7+ruJMLe
HpnjzDIn8DX9ovXej10w169YYpiwq2K1D12LCMztCX54c6Ie7Prc55P200Nh
vTCJDdPvJ63sK2B28Kjz3rVV4GVoaLqHQKFvK+Z90S2ETwtcQpwT6uBk0dTj
lwReOQ17n3zJhru3N2bXa7JBZPP7D3UEir3j1/TakglyElWMunzCvnlE0moI
VBQ25w1jJcN4/ta6V7KEHbMLjHUmUFt//qljjATQvct7IeEmYa8UrXbGE/ih
xbB67YlYYL48KvKvoAcem/I9miLQsIhu9+RxJBz/GpPuzEXkxSdf/HhJYITO
MTjtGAqW48Mb9+kPAFQHvtckMDmyomPLmiBwNtF1O0TYEx2l7Ot7CDT7OO+5
lo0/fLDUX6ZFvP+ChsIfFALTVvdcPGXYCvlzTWArYR+adqyOFCbwjeL3UbOg
ahzfIPtx8saPH0Oh9aB2VEmKtA+6ngUbSGTe2/fWeW8pjm+Q/bgnOp7E31cB
+gu3RZL2oUfpYTSJLpZiu+vs8nB8g+zHpDdrgfCHIlhiU5tP2gc/b7EiEgUd
mvkOjbJwfIPsh23v2t3u4rlQ1WnZTtoHgznpnSRyCerdNbiUhuMbZD/Klg1l
tqiwoFCCb8Y+CCTL/iPR7YjYxKw3TBzfIPtxUqjr/enYVJBsqntG2gdTs78z
dqJ9z9F55j1xOL5B9iNLUFlv7UEm2DsHLiHtQ6F48YyduPk5JkFuTgyOb5D9
CLmpui2tNQ46Naz8SfsgWesxYyf+5USHjdiG4/gG2Q/B2TeyvkrEgPqExox9
sH92WYHEyDM/S4JKg3F8g+yHrbrjUsG+cPAOXzhjHzp3KGeSWJWdpyNTGIDj
G2Q/KsoKVy3QCYH07LTmNsI+2L2SSa4j8KTANYtzND9sF5D9sG3pFPE/HYjz
ebSf4JN2xEr8LBPvA6D9ioaJREd5iSS8L4D2K47PN7m4zZVzrw/tJ4hdH29V
9E7E+wKoXaik6Tot/VgI7yvWJ/PTbzYjp0kUZ/dJPU31xXkrmqfzPAH1X44h
mEf7CqbNIpfCWUE4/0TP51i8ZMuABOccEMlHV1VJv24PxHkuzo956q4J5wVj
HuW5CcFZOy8KBEEnf8Y/SlIiCFhsaEoi8tek4yzm/Hsd2A6ivNZ39t9V2950
g8nxd3HCRN5q++yI+PB0DsQ+EH2b5F2L/TfKa7v0RceOrGyCVi9jTzJvHe/+
5U2iXEeo1gu7cuy/UV6bT/MWq91dBbJJFcZk3prMXn6FxDWJ3tS6kXzsv1Fe
6zPxeFrzZAn0rTa3I/NWqz1Jj0gs/1N5QfxbFvbfKK9tvb2uOPxoHgQ4zvMk
81b5SF0vEsfdogpLa9Ox/0Z5rdDb9QWBS7Mg5nZNI5m3js39PZO/LnriIPsp
JAn7b5TXFoYsum40mQaCG/2NybxV51PBTP6qIuBem5cWj/03ymvn0s+ZfNNK
ArOO6z/IvDXmhttM/ip7+VqxcHQM9t8or32od7Hgd1A8FL9Vn8lbBaUvPSRR
PrM9MupZBPbfKK/1U2K/Gc+LAWmtBTN5q1nzFkESy3bqHawNCsH+G+W1367J
WboMRIDDv5Z3ZN5a7ML1nkQ/icP8tncDsf9Gea0m5Ycav1QoBCx2THEj8laT
zp9vXhKYXqtz/FyrH/bfKK/NfGbVcZjQtxoLbvcWaihI7+g4dIBAe5GBdRc1
vsJJ9oSCK+FPH+0ynq9FICOsUcWpsgnnIcjf7q248/fS0XZYq1hkR+a5KvdO
PyHRTeTI/saJSpyHoDw49d5Tnjz3Wijn4moi81x9qQPNJP4u6Vb5olWM8xCU
B6/yv77qmclncLr68QeZ5y5x6ftJ4uTmsvO8irk4D0F5sOSVHIO0eYWgWaM2
n8xzq349WUCi+C3f7wN8LJyHoDzY2qnYVIcvB7h2NEmSea7z+XUyJKbeYJ06
uSAV5yEoD+4Yz66c25wJ7VWqM3ku9ZLhGhINRHq27X6diPMQlAfL+1lL/72b
Ajufzp3Jcx8t3xRFolZf78qGVXE4D0F5cKzhSZ2gM4ngpdq4ncxz28umZvLd
Ly7PDqlWRuE8BOXBNk/auCLWxMGfkeB8Ms/d+ah0Jt/tjJJ+JXU/DOchKA9+
43onzlo0Gk4GWB8j81wv5fcz+a7mgcHWtVNBOA9BeXBNebqezvcwsE4Tv8FN
GQIVR2ftv0S+a5IzvfzlqgCch6A8WFpp4sC0A2f/Ftl1gSCRzlR6FN5PQe24
KZqefu/DsD1H+8f6+qw/jKFIbB+R/byo6vL1xBZ/XEZxqE67VaPbKX9sfxHv
MKm06cmlILx/iNpljtv/TdgWhP0H8i91yjae484x2O6j52iHS29nj0fg/WTk
x0SU+hXOWkTi7ws9n7Tf05BZrFBcD/mjZJHy0IFvUbiM/CBTyrS7UjMG+1n0
faufPxS+8kYEfh70nkTLGn9b3I/AfgiN/+1f4zqt4RDMo+cQ72K+Ohfsj/tB
/k64d58Czwhn3x7t92vY3y6f94NzTx71d/uadFwdIwjbEZSPdl1dZPtcNgzH
B8guvVDwadv4LQKPh9qxUuK4R/VCcXukP/vXLa7Rnx+O54PWR/PH0KDarWis
N+g9ja1NSS58GI7PldH5/tS817NurufcO0HPpfgk9c0FSgweD823Pe2s96zf
4Xg8dK5yU97XYmw8CbdH5zMbA5+911SN5/ze4D++njnbyZPIM1B9FM/U3R++
3NYQg8/P0DmmwQmjzR+aajGPziuNJhZpp1hX4HM7dP7ocfitroBmIT7HQueJ
Cw/eY/alVeHzNsTnaubsjjQux+d06LxxRGKif8WpfNwPOmeUlh+yvb22FJ+3
ofEVRcT4H/jk4vMnNN80tcLfylsq8DkZ4lfs8n9ctrQYn6+h8V0uumotXpyD
+0Hz3bzA94IKFOJzMjR+zAQU/ozJwuuC5st6vKWXe1spfr+Id5hu4HnOyMfr
h8YXmrPDXOEaC/eDf3f5i/nnqUAeXkc0fvgnPga4Z2IezXfzig1uvNXJHH36
79ztzoJS79ALHB6NX3I7Ou1PZiJ+v2jdPearjQ62V+L1QOfYpuPH+QQsivH7
Quu++6pKxArfz/h50LqIBXDvvL6kBI+H3lvIvqV/Mi8U4PeCxp12zZ+QsGvB
PNK3m19GTQY66nF7NG7X52Te3BvV+PmRXg2mvGRfC2rEPHq+q7OS32sk1eD3
iOZ5/dPZ/JdFFfj9Iz1Z0mjy6cedOswjfej19JnPs6IKv380L5VpCYqJQhm4
2Ib1/1pNPPfIE99xAhto9474nKkATdMNV0n75nb1aetrAqtPGpQxWnwhf2Tz
LfK+Tvu2vLskjp0vulu64jP4tCvXkvdgZHns6knUTjgh/ZTcz6TVDJP3S/ro
q76TWGBg8U14SzYsi7vOR97bCKhLnUticKhP9RnlDDB9OWfmPkTUasJsEygp
L/L127ckKNxVt4q8ZyBQ82fmvsHwhKelyo94kBwPCCPP700di2bO8bk/1Jq7
NcWAfdiNreS5eKGax8z5+OXMuNkbPkdAp4HGzHmz5HfjPBLnJpZMiLeFgPqi
hTN+yz5QSYfEmtTX0eGhgTD36duz5H0maoWUEYnfzHWqjp2tAg1Zk/3kPaHy
I7FaJLqdEb+3OrcY/r3hMSLv3zilaF8k8ekilQ5N+1xInfK7S95r0Vw7eI/E
m0/+KNjsYoG1sfpb8r4I1/Nn7iTasIRq7Y1SwbPXvJ68h9F6x3XmPobYuNiJ
UxWJ8Ov9jpn7DWpyRpdIPMu8xWrUjoPjRwRm7g14dsqPkvgi4JxDvVg0JHCz
75Hn8b/cpmfO5YN41ta7p4eBcEroXPJ7O36gfOa7K/JjWc6XDwYT1Yv95L2v
R/bjwyQW8uq13WuuAAuHz87kfarJsGWvSfz3d9bOjtFCkB0xCyHvKSUvYoaR
yLTUlZHTzoG+E3Ozyfs/VrbHckmsydp8q7ckEwJYwWzyXo1897cWEidlfszz
FUuBuDd+f8j7KuOSBTP3Vn6tPlsj0pQAQrTrT8l7ILrstzP3QbYky67f+CoW
zKdg5n5F3KuLi0kstZb1/TwcCaWxgv+7x7Bnix+JqySmVMMLQmG9cctG0q+Y
/5q1iUQrj5Cny0yCgBowi5u8V7ZzyJWPxM4FwYurykqhXMV7JXlfS/9c7yoS
FztP8yk05oGTv6oSeQ9qSaH9VhJ/5f7oyNyUBZoCjdrk/aIq+bVHSVym/25j
d2YaPFJRnbm3k196LpFE5YoS7uv1TGgf5p+5D0N9KKdBYuY12cNPV8TDTv+G
MvKeySOlqZn7JkaqZ3rU5WPA60SwPnl/o/1rycw9DuuefNv8zHD4M8+6l7wX
sdPbc+Z+xNFND25s4AqBk6w9M/bTS+fKTRJFNH4u3TwWAGLsxev+tI9AYtfi
deME5ltcSb+w0Rf+ci/V0yLiPau3fxcfINDp7unXHjd9gVZps6+JiPdyDD7u
byZw2aH7QuHHfCHqc6hpMhHPaMarcSUSuGflAi1eD19Q6Zj0J+8B6qx/FUKi
bfU7odlulXCq8f1V8n5d91QXncTGejk6b20RLNbY/oS8t+Zr/OgpiUrHXBJ8
u3OgMqzOm7wPdvbzal8ShfRuM2b5f4KXi6ySyXtWy7dlpJL4qIM/JjQjBSQz
+f5n949sNCXxxRETZcVjiWBvWf+T9AuF3JMz/kEj0sydMRQLnZJBj0i/IJlS
POMfypdp9MfbR4E622oB6Rfs6e9m/IPKamXmU/Uw8H61+3/3U9eYfCDRzd1L
uaE4CH4ur3hqKFCB72fOXPOifMP3Ba2O/2OrFediftOoEe8qwybOfcj/eHS/
7Xa4nZ7Ps1LMo3tjna/u7114ugLzyN9UvI53NNtShflik2cBX4w5fxcF8civ
bH+VwzimW4N55CcWy3kU3DhYh/kKe9kP65x78b1BxCN/7xThbr7rUgPmUfyQ
szFqU4d1E+ajPxhrNDkP4udDPIrncyhMtUnXZsyj/Z+Lb0rNt6e1Yj5uzCb4
yL8CsNK067ONz8C87N+hI2csm+H7ww18XLfKML/unWJBiXInHH/1Q+oGlfMe
PBz3Pll6tgfseW47ZbXWYv6xwNXopc/7wTtAIu92SCPme065c3uXDENoXbue
mnsL5pMnF2+ft8YX5hWNjtwW98W8Gvw0nHroBy8Vl209IuSH+Weu758+s8uH
j3flv9mtS8e8ZchPLyP7Sri4bqdsaFUO5nWVH3z7JZOC7xUjHp0HdLa6HPrs
H4/5dN2z3Rfb8rAc8SiO36gh9+iIO2dcF8+5g58CEuCp/ZcXS9jRmLd7eVDi
qy4LsrtOan9QYGKebrux56xsJkyEjcaVzEnEfEjXwQdm4ZEgtFn5AY98KObR
vFuUTlSbH4zEfLOgOcwt4NyjRjw6VwuRORkephGL+ba/s9nGJxJgr2TZI1Un
zjxHtj+LKuYJgaPzPokujg3EfJBwQXljTClscJG6yMWbhflAYy9z+3epEFyw
YuLkKs57Q98hX7fdrpUPWZhH970fXXptqOQfhvkCe/q/qj4/MDbd6927n7O+
70MMHLzYQXCqL7yaZxFnPpsFTngWEc+5jdfLT6g7mPOdsiU/u0yFQlZHTMdJ
oh3i2bN/OjXvDISwhkTJ1G5/zDOEP6+4kxQL83NWTy58HYF5wZWCZcK1YTDM
qF+6xIrT/+ZPkarKfZFgfVxo7ZAeZ13ErxxPuEjzA4v1RjW8Ixy9zXotuDpl
Rw242gXXH9qcz6nfHequS8ShdneFTE+85vAoT+w9yNA7eofDm93U6h0wyoHz
Pe5TMiopmEf28d2W4PNxm5Ixb/QjMHGWUBZef8TPWeN2aFtbPayvtVRYa1yE
eWSPTkS0Frg7FGJ+yQ/Fg+dEarG+Ix6dl6XXKDpv/c7R2znP/ql19hTieWUe
Py4gpNoLFkXsWlY25+9ZfabR3iln9WMe2dVFKv2/jh9pBjkpL02+Z5y/T7WC
feeAVucA5tF8z3XuzuSX6YSAK1prY2K6MW8MZ9e89R/E9ZGdfDZ14Xy/Zw2u
j3jGrPfnyt90wYqIX1MnGvoxv5D70h6hY0O4PvIbVTI7xa/6s3F9xGea3K7a
cKoH88ifpN40XaCq14555Dd+bvcMfXK0DvPIb3Q4tR1KXV+CeeQfNk/df58Y
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
H40rFKK/PnqMsw+D5ml+atHbfvYg/B9wiM9n
       "], {{{
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.8], 
          EdgeForm[None], 
          StyleBox[
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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

              "]], 
             Polygon3DBox[CompressedData["
1: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
              "]], 
             
             Polygon3DBox[{{920, 63, 766, 743, 996}, {803, 87, 770, 757, 
              818}, {1002, 819, 804, 5, 978}, {1002, 644, 801, 903, 1018}, {
              923, 822, 806, 11, 906}, {992, 681, 815, 892, 984}, {924, 11, 
              748, 749, 997}, {811, 23, 752, 761, 825}, {1009, 888, 896, 672, 
              908}, {1004, 828, 814, 36, 910}, {996, 743, 793, 644, 978}}]}], 
           Lighting -> {{"Ambient", 
              GrayLevel[1]}}]}, {}, {}, {}, {}}, {{
          GrayLevel[0], 
          Line3DBox[CompressedData["
1:eJwl1OdvjWEcxvGn2qpRSmtTlAheEDFj770bRERERMQr/gh7b9WIiIiIiNTe
e9aurVqbakurdm2fO158z3V9f/ed59znOc85adNmp8+KiaKom5dVsVHUVP9c
IYp+4BM+4gPmWfsuy/AehbxUlmOuXiLf4S2+YY5ZsfyKorAfTcyKwntgAdLQ
AA1RH2/s+YMCJPLqmI8vvIL8LWNkI6SiMeLQDPGIUA1/7assY1EFCaiNSkhC
XVREMuogBVVRE7VQA79co578KXu69D73p1iO5evlFf5NxoczyUwvebILXyRj
ZHWzZJkZjiZTeLrM4Nf0clkxfDa5kefLrmSxLOA/ZQrvJffzo/q4cP+dayzy
9Rvm52UC4uzbxHfr3bGEF/Ibem304Qf5MX0CHiOHX5CVwjWsb+Z7wmfGUl7M
b+p10Y8f5sf1iXiC2/xiuN/hu3emTki0b4v5XrPeWMbf8Ry9Pgbwo/yEPglP
cZdfklWQbH0r36f3xXJeym/pDTGIH+cn9cl4hvs8W1YN72F9G9+v90epM43B
CvMy89tmqRjCT/JT+hQ8x0N+OTx/SLO+nR/QB2Il/8jvhGcZw/hpflqfihd4
xK/IamhlfQc/qA/GqvDb4nfDtVHiTP0xwvys+RmzaXiJfH41PENoa30nP6QP
xWr+ld/Tm2MUP8/P6tPxKnw3/JpMQgfru/hhfTjW8HJ+X2+BMfwiP6fPCL9x
Z0rH63Bvza/LGuhiXxY/oo/EWv6DP9BbIp1n8y9yJt8gX/DvsibvJvfwQjma
r5O/eAJah2ebr9Gz9HbIQ264p+F7QQ/r66znyo58oazMx8sk2V3Wkl1lhvN3
lu2xXm8jW0b//+P+AaVHpLw=
           "]]}, {
          GrayLevel[0.2], 
          
          Line3DBox[{913, 927, 912, 926, 911, 1012, 1004, 910, 991, 990, 909, 
           980, 1011, 1009, 908, 932, 931, 907, 943, 944, 939, 953, 967, 975, 
           947, 966, 1015, 1006}], 
          
          Line3DBox[{918, 928, 917, 995, 994, 916, 1019, 984, 992, 983, 993, 
           915, 989, 935, 981, 934, 982, 914, 945, 951, 956, 969, 974, 933, 
           968, 1014, 1005}], 
          Line3DBox[{919, 929, 958, 957, 959, 961, 960, 979, 987, 988, 986, 
           985, 946, 940, 955, 970, 977, 949, 971, 1017, 1008}], 
          
          Line3DBox[{1000, 998, 925, 1020, 997, 924, 906, 923, 1010, 905, 922,
            904, 921, 938, 942, 950, 952, 965, 973, 972, 964, 1013, 1003}], 
          
          Line3DBox[{1001, 999, 1018, 1002, 978, 996, 920, 937, 930, 941, 936,
            954, 962, 976, 948, 963, 1016, 1007}]}, {
          GrayLevel[0.2], 
          
          Line3DBox[{821, 1013, 883, 869, 880, 879, 853, 863, 862, 837, 843, 
           842, 805, 820, 831, 804, 819, 1018, 903}], 
          
          Line3DBox[{835, 1014, 884, 871, 882, 881, 856, 861, 860, 840, 846, 
           834, 839, 833, 891, 890, 889, 896, 888, 1011, 812, 826, 810, 824, 
           808, 1020, 900}], 
          
          Line3DBox[{848, 1015, 885, 870, 874, 873, 855, 859, 844, 854, 845, 
           838, 832, 809, 823, 807, 1010, 822, 806, 899}], 
          
          Line3DBox[{849, 1016, 886, 868, 876, 875, 852, 865, 864, 851, 841, 
           803, 818, 902}], 
          
          Line3DBox[{850, 1017, 887, 872, 878, 877, 858, 867, 866, 857, 847, 
           817, 895, 894, 893, 836, 897, 816, 830, 1019, 892, 815, 829, 898, 
           814, 828, 1012, 813, 827, 811, 825, 901}]}, {}, {}}}, 
       VertexNormals -> CompressedData["
1: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
+P3fPmoOzbVmbjs4hF6P/9fEfx8DL32TRXvEAMd3NmVwgoZmdj/sLKd4fnpz
XKdkEROqDFbXRrTS0FfVKzfYuzB4JHL6V7MiE0zvRr5yzaQ89Iul6fKjBEzV
dhKDFgT0KSTaGMXQ0CuBaEuVNdT3dvR2P7Znwuq/7sH/JofQLazb888UBsPX
xWyeSTEgO31tzd00Otr67X2AZyMOH/5yZ7a0EaDEv5tQ8R1C0Usb+RUpH5bh
7/+66QEDKrW8FsfV6GjohSqdSwcHaWUO9uYrCVoPi49H3qEjc73u28XNOMQp
fl/x4jcBBz8l+hma0RG/O9mj7ozDWbqIoL4fCZ2rLIKZP3vRBnQq49yKn9BS
oCPcsLkEXH7S4rOe0RF6v2F/yCQOr03ivIeKCfj9+rmYuScd7XAx9FC7j8NP
3df46SMkXNBYbpW8H0NGyfkmn3xIiM0d6d7zBIOm0BPse+sxZE578pJeS4CV
7gxr/joOTTr9Og1cGGqUUfUb9CVgt+dOq7s9ODQKTIqs51D7p+t2aJ0loHyQ
7+EfIQLmJzLXi5zEUEHY3sGHf9nAHSh7N3FnB0iUBJsrMDCUndzjtFyTDeON
Pku733dCUojbh5LLOFr6nFrmHcoCk4oMq6T+LpgOsaMH/IchCWHR3BFLNiw+
2p79MK0L1mTwmMsQGFLbUvV+hsUCXa+mnbdXd4NdnUrci7M4Wl+7NLZKjQUh
ZfONjm498KQ7IsalF0Mjg2T0uXgW1Dwf2/roYg+Y9R9ujTuAo34ph7dbqDz9
0JFY8HKmF+KOV3w+6YohOdtR2pd8FkymSpv+p94LwT3KEqdrMGRcnXor5zAL
hvfzCoq19wL28ekgsRlHf9UalNUDmTCwyLY2fdwPMR/PHTiUiaE/a7cxr40y
QXnrrM9H6IeC2Z9/8kcw9EFh7cCUNBOW3j4f36c0CEbrrIJdDDA0HzT/fkGI
BXFVt/0/NvRDas7CpPtjDJnqlHzQi2VC+16evOcZAwAv9pYfLqB8Wd3opDDV
D3oO5mcG62mwYy3TXNAdQ9cj8UcNGkwIbCo8tUOaBu/nlqYL/TFUeFC9+yLV
tz+iZc41qNOht0evctiRymVVQbKa8udm1WJJPlkMJL/ueexH3eMOiw+e5x6T
oHBxtDDLDoNltwdjsvdiaN8qqRtZe0gInTlkEUlx9MaCFw4/aRgKfGDiuzWU
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
uW18GLEnnWn+1wn/A3Ns/wc=
        "]], Axes -> True, AxesLabel -> {
        FormBox["\"\[Sigma]\"", TraditionalForm], 
        FormBox["\"\[Lambda]\"", TraditionalForm], 
        FormBox["\"\[Rho]\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
      DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
      ImageSize -> {401.1328125, Automatic}, Lighting -> {{"Ambient", 
         GrayLevel[1]}}, Method -> {"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
      PlotRange -> {{0, 1}, {0, 1}, {0, 1}}, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02], Automatic}, Ticks -> {Automatic, Automatic, Automatic}, 
      ViewPoint -> {2.6545864674586324`, 1.3051740599196644`, 
       1.6430737537001547`}, ViewVertical -> {0., 0., 1.}],FormBox[
      FormBox[
       TemplateBox[{"\"SN\"", "\"Hopf\""}, "SwatchLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> {{"Ambient", 
                    GrayLevel[1]}}, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.8]]}, Lighting -> {{"Ambient", 
                    GrayLevel[1]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "}"}], "}"}]}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{{3.6464055563773117`*^9, 3.6464056737718773`*^9}, {
   3.64640573702568*^9, 3.646405801096657*^9}, 3.646405833992259*^9, {
   3.646405931055196*^9, 3.646405961098241*^9}, {3.646406073004846*^9, 
   3.646406081294437*^9}, {3.6464061559672213`*^9, 3.646406204481382*^9}, {
   3.646406512949548*^9, 3.646406531545368*^9}, {3.650041542826109*^9, 
   3.650041553634326*^9}, {3.664136240561203*^9, 3.664136270443584*^9}, {
   3.664136463197757*^9, 3.6641365404309*^9}, 3.66413660869162*^9, 
   3.664136680433628*^9, 3.66413672377855*^9, 3.664137007905097*^9, 
   3.66413714610507*^9, 3.664137422683305*^9, 3.664137595163026*^9, 
   3.664137775062071*^9, 3.6641383790227423`*^9, 3.664138521192786*^9, 
   3.664138715084319*^9, 3.664138879946274*^9, 3.6641392151707287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hsp3", " ", "=", " ", 
   RowBox[{"HopfAnalytic", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"\[Rho]", "/.", 
    RowBox[{"Hsp3", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.66413987406355*^9, 3.664139939531455*^9}, 
   3.664139986255323*^9, {3.66414001812741*^9, 3.664140034529365*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
fB+ftX3fU3/tPrm3OeWqomI0fgcT7iy/GTLlHkmQuDObJy+cuO2YbdPo6Eae
p8obqNh8ION1JioadUaT7Tf1OtRtrhG+m8RQcZYXURZO5uEWiibZQo0tv68/
IeLj+7NXR91igzf+vfNPFFj+6Rf72w+yxrqzr03qLHw9NZrMu+W4ZVXvK2K+
OaXen3WVPRj/lLyemUyK+W7vaey8QOS4NH9HbXxBHPTOStndTCV3bOed1fX0
IkpnHTQH418T6+nZFlx/yqNdF4+8eZY72T95t+04u0R20M+jYnaGadhuOJ3p
61AjiWzW4BLV1+PTif0qW2ddTx8iEHnz2Ba596QtNTPPNicTy3//1LOFtYcT
2C3h1nYBRzNI0A1brfvlPiRj/pTiUQPxxGWb5EuFeKYd83z1a3ecZgJ7w9mQ
PQETmXqUOj304Qs3Nrt4zop/FKx/kN6pgmLmWT4kkpPP3dT5nj2L87YjRiCX
XOwOuesy3pcU9fsKldR+JO7tkx8orP1JXuks+JjyxIcInXGeJtH3iUyYJK1j
GJVHPGrni5tv/FMfHfMGq+Z9JgU5l7QMh34R1Y3zQ11ue5NTF+wXzl6UQkxZ
GbUxV/NJ/6iQk7rCPqRkScv94L7PxLi1UZiLwyFBJ4MlzTd6k4aPp8rZgylk
JXuWA2dVIbn4/UC9TIIXuWv3MikmLJYd80/2a9vA36TcKEj3frkncTHhrPKL
i2FH2Nf+jplSRHq7Mrc1OnoRwx1TPNw7X7Odu1p/6cwuJlsd+CJcbnuSKWLs
Q2ToG+m/zns5vLWY3Nmwf0djpwfZbGmw0nRtOhFR2vtDZ2wpiS5Nt2jsdCdx
3i215U8ySNqEnVNTtpQQO/79D11ue5Ck9Ou2G+Wj2ROWfN1n5lRKLl5Pf+Ry
2528+P05L4Urk3C5Sj9rIGXY7mlK6KnkRmeS8kf841L2lpPue/u6ZRIuEI7k
k0W+xk/Ybrcax6fcKiPdL7576HpeJH1i18W2jXvOHlRMWSTzvpykmuxbct/q
Arlqcch4nlwk+0t2j1u4bwVJNeR66XLbjagX+vPNS8kmgSk6ruHRlaT7hPaK
+1bnyXmLPj7eHznE6cW9nWa/K8itgaE+GZYbOT/fpXMC70O2gP3cprPcVSRV
XdtfV/g80Xqt/ajy1z32ep930imcKuI2Z/C1y3hX8mHbhYWj34WwRdYtCW3g
+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
Fqu9ff70C2i9Bv7xx2FTK0UuliRdvwq8lu5rc6f1HfjB9KHUgbVCrDBa34Hr
uzWFalmJsLhofQcupFEncm6dGGsHre/AH58+n5UxToL1jtZ34IampVmv0iRZ
3LS+w/fu9JZXOv7bu8hxWt+Bxy09MkbvFBeri9Z34FcEnnEtauJlRdFxKHBJ
uo/sEG0HgG/vnx06XV2YJUfbAeCtBkER681FWQ60HQA+irNHm71dnJVF2wHg
jvHW3530JFlatB3A/q1Qmnj5WSmWH20HgN/imdi2y1ialUnbAfiOT1qXHNfB
00WMaDsAfGIvR6L9IxermLYDwGdtjPjJfZyPdYe2A5j+q5v1oL0gyxT2ZVDu
Svd5edH2AXip+AYnL0MxVjVtH7Bfbdu7SnaXBMuAtg/Aq6c/9vNTkWKF0/YB
eBN7qcDPUdIsHto+AH/tvSZMrVWaZUHbB+DxHR8rryTLsMJo/uF7XXTsWtpn
/TLygD4feIVti2SbRzPhp8/HeS4thVDD3Baymz4f+PlHqgsuTWyj+1gSsB3+
RPcTudJ4MrRXrI683OOLq8k2mh7eVzzd1+NO00P+f6sYsgt2t+F9hdB/2NN/
aoFyTRmePw/86fvE0Y1h1USW1jv8u+j680MjxrlWdJwL67SBFzsedzcJL8P1
5MAzRpzzA/zipCGppecbcH04cLVHdQ0zMppwvwDwo1pJm0tEWnC/APCfCTpx
N1Rbcb038Fj7J7YPV7ThOnb4e2t81WVzQ4vx7wLOLx49KUy3AtfPA2/7pNSW
OLcG84/9tBHnAgEf//TosaR5nZh/4CUVNQKdQV2Yf+BByTF7fgx0Y/6BL3gY
H7rJuBf3IwCfwv187qx/mH2s0H8r2p+4s2eAOecH+FShE4af85vwfQHn3p/4
f7o696Ca0zCOZyXJSo5Z00jO6qImOlmXmaPaNGfbJnSxIavCULRJRLQpy0Ek
lVtjcdLNtK6VLnZE2O6tzdqwRG2OlnJLKTldVrX/vN/nmfn9+5kz7+953/ye
9/297/t8ZERP6qJ6CvDo3oC5xhbcL/ATEj8P+AJF/+WWTvbz0D3n5ua7kXGD
1C/wqg8t61oM9Kj+CDxpnn6MuobrmrE+jIxucvSpZ68OeO+InNAC/48UP7iv
WtP+6Tz7qKXnd4iTfh+43aLsF/begNd9NcZIueszihNcffr+8tTFXGeN9aGq
1jHgX+9eige8oXztOP2n/TQ+0nM9PJfuA+dMj3K8zn4Y8HMlRzsdMrmOG3lj
l8nuSZ4N7EECvyTxooAn6+/o/qF0JNWr4vvOV+J9BV8o8b6CN0q8r3TuJvG+
gnsI7yvyA3i5xO8KrpD4XcF/lPhdwQ0lflfwMonfFdxZ4ndFvn0lzvvA8XsH
4X3FuGHd+FPKfssBNXtO6Jzu9U7rOGv2u4IPv+L/u0MW+13pHO3OZM8uZ/Zy
gGcVztR1d7NXh+6FHlFY1q9kbwn4yexDrSW57C0BX6Cys09rZ28JeOzHQPl+
S/a1glecHd8u82ZfK/hE720tyZvG0Dhg3dul7HaI0rGfBNyvMevCnD72k4DP
y8/20AWyl5XODcPygrqC2csKrolTh3jPZn8y+OBvH6c9mMM+VfDtSr3it3Hs
FQFvflKX6VLDXhFwr6RtBvsG2SsCrv3L1+nL6WOpLhLr7Tf1posPl7InBDyg
yt3Hfg17Qmg9b+CQ0hzHnhDwsFGKgpvr2f9M54wdro0aY/aXgp+cbxJSvsKY
4qd7jIUJO2ZljaX4wa9YRXTODDehvIr1+ZEUc6VyNfs3wC/beOx/nMb+DfB3
q84fjzrFPmpwZzsLvbpX7MEA/153tlWXyh4M8Jzoane5yzh6LtbbIy6ZNVzL
5/xG51D9+e2by9h3Da7xCqj9Yg17IcAX2Waknxglo3awXnpfUxAf+5y9RuDP
7MMKnepklJcwz4Yt9dlg4/ZBvP9amqceijoj/B5c4xyTOlvbQ+sE8EUO712N
zvTROoTujeSmr7wq53pkcIWox0H74IbJt14t1f5H7YOb7lthuuXRAM3X4IN/
t40cdn2Inkv1Mkl2vRPPtNF7Cn7xyenWdlUXxQNuJOpcEA/4nXvbN69WD1E8
4JP7dofKHrCHH9zm/DovTQN7+MF3XmsqPvSYPXKYp26K9TDiB1eY9LQavemg
+GkfQ6WrTQzspvcRvCA190D1+x7qF7i/qENBv8CDfg59l7tpGOVb8EXxQZVN
J9iHDz4y/J9wlyL24YM72RVPvF/BPnxwj41Wvja17HnDvNNh7ts3oZ49b+BN
U8ID3u3hOn1w+adGeZE/++3Bq7xiCrWu7CUDt4gfP606i31u4JmivgPjAD63
PMYowWA4jQP42+B0bayK8zB4Se+IWNcIzmPgC0M1KbJjnDfAX7qH9Odc4Pea
6ik2VOk2FLNHBfPOS1GPAI78nCfu2yN+8DdT9a27g3mdg3xYKPZb0A64j7h/
jnbAzYu83GaVGtI4gKsN07RVKiNqH/nNvHXaKt989iCBl4r9FjwXXC7ub+O5
4EU5vS/Xy9hfBG6z67DcNns0jT/4ySLb235TeF5GPrzXl6V50cM+ajp/MXkc
svgYr7fB28R+C+IEzxf3pREn5dsnWx2vB46mOMHdXZyumQ2wZwn8UWJ0ZX08
e4HAj3cmu7jqsR8J+fmC+M5Fv8BX6mKjlHP5Owj8YcKNP2esYZ8PuH7z1q49
C9nnQ/eWxT4M+gu+RNxzJq+U4EndUR2fZ7IHCTzPoX69xtuY+gtemBYbubmV
/c/gTyMyTl38lb094PKrN9plEew1wnf9mFsZrmZu7OEBt5w+wbhvK/ucwZdt
XBp6VsEeHvAalX66lZI9POAmlW4JuRXs4QHfK/HwgCeK+8wYH/CyyD9uT21i
rxH4kN/zu5Gn2GsEHmyo7zeUzl4j8C0dBw+sCGEPD/h3XlYv/GzYwwPeuyVf
ZfpMRnFiH8BT3OvAeGJetv2wd/7hhw3EMW9WGO2JVCRqiWOeUn5b67KklT0w
VGck9ofBkR++bvY/OLWkjTjeU7uyimjlnHbi+Pd/Lm/tQGU2+1sQf8Hyba+j
59+h70q6VyPuQeHviHXLNxIvCrilqCsnD63gntbVy2eZsT8E7c+Q+HbwHeQl
/t8QcORn+2XH96p3sicB7QSJ89bxkv2lF2J/6X82GxgY
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
J+f8Y6irne47jufbQT4Z2zW3r/tJ/jz59lfh70q2R2geD/b/a9UXS54TWlPX
Lvc8oeOWwbGo1jjyQ3fCVbDtc88NmhfUl4/Bvqw4hPPmaGwGrwX+kr+IjjsV
f/6heYHr9qJszBxTKrb8s+SY/2/5KfmGwuuOf0qOo//Wd6UcD++TO049AVs/
d5xaIfhZFFurf41UDFC4vwyGv9Ucynf5FL4Y+zX1z8EHYF8q+x1vxK7i+Hm4
gcYz5Wm4vsYz5Rl4X/W/YP9WU/4m9zpCcbhiqrfT959S9vfTmuttrrlXcxn2
DcpdOke+njIL3ke+Rr4Mrleyz1Y8prWFxtANcBlbK/fzL6TcVPb7aj21mv+9
AB8oX6M5Bm5Ucjys9cgKjm8PXitpDtLcXDX1rxnwBHhz4bE4Hv6t8HgdB/9a
2K90hV8tPC4nq10Kj9er4L/T2vBSeG1h/3os/EphP9Rd8QO8Bp4NN5QfLLmf
HKRxXvaY0tiS/7heQ6HkcX8dXCrZJ3VT3JJiLa1DP4HPil6vHqZ5GT4bXgOf
iW3NOU8UrmsLz1L8nHtNqPWgYgCtIa7G9sw9py/meAbHe+dea5yUe52jNY5i
A9nJ2JNzr0N0vfqi+qTWJz1yxxLvZ+6X9RO3CI5B2gSPPY3BdSXHJkPTWmg2
9x2We43/Ytnrfa37NU40Xt5Lv3Nc+i3du0e6/5B0H/3GY1yzZ+71Xafcaw/F
/c9w3CT3GlZ+Sv5Ka1r5FPkWrcGkNxyVO86TJtExdzyt9feRKb5SbNUhxVdd
cvdL9cnayY7n/p1zx+WKyX8u+fe1/thY8rpA64Ojc69bdPw01xyUew14cbqW
U/+L2eQvJ2gdmtuH6viA4P+PKDz+LkljUOtt+Qv5Co1NrQE0JtWGvXOvV+XX
e6U+IH9/BmVpZh/fM/UB/b6eQ+sKtXOf5JPVd07MrSnI959FWaa+m1sDkv6z
c27tRrqN/Ku0CcXYGov903iUfz03dywuPzowd5yttroo91pR3+OUNEfoO0lX
0hpPa+J+lOWpDU9P7ag2PDW1o9r5tDRf6BuMz70W0reZkPyp/N7I3LqW4v+R
aY6QjjIiPXOb1G81R0xI3/Yljp9P63St16WFdE5t/XLZuoU0M507Lp0/PrUF
t/tPVxude62h+UZ+8gfu3woelZt17ph0/nz1k7QWUf3Y1NY1E6t9Nb+dk+6p
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
Eb2PR+Naepr2U2kv8/8Bvv5ZNw==
          "]], Polygon3DBox[CompressedData["
1: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
uJv4LQdeWf5QJcbPKtdoY5ixS86qj9BXbM79zuN+hxnD5ZrgC8FHyzn1reBL
wT+0PmP9ds4+3E1MNhabY32DXYENaH2WY/j9KmPAsX2oPsTYo5+jb7wqMdlY
rI/807nMvo1aH/RHNz5M3yXP+dUt/YNan/Y433fOKn2XGL/ZHt8NPzMmj1HF
B+l7zBG3457PVZnDI+R6tK9j/5bd+NDbu8kRzA2MMeZgSxur6uRmE1WJgcY+
Y8AvrU8d2Pq0A0r43Fic92Uv93BMOha99xCOWaJKLGLTububnMNcQ85yAuf/
0on/3LVkzn7AgXt2Mpf1WXLle+r4MjWD/rQv6URLeLyONqVG9WmTHH2SOpqI
ubvjTd+4Qx099FhszDo5/Vv0vVSSW45H+2u5RBPfu2MdPVIf9SHPs1cnvmtD
8Kgqc+7kJpxW371lHa67CfZIlTl0VhO9Sz12f/oH6b+wh6vMyTOaXGNF2gfU
ufZG2Ogqc/w0+o7rRVtTY3sffGSTWL5TnXx8ZDecT66nJnoo+77j/MM45hGO
vbUkTppTDqd9UwmveKGT762PUmtSc9J3XVcSl8xpL5Ib0f89/YeDH6X/wjpa
kJrQfeAh9I9RR9N5U39WEkef78TfPd4NJ5YLyxnk8/KGjzrh64erS3G9x/T5
8sEmeewnneQfr9XRvtTAfpbflPAKc+ARJZrXTPRf14kWZk4oF1u9Tq5oDikX
XK1ObmkOaWxfo05u6TdyrA2v8+18R//1FXXe3RxK7n9tndxqd7Z3VdGk1abN
Ec3FbqiTO+qj36gS8/Td+vTXwTt04uvNOf03t7S5qDmi3/bWOrmj33Aw+N46
39aY9HaVmGWsMmc0N7yuTi5pjHirSsw2djimzV3vqzPWT2L7Gv3b+4xNYtqb
VWK4sc6Y/k6VmGasNwc2V7y+Tm7snLGWoM92LsnB5O7L1eFmcj659/J1uKA5
pdx61Tq5phqE3GnNOtqEc2BkFQ3YuSEnnIT2CnW44qb+gyox6pwmHFduuW4d
7iuHVdvYpA63lROpFWxYhyvJgdQGNqrDjTbHntC/su+CJnNGLcs551xyjlt7
cI469+Vcag0b1+FicrIZwQPqcLX+Je8nx5fr1+C7wB/X0WOnLtEH5by+jxqg
esMJ7fxVI/y71R/ea6KZqp0eCX5V/oRNSntFrrdCLxq0WrSa7ldNNF21XTXp
r8FP+AxN9KCTS/xhn3Y+6h/VrPu2/uObJhrhz61e8Br4eGOSsRD8QRMNf9wW
f+uzNJlf18uJSqtBt/OtAY9VkvsZA4wFY5ZoZ+/p80o0fbV9NfcfmuSY67Qc
1dxTTfKXVq9QH1HTVdtVU323iX6inmEMMBaoYfdaPqu/H7dE2/kcO7xE01Tb
VHP8qImmX1r95RP9V0kusAbXHE37Tf9ZHc3+7yYcfVAbc+Xuati7VMnX1LaH
tHqg19A/ynfU/swn1GfOL2mvzjkP0d6pRMdUoxpMe4eSXNsc4mjae2P30q7Z
dxbtXkn7DfbtpT5QEhvn5XqjaO9REtfVLE8ydvWio6mn7Qz+qBcdTD1sx/b/
WI9T8zyj/T/W+9RMT1cLwCp5SPt/1SCf514/daKvXFbCXedm30jaY2idaKz3
lGi6arvWUD7m+41Xor2p6RxRMidmaP23c2VtjpGmqrGb729RMrYcY/pyx/yp
VeaQc2HsktxZzUTtZJySXN6c2tzaMXsi+KE6Y3kT+s/sJMbr/zYtGcuOaWPp
xiWxf4zWv25UMlf6tPyib4n2oGagduD4UntQk1Cb8P3MR9Qk1CbUDNSg/SZq
CVeUaAXr0f8o7VNKtGf3jWj/v//GOeBcUM/yW8v/bmjHi/9SPnmN9yrJd9Q8
1D7Ut6y9OEYdq2qOao9qLT/02meq8w98Vs/5qY6eNn6rr3xfZ874bpuVcCU5
ldzKGt/ELb8y3lojs1ZmDe/HJjW8fi3f+qmNz/1bvmX8/bcGVqdG1iltjaxO
Tanbvo/Poiaslj5BiVb4tf64pOZk7ckaV1VSY7TWaI3w+yYavHUnv4H63suO
vybf2G+tHjRmk3pAP/DmjuFOOKHcUL3KGoBzYOZefJzj43n6T+pFn+o1qR9M
VOKz9d2j2vFjDcdajjW9v5rU7KzdDQX/3sSfWPew/mG9zxqrtdbh9P/ZpOZn
7W8Y+I8mWry6i1q8mvx+frNONCbHk8/gszi+1m3i4/X16nnyud1K8mQ59Im0
b+H6D7bxdZj8r4238lV5+Qe9aKbyr4NKakzWmqyRnt/yMffZNl4+S3v8OjXf
75rUDK15rAyenfbifnPsSvuwm9n3QJUa7uXga8B3VKlZnwm+s5d82fxIvnk3
+JOWTz7RpMYov1QPV8+WvzzR5vfypxvov7dKzfdC8E3g+6vUhC8FXwu+s+Vn
Z8tne+Frq4PPlZ+C76tSU75YPtkL/5QfyI/U09Xj5Xxyv9vpf7XlT/eC73d+
Val5vgL+VGfWJP8f3aTm3W1SQ7cW7piaqh0vjrWFaP9SxwfqC61JX1cl57JW
Pazk3w5g3yO0P5E/1Mm3/9UXwFWdGt6HTXJsc+3FjEm0P+xlDYV6qnq08eEP
8Jz6zCbx4fc6evVOTdZojN9yDtdumAOZC6lPr99kTcg4LUcb0PKByfxvncT/
u+j/mPvvA368SU1M3d85vW1JDbdqUrO1tusaiaM4frJO1k5YAzytyhoKa4Pm
kOaSI/X/nH81+PYqOfnpTfKP11t+fX/Lf6yZWTOeo5f3sU74sT6zZIw71kd1
orcfUpJbPNSJHntoSS1gdCf6sDX3b9v8Sa5uzn5plTUb5vKuifimzZdeaKI/
Xtjqd+aCagiXVVlzorZwbolWOCP7Hiz5ntYdPzSmlIwH17m43uV/JePHOqT1
yN3BX4D3pv/NTviBnEBuYM3p9vb7Wie0XrhniaavVqNmo9avD9QXjtn+P//P
z3Viiv534pJnGav9/37/r+tg+ZyazOVV9Ee1GjUT9Vr1Z7UU1wBZT5KDy8Vd
w3J+FT3XtS2n9BK7jeHq4a55Ob3KmiHXwlg/Uf83pzC3cA3R0VX0c9cWqQ+r
/5oDmAu45knuLQc317ijl/zG/Oq+1j/9VYejydVc02B9ZvpO9GXXAJ1Rpf7l
2qB9OOatTmo6d5WsqbmqikY0uJ1ff9bheHI916DcUEUzcm2Ka1BurKJhuTZF
TUu9Vs3BfMk1LDe1+ZNrW1zzcnObb5j/uGbl+ioakWtZXOOknm29zPzSfNP6
mWuQhjSJd9aALwf/txeN6soqa4jUrs4pGSvq+1eWdg1KnTUq/zTxGfry0XV8
iT7WXODqOr5XX2PuLieRB+rznNvn1/GFxvTb2XxQJ9bL0c1NHqjD3c1pzE0e
rJPreM/bwO/XeZYJS/61/9zazxutf5SDGzuNt+YqI+vkTs5ffdF8dWKXPkff
80mdXMSYrxbgN/HbOAaMJRfUGRv6JH31lXV8lTHGXOuqOrHH+Gr+ak3K2C9H
uUPfWoe7yEHuBH9Uh5tY7327E//t/DPm30j7zTpcwBzi1k44gO8zd4mWI2eR
uyxR4sv9tnLtD0rWPuhj9DXvlcwd55hz7d0S3+2ccm4Zc/T9t9eJRXK+JZo8
k1xQTnKLvrYOV3mnZKw7R52r5hc+uz5F3/J2yVx0Tjg3zEHNne6ok5uaI8rt
76yTO+oTzV1vruMr5fzmdo/UyQXMseSKj9bJveQ4N4HfqsN95EA3g9+uw42M
ScYucxhjlTmbXO/hOrnckozjPtjr7DunG59rbnhTHV9szmhud1edXNIcdzj4
2Tq5r/7P2GWNUG7oHHIu7UH/QPB3JbFFjiJX+acklstR5Cqj21h+eZ1YP3GT
XNP1GK4v6NekVmwN3PUFcmZznVfrcGk5q3PvxTpc9sWS2Na35WKvlKwVMWYb
u/8q4Rr6NMfvtE1qp0vpY2j/UTI/nadygzta7nFmi82x5d4v1cm9X27njz5Y
XyyHl4u/XIfbyxHkAsu09/+wJNYZw4xlH5XEMmOAseDvEu2w03Kfj0tigz5P
32dOIHd/pU6u8EUJt9HH6evOa8LDXOek3vdlie/Tp+pbvynxlfpIfeWPJdxU
zif3+7WEW8px5bpqIHLpZ+poI/JjtU45gdxAjmmsHlrnf/5Qwg3lhHJDOZnc
7Lk62se3JdxWziH3+L6Eu8op5Za+t+9vTedd9v1Swj3lvHLfn0q4qRxTrvlZ
SSzRp+vb1SzMnR6ro2V8VRJLjCHGkk9LfLkxyFj0Scn80Mfr678uiTXGFGPL
zyVcVg4sF/6thPvL+eX+akZDwU/X0ZLk8GodL9Th9nP3ogWYw5rLyvnkZovU
4YLdXvy/HF1/uVyJdqjGuWvrf8w9rfffSd8iJbUga4LWBpct4WpyNrXQhUvq
W9YcrT2uUqK/WjOxdrJqif5qDcBawKQleq41fWv7y5donWqYapnXc+8Njb08
787gpUtqddbYrF+tXsLl/+X04P0c096Lffdw7holeqprPKxnrmRO1Ykmqja6
Wsmx1gCsBSwD3q6TmqD1M7n8453EXH3qQiX1Q2ug1kJdI3hxlTWHrh30np5/
Xp1nWbFEe1XjVetVXzm0mxzQXHCDEj3XNUrqsc4ZtXLf2bk0Z0lu5/9WWx0I
HtLJGib16MlK9G7XKLhWYeWS3Ev/Zu1ybfDBnawpsp65YYmeYoFYPfqxJu8/
Qp4GnoL+aTupiVt/XaeEK8uZrSW45th14q4Xdy3yuiX6tjUJ9fUB4CM6qSmo
ry9YUt+0hmstd1BJvq1mqj4+eYl+bE3e+u/6Jfq4a6jUv5cqqaVaw7SWuWaJ
fu0aKuvXr5WMZzml3PL1Em4ph5RLmvPpb0+skwu6Bvzalm+5NnzJktqoNU9r
n+ZMxmM1NnOp8dpcwzWK+3LMWyW5jBxXrut6J+uE+nzzmpebvP9tnD+4l/x5
y05qdNbLNGtn5tT2md+bC8jp5fZzYet1UoOyXjRJSX3DNS2ubXG9lnUgNdk+
tOctqUVZc7L2JD907YWao9rj/CVjSc1d7d2Y6PpT82Vj5a91tDr5xT5Vcj+1
wr+wyZusWXHtimNWPVB90lzE+uIttBctqT1aI7ZW7Dt364wxv8VUJfq6a0is
H0xZwvXl/NYX1iqpr7iGzXq9OYT/b9E68axPie+Rw8vlVyiplVgTsTayQIl2
oIZgLWCektqbNTZrbfOV1Bqs2Vm704e8UmWO6lveKImP5hDmEs6BH6r8Q+fG
eiXatBq19aH/B3z7Xs4=
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncDWUbB/DjOZ4Hb2SpSGUPRbSqKEULRaQk+542pVSWoteukGwhZMmS
rMm+R6V90SYtpJD3JSQqW/S9PnP++Dn39Z1r5pyZZ+a+R5kOj93dJSuVSn0u
2VLXPy+lU6kvYHv1ityp1G1sHPuKdWSrWAM2lf3IOrON7C7JE8fxmSNVc1Kp
W/SN0veZvja2LeWlWX32PCvB7melWD32HLuAdWJlWQM2lJViD7JyrCEbxkqz
h9gg9rvxC+y4bQ+py8gdxkNYSdse0FeeNWYjWXnWhV0pt+dKpabJ13Kxuo6+
Mfo262unb3mcC+vBlrI6bAQ7x/l9yQpKoehX36pvtPHn+trqWxbHZ+PZ1+w+
tprVZxPYFnY/W8vuYFPYD+xhtoHVYy+zb1gntoZdynqyZawuG8lqsufYKWnC
5rGGbJp6m75H2Nvse3Y7e4lVZB3ZzWwk+5S1ZkvYPWwB28t6ss9YDTYovtd5
zla/LteyAWwJm6GeKVtZHTbAvgNllG0/siZsmnqqNGA/sWZshrqa7+hq3+vY
YPYOu4fNYTew59kmdi+bz2qxoex91owtZLXZMPYBa87eYNvYvexVdiV7jF3I
7mYj2IXsUbadNWXT2VXs8bjOcpN7YoKslFLqAvqu1neW8f/1/TeOZZzXOK/P
fLGfc8uTnTwLTzleTbZKfVxesO+H7CNZru9GNoS9p26qf4HeM9hVrLDxHtZb
XVbvLnaprEglD2t1GRj3pG2z9L4mv8kMmz/laeNLbDvmcxH7geU2rsIuk1rR
zzbYNsax7pRX1dv9lkfZO7ZfEc+/c58qm+Ui9c/62uqbq+96fT3Zd+w2NoZV
YB1YYzab7WJPsg/jOfe9O1jl+N3sH5ZfXzV1EeP/sWfjbyZvsN/s+wzbbFsj
Np39xLqwd9nA+H3GnflJqeT4TfQtNN6n7+mY2/RsYTXYIFacNWFjWS7nVNL4
gG3t1XfJLONf9HXV975tRdi17Gg6+ZvGPHc3e029U98T7AN2OXuGzfMbxqhf
iuvHerH5bKx6nFzN+rE32VT1NNnB2rA5jned4/Vg17D+bLG+V9XTY75ivdkC
Nl79slRjfdkiNlk9JfMM1mWj4/mTW227iY1gn6hb+Y7F+n5gjdgkVpU9zK5i
z7KF9pmgnhj3FEvrme96tZbF6hzbV8Z9Ji/a91t9Rfl16h56C7CmrIy+nayq
LGenWRt9H6vzxlzE9rJsfcvVh+17RN7KSc4vzvNw5je1zkmuYVzLPzLXohX7
2vhK425Zyd80/rYHpTvbyO7yHcPts589xd5id7JhbDe7P/4e7KZ4puN+YN3i
2WCNYm1hrdk7LCXDfexkbdkn6nwylu2LNcrv2a2+TFayXHr2yCPx7GYl92vc
t/n1vctySVbMAerRfJT8nrmXWrAz5f14PuQV++62vRD7UH22TGF72Bz71Hbu
RX3HUp/j1f/Rt1FPfhmvb0fML+xtdQF5mf2cuVfjnj2UuV9b6iksnxkXTydz
Sswti2xv4diXxlob66b6hIzVs4P9FddUXdC+H8Q8KZPZr/Y9xWeoD+j7O66p
eq88HvczWygz7fcPe4XtUT+lb519S7JbWX92Lmsf8y/rwlaxemxwzB/s0bju
7HY2KPN8xXP2V+Z5ap+TrFOxXh3NzKEd43yNi8T8E+fBOsVcIPnV10gH57ss
O1nL7kknz1U8X2NjPWSFjKvHGq9veXYyH8e8fCyzbt6nb1K8q8R7RqxvPhfE
e0DcH8az5E6Zq54sR4wrx5rnc6H6F+mQTtbPWEcnOV5p+YVViXXZbz/l+9bo
u8Hn+Zn3sdXq3+RJPevt15ANzcwnMa/8nVnDO+Qka9Rw4636vo13u5zkb9SV
rVWviXWKnWST2K/q3dKd7WNPsHWxvvuOIY7djC1lh1gf9g1rzpaxP1hftoW1
Y9+zYrEGs6OsBVurPqZvMPsxM7fFHPdnZg5t53vPyU7uibg38tv2dNw/PifJ
kczc2FZfK+P1xif0Pa9/u+0vsqPGJ1mWuqu6pazTd5w9Z9u2zLO6KZ2858X7
3jB1AXkv1umYP/Xt0ncW26w+X2axA+xix2ulnuB4VVh3VjGeo3gmWeV4T2CD
2SHjieyEbZ3Vl8hDxq/FvRXnqK8yezCOz65l/VhpWe8+mSS3yOWxzkhn42Gy
UcrEO5w8YTxatsX9pd7leJ1i/XC82nH/s4viOsT8wC5h3dhOdh97g9WK9xJW
ibWPOYhdwXrlTu7TjunkeY7nurFrUkQ+Z+fJTH379VWQj/2GF6WLVA+zb3M9
4+xXSd+T7FxWkz3NCrLm7Dx2I+vFCrOWrLzv2MOukNUxTespJtere+o7kzXT
d6G+X9nlMXewLD1V5GH1bH012AB9JdgtrB8rxtqxC9jNrC8rytrGNZDv/f7p
Ul+qqYvHM6jvGX2F9LWI9Vwesf0F2STl4hnVVyudzDkx97RiTdkitp/1Yl+w
4dnJnBlzZy71Y7EeO4/F+v5hQ2z7MrOGrsisJ7GuDFYXl2+Ny8a7ib4jcf3Y
VnW5eDdhf8baHeuoupS8zg6xYuwbdel4N2F/5E6e/YnpZH6IeWKFntyyhJ1S
D9X3lb75+ho7z9myXyZmJ/9n+kpfSSkR7w3qs+UL4wviPrfvwZjv4/8H6kqy
JJ7PuPZsm/qiWKvZ8fgbse3qi2UxOxHXNP6/oa6YTt574/03H9ugPiPuLfZT
3Fdsi7qMzGWH2dK4n2O+lXyxHqn7xDpl+zkxn8T35yTv/fH+f3a8h8R3xTu/
rDLOLSNs2xpzrL7TjjVPWsqb6rz6VuvJlpH6vtOXxeap//Kd/dnHrIfen43z
xHuLbRX09GX7WNGYA+O8428b6346+f9v/D94oDrF56ST96h4n+qTk9jr6WS+
jnl7dTwHeh+Ia6e+WUsfx83F57I/WT/2ETutbyY7yHqzTexfO8wZrw==
          "]], 
         Polygon3DBox[{{1493, 825, 644, 643, 1040, 1403}, {1328, 889, 1021, 
          1579, 1169, 1170}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1487, 606, 1490}, {612, 5, 610}, {1487, 5, 1103}, {
          604, 1, 601}, {609, 375, 613}, {611, 375, 609}, {607, 217, 603}, {
          1491, 626, 1486}, {603, 217, 605}}], 
         Polygon3DBox[{{605, 217, 316, 608}, {1490, 610, 5, 1487}, {608, 316, 
          1, 604}, {1486, 375, 611, 1491}, {613, 375, 5, 612}}], 
         Polygon3DBox[{{1103, 217, 607, 606, 1487}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{601, 1, 316, 217, 1103, 5, 375, 1486, 626, 1491, 611, 609, 
       613, 612, 610, 1490, 606, 607, 603, 605, 608, 604, 601}], 
      Line3DBox[CompressedData["
1:eJwl1EVQVWEchvErit06dmEABnZ3K4rt0o0uHN3oxnGjC0dd2KIzjt2NnQi2
gtjd3d2J7e8bF8993n9wz7lnvkPMkJH9R+SIRCK1fUxClNyW5+GmPIy3o7XB
Dp6LXSipPhEdieyUS8n3uTs/4FV4hKrqh1yNH3MiP+HVeIbD/r663lO5Bj/n
WH7BB83W8Cv00HvJcfyae/Ip8zfyWrxDvN5brsnvOcM8Sf4gr8Mn1FJ/5Nr8
mTPt9JK/yOvxDXXUX/mYWYKcLffm75yCn6irPmn+Q64n/+I+/Js34C+OmNfX
+yM3CA8VfZEDG/Vy8lE7DTkKjZAL/RCNQ2ab7OWRGyM3miAv+uO0eT7ebKcA
N0V+NENBZJkP4ELYYqcIN0dhtEBRHLczkIthq50S3BLF0QpDw+9167E5zTmO
t3E8b+eavINr8c5whrgOdskJvJvrcirX4z1cn9O4AadzQ97L5XJ5fjzRNffx
+HAWEe0et6izzVfwK57Dd3kSX+AxnMEjOJUHcwqvx0A5mbvxBG7JozmBh3MV
HsTFwzVd623Yc12tyDh+w6N4rOfhViMxfE+9EnfRTd3b8h15Nm6hit5tXhHe
IXQ276p3Q56Fa6isvs7Lw/k2v8pd9K5wMi6hkjrR7LK8DBfDd+ld4Jk4h4rq
7nbOy0txFp30zvAMnArfa14hnBl5CU6iY3h/eTp6mWdx+XAmeHE4/+igTjLL
lKfhKMrpZfCicMbRXt3TzmF5anhvUTacX16IA+F+zNvp7ZenYC/KqPfxgvAM
zdO5rV4aT0YqSqu7mu2R52M32kT9/z/1D9CLm5E=
       "]], 
      Line3DBox[{602, 19, 1485, 598, 597, 600, 599, 389, 1470, 261, 404, 533, 
       403, 314, 433, 405, 216, 359, 614, 615, 616, 617, 618, 619, 620, 1488, 
       621, 622, 623, 624, 625, 1489, 602}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1116, 1307, 1601, 1115, 1306, 1600, 1114, 1305, 1599, 1113, 
       1304, 1598, 1112, 1303, 1597, 1111, 1302, 1596, 1110, 1680, 1494, 1109,
        1774, 1493, 1403, 1775, 1108, 1301, 1401, 1773, 1107, 1300, 1595, 
       1583, 1106, 1299, 1594, 1582, 1105, 1298, 1593, 1382, 1104, 823, 1411, 
       289, 546}], 
      Line3DBox[{1129, 1315, 1610, 1128, 1314, 1609, 1127, 1313, 1608, 1126, 
       1312, 1607, 1125, 1311, 1606, 1124, 1683, 1498, 1123, 1682, 1497, 1122,
        1681, 1496, 1605, 1121, 1310, 1604, 1120, 1309, 1603, 1119, 1308, 
       1602, 1118, 834, 1117, 1764, 1495, 1412, 1383, 1450, 1433, 1473}], 
      Line3DBox[{1142, 1321, 1617, 1141, 1320, 1616, 1140, 1319, 1615, 1139, 
       1318, 1614, 1138, 1688, 1503, 1137, 1687, 1502, 1136, 1686, 1501, 1135,
        1685, 1500, 1613, 1134, 1317, 1612, 1133, 1316, 1611, 1132, 849, 1131,
        1684, 1499, 1130, 1765, 1385, 1413, 1384, 1451, 1471}], 
      Line3DBox[{1155, 1325, 1622, 1154, 1324, 1621, 1153, 1323, 1620, 1152, 
       1695, 1510, 1151, 1694, 1509, 1150, 1693, 1508, 1149, 1692, 1507, 1148,
        1691, 1506, 1619, 1147, 1322, 1618, 1146, 864, 1145, 1690, 1505, 1144,
        1689, 1504, 1143, 1766, 1387, 1414, 1386, 1452, 1434, 1483}], 
      Line3DBox[{1168, 1327, 1625, 1167, 1326, 1624, 1166, 1705, 1519, 1165, 
       1704, 1518, 1164, 1703, 1517, 1163, 1702, 1516, 1162, 1701, 1515, 1161,
        1700, 1514, 1623, 1160, 879, 1159, 1699, 1513, 1158, 1698, 1512, 1157,
        1697, 1511, 1156, 1578, 1696, 1415, 1436, 1453, 1435, 1476}], 
      Line3DBox[{1193, 1339, 1637, 1191, 1717, 1529, 1189, 1716, 1528, 1187, 
       1715, 1527, 1185, 1714, 1526, 1183, 1713, 1525, 1181, 1712, 1524, 1179,
        1711, 894, 1177, 1710, 1523, 1175, 1709, 1522, 1173, 1708, 1521, 1171,
        1707, 1520, 1169, 1579, 1706, 1416, 1438, 1454, 1437, 1477}], 
      Line3DBox[{1207, 1351, 1649, 1206, 1350, 1648, 1205, 1349, 1647, 1204, 
       1348, 1646, 1203, 1347, 1645, 1202, 1346, 1644, 1201, 910, 1200, 1718, 
       1530, 1643, 1199, 1345, 1642, 1198, 1344, 1641, 1197, 1343, 1640, 1196,
        1342, 1639, 1195, 1341, 1778, 1418, 1441, 1456, 1440, 1482}], 
      Line3DBox[{1220, 1360, 1659, 1219, 1359, 1658, 1218, 1358, 1657, 1217, 
       1357, 1656, 1216, 1356, 1655, 1215, 925, 1214, 1720, 1533, 1213, 1719, 
       1532, 1654, 1212, 1355, 1653, 1211, 1354, 1652, 1210, 1353, 1651, 1209,
        1352, 1650, 1208, 1767, 1531, 1419, 1388, 1457, 1442, 1474}], 
      Line3DBox[{1233, 1367, 1667, 1232, 1366, 1666, 1231, 1365, 1665, 1230, 
       1364, 1664, 1229, 940, 1228, 1724, 1538, 1227, 1723, 1537, 1226, 1722, 
       1536, 1663, 1225, 1363, 1662, 1224, 1362, 1661, 1223, 1361, 1660, 1222,
        1721, 1535, 1221, 1768, 1534, 1420, 1389, 1458, 1443, 1475}], 
      Line3DBox[{1246, 1372, 1673, 1245, 1371, 1672, 1244, 1370, 1671, 1243, 
       955, 1242, 1730, 1544, 1241, 1729, 1543, 1240, 1728, 1542, 1239, 1727, 
       1541, 1670, 1238, 1369, 1669, 1237, 1368, 1668, 1236, 1726, 1540, 1235,
        1725, 1539, 1234, 1769, 1391, 1421, 1390, 1459, 1472}], 
      Line3DBox[{1259, 1375, 1677, 1258, 1374, 1676, 1257, 970, 1256, 1738, 
       1552, 1255, 1737, 1551, 1254, 1736, 1550, 1253, 1735, 1549, 1252, 1734,
        1548, 1675, 1251, 1373, 1674, 1250, 1733, 1547, 1249, 1732, 1546, 
       1248, 1731, 1545, 1247, 1770, 1393, 1422, 1392, 1460, 1444, 1484}], 
      Line3DBox[{1272, 1376, 1679, 1271, 985, 1270, 1749, 1562, 1269, 1748, 
       1561, 1268, 1747, 1560, 1267, 1746, 1559, 1266, 1745, 1558, 1265, 1744,
        1557, 1678, 1264, 1743, 1556, 1263, 1742, 1555, 1262, 1741, 1554, 
       1261, 1740, 1553, 1260, 1580, 1739, 1423, 1446, 1461, 1445, 1479}], 
      Line3DBox[{1285, 1425, 1048, 1284, 1762, 1573, 1283, 1761, 1572, 1282, 
       1760, 1571, 1281, 1759, 1570, 1280, 1758, 1569, 1279, 1757, 1568, 1278,
        1756, 1755, 1567, 1277, 1754, 1566, 1276, 1753, 1565, 1275, 1752, 
       1564, 1274, 1751, 1563, 1273, 1581, 1750, 1424, 1448, 1462, 1447, 
       1480}], Line3DBox[{1410, 1297, 1381, 1776, 1409, 1296, 1592, 1577, 
       1408, 1295, 1591, 1576, 1407, 1294, 1590, 1575, 1406, 1293, 1589, 1380,
        1405, 1292, 1588, 1379, 1404, 1291, 1587, 1378, 1402, 1763, 1492, 
       1429, 1377, 1772, 1400, 1290, 1428, 1586, 1574, 1399, 1289, 1427, 1584,
        1780, 1469, 1398, 1288, 1468, 1426, 1585, 1467, 1466, 1396, 1287, 
       1465, 1779, 1397, 1464, 1463, 1394, 1286, 1771, 1430, 1395, 1432, 1449,
        1431, 1481}], Line3DBox[{1488, 1470}], 
      Line3DBox[{1478, 1455, 1439, 1417, 1777, 1328, 1170, 1626, 1329, 1172, 
       1627, 1330, 1174, 1628, 1331, 1176, 1629, 1332, 1178, 1630, 895, 1180, 
       1631, 1333, 1182, 1632, 1334, 1184, 1633, 1335, 1186, 1634, 1336, 1188,
        1635, 1337, 1190, 1636, 1338, 1192, 1638, 1340, 1194}], 
      Line3DBox[{1489, 1485}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{636, 1069, 1083, 1070, 1047, 1776, 1014, 637, 832, 1601, 651,
        846, 1610, 665, 860, 1617, 679, 874, 1622, 693, 888, 1625, 707, 902, 
       1637, 1638, 721, 916, 1649, 735, 930, 1659, 749, 944, 1667, 763, 958, 
       1673, 777, 972, 1677, 791, 986, 1679, 805, 1048, 1049, 1050}], 
      Line3DBox[{806, 987, 1028, 1750, 792, 973, 1027, 1739, 778, 959, 1770, 
       1026, 764, 945, 1769, 1025, 750, 931, 1768, 1024, 736, 917, 1767, 1023,
        722, 1778, 903, 1022, 708, 1777, 889, 1021, 1706, 694, 875, 1020, 
       1696, 680, 861, 1766, 1019, 666, 847, 1765, 1018, 652, 833, 1764, 1017,
        638, 823, 1015, 627, 1771, 259, 320, 263, 318}], 
      Line3DBox[{807, 988, 1751, 793, 974, 1740, 779, 960, 1731, 765, 946, 
       1725, 751, 932, 1721, 737, 1650, 918, 723, 1639, 904, 709, 1626, 890, 
       1707, 695, 876, 1697, 681, 862, 1689, 667, 848, 1684, 653, 834, 639, 
       1593, 824, 1016, 628, 1085, 1779, 1084, 1090, 1000, 1071, 1055, 1094}],
       Line3DBox[{808, 989, 1752, 794, 975, 1741, 780, 961, 1732, 766, 947, 
       1726, 752, 1660, 933, 738, 1651, 919, 724, 1640, 905, 710, 1627, 891, 
       1708, 696, 877, 1698, 682, 863, 1690, 668, 849, 654, 1602, 835, 640, 
       1594, 1030, 1029, 1051, 1086, 1585, 1002, 1087, 1001, 1072, 1095}], 
      Line3DBox[{809, 990, 1753, 795, 976, 1742, 781, 962, 1733, 767, 1668, 
       948, 753, 1661, 934, 739, 1652, 920, 725, 1641, 906, 711, 1628, 892, 
       1709, 697, 878, 1699, 683, 864, 669, 1611, 850, 655, 1603, 836, 641, 
       1595, 1033, 1032, 1052, 1780, 1088, 1004, 1089, 1003, 1073, 1056, 
       1091}], Line3DBox[{810, 991, 1754, 796, 977, 1743, 782, 1674, 963, 768,
        1669, 949, 754, 1662, 935, 740, 1653, 921, 726, 1642, 907, 712, 1629, 
       893, 1710, 698, 879, 684, 1618, 865, 670, 1612, 851, 656, 1604, 837, 
       642, 1036, 1773, 1035, 1053, 1586, 1005, 1031, 1058, 1078, 1057, 
       1099}], Line3DBox[{812, 993, 1756, 798, 979, 1744, 784, 965, 1734, 770,
        951, 1727, 756, 937, 1722, 742, 923, 1719, 728, 909, 1718, 714, 895, 
       1711, 700, 881, 1700, 686, 867, 1691, 672, 853, 1685, 658, 839, 1681, 
       644, 825, 1774, 1039, 629, 819, 1763, 1037, 1061, 1080, 1101}], 
      Line3DBox[{813, 994, 1757, 799, 980, 1745, 785, 966, 1735, 771, 952, 
       1728, 757, 938, 1723, 743, 924, 1720, 729, 910, 715, 1631, 896, 1712, 
       701, 882, 1701, 687, 868, 1692, 673, 854, 1686, 659, 840, 1682, 645, 
       826, 1680, 630, 1587, 820, 1041, 1063, 1081, 1062, 1093}], 
      Line3DBox[{814, 995, 1758, 800, 981, 1746, 786, 967, 1736, 772, 953, 
       1729, 758, 939, 1724, 744, 925, 730, 1644, 911, 716, 1632, 897, 1713, 
       702, 883, 1702, 688, 869, 1693, 674, 855, 1687, 660, 841, 1683, 646, 
       1596, 827, 631, 1588, 821, 1042, 1007, 1074, 1064, 1096}], 
      Line3DBox[{815, 996, 1759, 801, 982, 1747, 787, 968, 1737, 773, 954, 
       1730, 759, 940, 745, 1655, 926, 731, 1645, 912, 717, 1633, 898, 1714, 
       703, 884, 1703, 689, 870, 1694, 675, 856, 1688, 661, 1606, 842, 647, 
       1597, 828, 632, 1589, 822, 1043, 1008, 1075, 1065, 1097}], 
      Line3DBox[{816, 997, 1760, 802, 983, 1748, 788, 969, 1738, 774, 955, 
       760, 1664, 941, 746, 1656, 927, 732, 1646, 913, 718, 1634, 899, 1715, 
       704, 885, 1704, 690, 871, 1695, 676, 1614, 857, 662, 1607, 843, 648, 
       1598, 829, 633, 1590, 1010, 1044, 1009, 1076, 1098}], 
      Line3DBox[{817, 998, 1761, 803, 984, 1749, 789, 970, 775, 1671, 956, 
       761, 1665, 942, 747, 1657, 928, 733, 1647, 914, 719, 1635, 900, 1716, 
       705, 886, 1705, 691, 1620, 872, 677, 1615, 858, 663, 1608, 844, 649, 
       1599, 830, 634, 1591, 1012, 1045, 1011, 1077, 1066, 1092}], 
      Line3DBox[{818, 999, 1762, 804, 985, 790, 1676, 971, 776, 1672, 957, 
       762, 1666, 943, 748, 1658, 929, 734, 1648, 915, 720, 1636, 901, 1717, 
       706, 1624, 887, 692, 1621, 873, 678, 1616, 859, 664, 1609, 845, 650, 
       1600, 831, 635, 1592, 1013, 1046, 1068, 1082, 1067, 1102}], 
      Line3DBox[{1100, 1059, 1079, 1060, 1034, 1772, 1006, 1054, 1038, 1775, 
       1040, 643, 838, 1605, 657, 852, 1613, 671, 866, 1619, 685, 880, 1623, 
       699, 894, 1630, 713, 908, 1643, 727, 922, 1654, 741, 936, 1663, 755, 
       950, 1670, 769, 964, 1675, 783, 978, 1678, 797, 1755, 992, 
       811}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 2}, {-0.1361725839726618, 7.362134777752165}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.664139944404931*^9, 3.6641399892550488`*^9, {3.66414002148744*^9, 
   3.664140028297571*^9}, 3.664140064251515*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HopfData", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"Re", "[", 
         RowBox[{"N", "[", 
          RowBox[{"\[Lambda]", "/.", 
           RowBox[{"Hsp", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.1", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"HopfData", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"HopfNumSol2down", ",", "2"}], "]"}], "/.", 
         RowBox[{"\[Sigma]", "\[Rule]", "\"\<NA\>\""}]}], ",", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"HopfNumSol2up", ",", "2"}], "]"}], "/.", 
         RowBox[{"\[Sigma]", "\[Rule]", "\"\<NA\>\""}]}]}], "}"}], "]"}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/HopfData.csv\>\"", ",", "HopfData", ",", "\"\<CSV\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.63863990560841*^9, 3.638639926239593*^9}, {
  3.638644045909617*^9, 3.638644116989501*^9}, {3.638644615893413*^9, 
  3.638644650687533*^9}, {3.638644722860569*^9, 3.63864472443217*^9}, {
  3.638644849694337*^9, 3.6386448735325108`*^9}, {3.638645000877178*^9, 
  3.6386450203725367`*^9}, {3.6386450510972853`*^9, 3.638645067085988*^9}, {
  3.639920040670121*^9, 3.6399200436684933`*^9}, {3.646402216221128*^9, 
  3.646402289504469*^9}, {3.646402320288471*^9, 3.646402390873472*^9}, {
  3.646402442501273*^9, 3.646402455707924*^9}, {3.6464030697012367`*^9, 
  3.646403089724263*^9}, {3.6464031345594397`*^9, 3.646403138271303*^9}, {
  3.64640538319866*^9, 3.646405388648613*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/HopfData.csv\"\>"], "Output",
 CellChangeTimes->{{3.646402358736553*^9, 3.646402418105988*^9}, {
   3.646402448394082*^9, 3.646402456359692*^9}, 3.6464030924486723`*^9, 
   3.646403140009247*^9, 3.646405392496331*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hsp2LS", " ", "=", " ", 
   RowBox[{
    RowBox[{"Hsp2", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", "\[Lambda]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.646407258333289*^9, 3.646407376295025*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"co2NUM", "  ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{"\[Lambda]", "/.", "Hsp2LS"}], ",", "\[Mu]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.646406959466886*^9, 3.646407086173065*^9}, {
  3.6464071527129374`*^9, 3.646407230239566*^9}, {3.646407276747446*^9, 
  3.646407306224883*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.6464070535468187`*^9, 3.646407189361524*^9, 3.646407231997151*^9, {
   3.6464072825050287`*^9, 3.646407303372532*^9}, 3.646407338786059*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PS", " ", "=", " ", 
   RowBox[{"\[Lambda]", "/.", "Hsp2LS"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"0.5", "==", "PS"}], "/.", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.5"}]}], ",", "\[Mu]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.646407398985115*^9, 3.646407581041992*^9}, {
  3.646407613776966*^9, 3.6464076169604397`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.646407415514859*^9, {3.646407455025185*^9, 3.64640758795927*^9}, 
   3.646407633138193*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"String", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<x=\>\"", ",", "2"}], "}"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641389393917294`*^9, 3.664139015544743*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxFxXss1AEcAPDDVnlOltPPjOiyYWKcNhWpRNJV7oiaZF7LKFq0rtqadJY8
IlbRaXROJXMnKpXH4eZUdJw7brrunM77cjHHZh7VH77fPz77OMal0RMNSSQS
7Z//n0icGhBMR/hvPll/Nk5FUA9tTjaVFTYSgfBe3x3cCiIc3t/vzX9EJMCC
Z10+BUQGnJ2Vd+MBcQ9OyNARuUQpvK00pOrPfDX8od8rONieB0dlK0a68prg
tIZr7k8XP8ILRUM9BgbtcE9Hd7v4YCeczAwxP6cVwh3GXht1l0VwDUe4brvn
KxxAbn3BqO+F3UWK5m5XMSwNYMy9nuuHU01SJDJPCfxNHtlqUTgIM4Ki1BqN
FN5XmRdZSRmCR9dLpJfuDMPjIWIOuUsO88tUzAHHEZh73yjX5eYPWB9/fibp
swI2DcyhN9go4duW42bqaBVs1uZGGqaNwn7XT691reDs6nzObrYajomg9hmH
jsHvZIklbUu4by/fcOLxL3jXsSR9SaAG9qH6FDdN4KqFgi8c1jis9Q5jEV4T
sPOs+4zBIC6kZErSsybhh1JZPJ0yBesYgmJDIf42wvqo79VpmNOXXTFmNQMv
i6JvWXXio8Xtessrs/DSwAHiroUWTi91EjBbcJs+J0tNzG+YIatbtVvHFy5W
pSpq5+D2WB7L4qQO/iRODVWewt/7u26vD8Pr7LhsWiReLi9vzI/DM8/kqE2Y
uFvABb+tNbgzz9Zo+BXuZC/vqXmD71ylhwc14Fuaj6ewWnC1B7XMaBBXPJ+P
GZThcnMehSPHv8+68I8o8ZaXDqKsabyZ/DM/TIs3ssrpjjq8Nt5aKVjEuRIJ
p2gZrzxclBy7grP5NA/PNfyJg6l+YwP/CxUIhds=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    RowBox[{"String", "[", 
      RowBox[{"{", 
        RowBox[{"\"x=\"", ",", "2"}], "}"}], "]"}], TraditionalForm],
  PlotRange->{{0, 1}, {0., 0.9999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.664138965665476*^9, 3.664139015931336*^9}}]
}, Open  ]]
},
WindowSize->{1792, 1364},
WindowMargins->{{267, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 76, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[659, 25, 6574, 140, 233, "Input"],
Cell[7236, 167, 47961, 797, 253, "Output"]
}, Open  ]],
Cell[55212, 967, 124, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[55361, 972, 1940, 44, 97, "Input"],
Cell[57304, 1018, 2579, 65, 52, "Output"]
}, Open  ]],
Cell[59898, 1086, 551, 13, 46, "Input"],
Cell[CellGroupData[{
Cell[60474, 1103, 1036, 19, 28, "Input"],
Cell[61513, 1124, 1044, 18, 28, "Output"]
}, Open  ]],
Cell[62572, 1145, 153, 3, 30, "Text"],
Cell[62728, 1150, 382, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[63135, 1160, 649, 17, 63, "Input"],
Cell[63787, 1179, 941, 18, 50, "Output"],
Cell[64731, 1199, 1130, 24, 52, "Output"],
Cell[65864, 1225, 1120, 23, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67021, 1253, 6599, 138, 233, "Input"],
Cell[73623, 1393, 27103, 527, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100763, 1925, 294, 6, 28, "Input"],
Cell[101060, 1933, 250, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101347, 1941, 302, 7, 28, "Input"],
Cell[101652, 1950, 301, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101990, 1960, 2419, 64, 148, "Input"],
Cell[104412, 2026, 1579, 46, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106028, 2077, 131, 2, 28, "Input"],
Cell[106162, 2081, 2131, 57, 74, "Output"]
}, Open  ]],
Cell[108308, 2141, 406, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[108739, 2155, 102, 1, 28, "Input"],
Cell[108844, 2158, 6265, 177, 95, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115146, 2340, 652, 16, 28, "Input"],
Cell[115801, 2358, 1577, 47, 52, "Output"]
}, Open  ]],
Cell[117393, 2408, 173, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[117591, 2416, 521, 14, 28, "Input"],
Cell[118115, 2432, 863, 22, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119015, 2459, 5981, 135, 301, "Input"],
Cell[124999, 2596, 3670, 70, 398, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128706, 2671, 93, 1, 28, "Input"],
Cell[128802, 2674, 349, 10, 28, "Output"]
}, Open  ]],
Cell[129166, 2687, 105, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[129296, 2692, 1548, 37, 97, "Input"],
Cell[130847, 2731, 501, 9, 28, "Output"],
Cell[131351, 2742, 600, 13, 28, "Output"],
Cell[131954, 2757, 493, 9, 28, "Output"],
Cell[132450, 2768, 515, 10, 28, "Output"],
Cell[132968, 2780, 591, 12, 28, "Output"]
}, Open  ]],
Cell[133574, 2795, 4102, 110, 266, "Input"],
Cell[CellGroupData[{
Cell[137701, 2909, 495, 15, 62, "Input"],
Cell[138199, 2926, 128, 2, 28, "Output"]
}, Open  ]],
Cell[138342, 2931, 580, 13, 63, "Input"],
Cell[138925, 2946, 620, 19, 28, "Input"],
Cell[139548, 2967, 484, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[140057, 2982, 104, 1, 28, "Input"],
Cell[140164, 2985, 48961, 993, 435, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189162, 3983, 144, 2, 28, "Input"],
Cell[189309, 3987, 79, 1, 28, "Output"]
}, Open  ]],
Cell[189403, 3991, 254, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[189682, 4001, 1285, 32, 46, "Input"],
Cell[190970, 4035, 2159, 45, 537, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193166, 4085, 97, 1, 28, "Input"],
Cell[193266, 4088, 8080, 205, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201383, 4298, 6573, 140, 233, "Input"],
Cell[207959, 4440, 148422, 2446, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356418, 6891, 3751, 81, 97, "Input"],
Cell[360172, 6974, 265, 8, 43, "Message"],
Cell[360440, 6984, 265, 8, 43, "Message"],
Cell[360708, 6994, 306, 8, 25, "Message"],
Cell[361017, 7004, 273, 8, 43, "Message"],
Cell[361293, 7014, 263, 8, 41, "Message"],
Cell[361559, 7024, 326, 9, 25, "Message"],
Cell[361888, 7035, 267, 8, 43, "Message"],
Cell[362158, 7045, 261, 8, 41, "Message"],
Cell[362422, 7055, 342, 9, 24, "Message"],
Cell[362767, 7066, 340, 9, 24, "Message"],
Cell[363110, 7077, 304, 8, 25, "Message"],
Cell[363417, 7087, 308, 8, 43, "Message"],
Cell[363728, 7097, 304, 8, 25, "Message"],
Cell[364035, 7107, 328, 9, 25, "Message"],
Cell[364366, 7118, 346, 9, 24, "Message"],
Cell[364715, 7129, 343, 9, 24, "Message"],
Cell[365061, 7140, 186983, 3161, 329, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552081, 10306, 749, 20, 46, "Input"],
Cell[552833, 10328, 112857, 1840, 345, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[665727, 12173, 1941, 45, 63, "Input"],
Cell[667671, 12220, 312, 4, 28, "Output"]
}, Open  ]],
Cell[667998, 12227, 276, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[668299, 12238, 480, 12, 28, "Input"],
Cell[668782, 12252, 200, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[669019, 12260, 420, 11, 46, "Input"],
Cell[669442, 12273, 161, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[669640, 12282, 352, 9, 28, "Input"],
Cell[669995, 12293, 1960, 44, 253, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
