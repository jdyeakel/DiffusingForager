(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    768528,      14642]
NotebookOptionsPosition[    762244,      14448]
NotebookOutlinePosition[    762601,      14464]
CellTagsIndexPosition[    762558,      14461]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MetapopDyn", "[", 
      RowBox[{
      "a_", ",", "\[Lambda]_", ",", "\[Sigma]_", ",", "\[Rho]_", ",", "m_", 
       ",", "\[Mu]_", ",", "T_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"R", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"a", "*", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}]}], " ", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", "*", 
               RowBox[{"X", "[", "t", "]"}]}], " ", "+", " ", 
              RowBox[{"m", "*", 
               RowBox[{"Y", "[", "t", "]"}]}]}], ")"}], "*", 
            RowBox[{"R", "[", "t", "]"}]}]}]}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Sigma]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Rho]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"X", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Mu]", "*", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Y", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Lambda]", "*", 
            RowBox[{"Y", "[", "t", "]"}]}], "-", 
           RowBox[{"\[Sigma]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "+", 
           RowBox[{"\[Rho]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], " ", "*", " ", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"R", "[", "0", "]"}], "\[Equal]", "0.16"}], ",", 
         RowBox[{
          RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0.16"}], ",", 
         RowBox[{
          RowBox[{"Y", "[", "0", "]"}], "\[Equal]", "0.16"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "X", ",", "Y"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "All"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "0.5"}], ",", 
       RowBox[{"\[Lambda]", "=", "0.2"}], ",", 
       RowBox[{"\[Sigma]", "=", "0.3"}], ",", 
       RowBox[{"\[Rho]", "=", "0.2"}], ",", 
       RowBox[{"m", "=", "0.2"}], ",", 
       RowBox[{"\[Mu]", "=", "0.3"}], ",", 
       RowBox[{"T", "=", "1000"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Traj", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"R", "[", "t", "]"}], ",", 
           RowBox[{"X", "[", "t", "]"}], ",", 
           RowBox[{"Y", "[", "t", "]"}]}], "}"}], "/.", 
         RowBox[{"MetapopDyn", "[", 
          RowBox[{
          "a", ",", "\[Lambda]", ",", "\[Sigma]", ",", "\[Rho]", ",", "m", 
           ",", "\[Mu]", ",", "T"}], "]"}]}], " ", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{"Traj", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "All"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time\>\"", ",", "\"\<R,S,F\>\""}], "}"}]}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.636818991590914*^9, 3.6368190277522917`*^9}, {
   3.636819069088731*^9, 3.6368191125387383`*^9}, {3.636819264811551*^9, 
   3.6368192980259027`*^9}, 3.6368225644646*^9, {3.636829939892223*^9, 
   3.636830014380571*^9}, {3.639404872826383*^9, 3.6394049722443237`*^9}, {
   3.6394050144911413`*^9, 3.639405019012155*^9}, {3.6394063834669647`*^9, 
   3.6394064149109983`*^9}, {3.6463985279599457`*^9, 3.646398609007303*^9}, {
   3.646398645453455*^9, 3.646398754993803*^9}, {3.646398793627618*^9, 
   3.646398828570057*^9}, {3.646398898504942*^9, 3.646398916564762*^9}, {
   3.646399089033573*^9, 3.646399093251112*^9}, {3.6463992694913187`*^9, 
   3.646399271481216*^9}, {3.646399330822397*^9, 3.646399353267209*^9}, {
   3.6463994019138317`*^9, 3.646399444394405*^9}, {3.646399508960676*^9, 
   3.646399534049861*^9}, {3.6463999152131853`*^9, 3.646400034745784*^9}, {
   3.646400132351523*^9, 3.6464001410179853`*^9}, {3.646400202948778*^9, 
   3.646400231178789*^9}, {3.646400293450811*^9, 3.64640029727627*^9}, {
   3.64640032943053*^9, 3.646400337373057*^9}, {3.6464003864565907`*^9, 
   3.646400422694214*^9}, {3.646400520282331*^9, 3.646400566181733*^9}, {
   3.646400624135583*^9, 3.6464006531024637`*^9}, 3.646401179779606*^9, {
   3.646413474146559*^9, 3.646413508873995*^9}, {3.6464147899261913`*^9, 
   3.646414836692885*^9}, {3.646673579737204*^9, 3.6466736183704348`*^9}, {
   3.646674392355935*^9, 3.6466744309787188`*^9}, {3.646675181556884*^9, 
   3.646675227641704*^9}, {3.646675321723659*^9, 3.646675353025045*^9}, {
   3.64667575507104*^9, 3.6466757867580757`*^9}, {3.646675849303026*^9, 
   3.6466758675577517`*^9}, 3.6466790733558197`*^9, {3.646679246481843*^9, 
   3.646679252826593*^9}, {3.649002839449933*^9, 3.649002860143219*^9}, {
   3.663351628871316*^9, 3.663351651229472*^9}, 3.663351767965734*^9, {
   3.6633597009112062`*^9, 3.663359734075075*^9}, {3.6633606768519907`*^9, 
   3.663360680606036*^9}, {3.663447624368971*^9, 3.6634476529510107`*^9}, {
   3.664129451638467*^9, 3.664129475440546*^9}, {3.66413613394307*^9, 
   3.6641362001276207`*^9}, {3.664136395418762*^9, 3.664136443243495*^9}, {
   3.6641393538180943`*^9, 3.664139395274169*^9}, {3.6748241859689693`*^9, 
   3.674824206220693*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
lPUqVZqCEq2F52O6SXweYNW1fWcKhUzVT1L3TSKfL/5dV7+bgvu1oxe7+SfR
X/9+9bxFU3gf87tAU3ISxe+Tb2uhNQObk4lK2zCJ2Csenp86YAbPeEtpvxtN
ohy9rWa6E2Zgkkep8tF9EonN2SodUzWDmOMu6e+jJ9GLxLcNmpfMwMVyg/YV
nn+V48LyHj5m0GTjs5H0YhL1dsTXJsWawdL772pH+ycRiVa3oveZGTwvI/8z
5pxChP/KJZZazIDyhfuX53JTiEKF7SnboBlceGK6L9xyCnFdHSgwoTEHuZKy
V7VPppDGH/vM72bmgB6std3QIKLoVTLXXQ9zMHDI2ej0IaLGeZ+7OlHm8ONk
S4LDAyKSmIhMfvXEHIbap9+Ikoho3/uMqJw1c1Cmk1Cmvk5CWu8O/TOjt4AB
ttdiy6UkFPO6MISVzwIeFR+7av2ZhPNlrV/0BQvYeGFRcw7vn8HsPkfHNAv4
zG41nVNMRmzp5qO8hRbQXaJV3NNJRtp3Rqy+NFhAf7OSQwuZjF5dnzNRHbcA
Bdo1nrdHptH61YBPW2sW8OYxw+5SpWkkFf5X7zn9JbhI3/dNwGwa5fnQa4hI
XwLrdbs9QXHT6Lv7rdaRC5eg66SM9oWH04jTiUs53fwSmEtvqgeUTeP68OjV
Rc9LQPha40XRPI3izYXP0F+9BIH0dvdHP0yj14alz9+kXYKUzznL7MPT6LeO
rGxY4SUIH7JjfTA9jWTUG8plGi9Bo4zHe7fVaeShrCw+++ESCNRWaSVsTaP/
FDuK8scvgbpR/9LvXTNo+JS+sNX6JeA4z2L2imEG7T/x9TEHgyV4m7cqDTDP
IP3j1vw9fJawMaMYrbNvBt0QmnwYJ20J/qofmQXZZtAbfg8upGoJ2xrDX+xx
+1/u5bR1c0vQY/lZw8oyg06yh7KWe1rCCfs3wfKMM8iLiTLZ9aolpKy5NI7T
7tTTePpDdy2Br3KdxEMxg0apmK9/K7QE5KDPP70+jXj+3aW+3WgJF375H7ea
m0aG67xRmr2WcOe4dWDU+DRKXMz7SzVhCTTHz6zbfp1GrTOiIQ3rllDPc1mI
sXMabU1WrPozWMFriTPTKbienx6R8xPjtwKhws47v0umkc9g09yEtBW0KR9s
t8DrMdbznmhsYQVbycyfTgdNowMdRo5MXlYgZ3Zb8ZPDNDJ6OzTSdtUKcgfW
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
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwc2Xc8ld8fAPCKUCQjhcqupBApIzmfbLJX9t772jskOy0jGYmSkBT5hoRC
NlERQsjOuNeu+J37+8vr/Xru8zxnfD6fc86D29pDx27Prl27sql37SL/nSP+
VVO0X5WpyyZUjwY1oM58mpPyj3vRVbUCtgCrBvSFLsSI7fE4gu5fZ7b0G9CV
JtKjO4TfqDX5fT2dUQPqq71AonhMQlNlx+6YuDSgpExCKorbQGsSns9TbzUg
+cAXksGEf4gzeOOZZ10D2i70cR88uxt2PFV+ZVI2IqN0JtjMoYCpyp2sDuNG
VB5TyniEhQoWPpej1x8bEYOfxrhYHA20sV1fWEVNyMV2vlzn334YNF/Qk+lu
Qk068dGehAMw3vtqUsD3E+K+wm+Y9OsgxAdvx+sJN6P3R8YPfTvLCP63HMvU
d5rRPP3rfxP2TPAtx3Y291cLYqeKmCTlMIOgSMWrwbFWpPxPs2vP4CG4gKgK
gtfbkO8Kx1tGlsPQq17dTcHXgXLnfudwaR4BZ+H2CZJjJ+oeexcnHMcKB1up
4tqautD29wQvmY9s4HDQ7/neR93o7GdjE/V/7HBXdOnDQ4fPKKZ246wL4Thc
+jyrUsLVi8orPrEEFXHAu39Gm2WMX9DYi9Tt2F+ckM5B++kdw1fEqcHu2HuW
G9KuUFBMS/ahipaIoYEWbri7J07ktm0/UlOY0Rqz5wGvv2yjkP0dBUm/lVzO
4YU6MYkHT9EQYnzLWbJxmQ8y5395Vj77gQrOx/DsGuQD551jp1M5R9BXAQPa
gywnQahKwT6c8yc6x7YydDaOH4Y4qL3GsybQp2QTbbGTp+GEFn9o451fyJzh
Y+Olj6dhfe69KXXCJEqkvlei+k8A0q+IMKQlT6OpVeFwR4IgODvulRdenkdh
hLQVD3ohGDr1Vbbs0AI69Hvb0b9ICCLiS92mLi0i2YkO7ehfwvBYtUZcqGUJ
ac68Yew5KwITNPRH0nlJiP3ZTJt+sAj4Cf4+L/6WhCZtj0d/bxGBYpeoPzuq
KyhkNGpr1F4UDD16lqYcV5Fy9tty2zeicOJd0NYScRUxm867T1Och8d3G9j/
BKyhwj7d8cWc88BklvX7n9864kp7fZV+7TwQRvTeV6yvo1QDxvKzV8XgyTLX
hCVhA9Ed9jx2NUcM3LU6PnmPb6DIr51RTqtiUMP/76qP+ibaSBb8HaN6AbJP
qWiulWwid71E/fxHF+AAr+V0FvUWmmCeq2lYuQDuqV5GXNe2kFGvyslxlYtA
kvAtk8/aQp33CpJ2P7oI7yQnBSe+byF5Hep1zpWLwMpLOjNL9wdVMdpbyKiI
w8eKfKLuxT/o3OeGT6bZ4hB1eOXIOYM/KP8O77lgkjgsTD19keX6Bx3TinyQ
riwBh0QCRdsC/6B7B3/uepslAcfFtHRWQ/8gmi7k9I0oAQNAH26Hr4clZX9e
UZIEDqs33p74/hX1f5LMWZKw2+drms+1P8j5gGmuCFESzM/QePRL/UEj7VX7
tZSkYEWE/R/NkT9IL5HN2z1TCkrN1aQC5rdQ69WAwcRlKeBQ43mQUb2FgLZP
rkjxEpgYXn00G7WFKlovFLdkXAKS54WCH8pb6Gx88qHppUtA3/G8bB6PV64K
KYRKURreC7bYJn3YREnNpepyS9LgrhZzyfDsJrJrOrP4Tl4GXi6dbxj7sY4G
bsZfG0yXgappinTvm+tIS2GmdnNBBvbue/Gq9cw6km7Iv3MxHYFaFpXufr81
tP8nA1u/H4DRsuVhN5pV1Aig7vAY4B2n3wDpxQoKz/GIWGsDcPyT4wJ6K2jN
onPmEPcV6Pu7YdifR0I/hxOqtNuuQHvhygkKXSLKlKleGF29Aj7hOkNf9hCR
QfYsjyeXLHxzdGb0K19G7WYqCUm+smBk0CgRcnwZxdQE1B7PkYXC45/tqL8u
IdnjBaTiVln4uFQ+XpK0hN4OUZm2ccrB2pm2its0S8hb+uIdY1U5EOnzDm+5
u4iEMu0aZnzkYHVK8N7RI4voiUnDWZpWOZgqOUt36NwCsqgmWaatyMG1Z+eS
f338jdiP8qac5JSHt3d1q96Y/kZ3BiL+yfvIw3VZsfDsrHn0dHlTeE+mPEhH
NnPeuDqPqmi8rGs/ysPweNrU7u051MU5mxwyJw8m+UXb/G/m0MRF60+SzAqg
e3lHjYowhzbVBzbXpBTA0sUt/JnIHKK30zlbbq0AAy2c9Ozrs4g3pNWcEK8A
JrubhV3qZ5HEfdm7Qq8V4JGo149nd2aRemHVx7nvCrC7f//HIdtZZF0vulaw
WxGqtoNED8vMIv/+Qn7704pAbPjIaHlsFiUu8pjwaitC+0G7xsadGfSYKuPW
aIAiNPCHHNGZnkEVx5nrsnIUIeTHR/aD32ZQu1gC0bgZX//tRkvVMoN+XqU4
wbqkCN6LZmdQ/Qxasw6+9vWIEow4vsmqfz+D6IJIcfeQEthzGV++j69z33V5
p+mgBKu/LXze4vsvFowv0N1Wgj1pJvRifTPoaq0Jd2uFEgg8pj1APTuDLL/1
6sYMK8FRpWsB5/bMIt/fV6PlqZShee6tyAvOWRRP2fB2t5AylMkxNfjLzqJH
R6Xn3usrgwX/pHis8ywqFy0/HhKqDLbCreO9abOoReWsluRTbAUuWfXWWTRs
+SRyrV0Zdm2tt47vnkMk/2NvylaUwXp3QtMNmTlEczt5yvOYCvhOroscDp9D
ojVRanMuKnA358jaE8Z5pPTlb1jBfRWI41bJsrKaR6ZzPq/sqlVAXeSJwN03
8yiaze7w6H5VWMw4b5rj/BsN+CqMfnmuCh6fd+Jo9yyixcQapnufVWEsjmkf
tecionxyQUFzUxVMY6K26kZxfPacKGxRvgrUMS7SBbZLKFKIyuf91FUYlnku
ffraMkpTCMsPPqgGp4sM7KaTl1Gx6Vq/hLgaVASY3fvQs4y+xU9eLotWg39/
Lz1m0iAigakm6oIT6qB+77swhwwJoW0ZKTt1dci75XfzrT8J6bH858rjqw4L
IjU+FKUkFCb37HNmgzqMfJpZ3X1sBd035qQ0nleHUkalXFvNFVRASLt45JAG
TDW53P0WvoJ6H8Vk3LXRAEVvBUeTHyvosKk4ionXgG9P41NNqVeRIevUWMgr
DRBlWCZSCq+ijC+p0V79GqC96c8prbeKhu8oCjjuaEDFRJLZvN8q4lZf6zA7
qQkqK6yFe9JWke2+fIKuuiYQAvKb3ctX0bNGfRYVH034frNen7drFc1G7K2U
ydCEVMlbLSxTq0hQ5o2p2AdNoLc4EyjzdxV5btnuEpjRBJcVv5QH9GvI2GR/
z0EaLcgYO3WUh2MNBUuO5cUf1YKP7UxtgwJrKPNIle9eYS248B+BoUVsDb1f
vasULqsFpu9j5hcvraHRXie2P/pawE1VMGAIa2j36ytzvk5aoBDBXEIvu4Z4
7rDVLIVowaQ6jQ/HlTUk776c5HJHC4YjLqmmXV5DdmotlpN5WuCuXnMpXnwN
RQs8FrX6TwtORzgd3i+8hgpoAimHWrXAWlRW9gzfGmqZ1PpmMKwF++rF0iiO
rKHZBv6Cz8tacGqcRayQeg3R5e0KUturDePR37XE11aRUET/1U+s2vAf49uj
DWOrSNOi9LjsWW0YY96V6Nyxiu4dtawX19WGFuoNdY+sVVS+KX7/tb02OF5J
EKG8sYq+9h20EwzShuuLs+mcDquINbmWhvexNtC3MJwyOrOKpLzSBrLKtSHR
zvhDCe0qMtHyKGZtxs+TsM/cnF1B2XScWvSL2iAVX2c6mL+C+G6GpW1K68DH
qwxviw+vIGG/yye7+3XgyMdDx2/MEZGWHsuG6rwOfIVhz3dNROQl+rulcUcH
pjkGlq7lElH5QqZb9Uld2KE2UtkwJiIph7/l+T66IBLqoZLQu4xMFb5Ec8fq
ArveeYbYsmUUyltsmJmhC+uxoftMcH7UjZj8vftBFxj2XPZ7ZbiMxmrOd9J9
04UMmXhbVellRJFJmxMzowt/2ZhuTHAtI0XDarlQBj2AsXK+K7+XUM/a8frs
E3oQe1IsiqV3CZmnhMvUSenBUctfIVeqltDs+fHqn5p6sHuPlnRn7hLy61GQ
pLDTA0lPGpmGxCW0h1BQwRekB8rV1hpnApZQ0kFaMcXbehD/9mLCfrslxF7i
9srhiR7QBg3aOuouoXy1bqG4Sj1oJIhlq8otIdE50eLCTj1IfXtGrUJsCb2P
SzndPq4Hfutvv7w8tYRU+Tfyf2/owdnb/L+lji2hb03GfAfp9eGBxGCaMdMS
srareXyOVx8at7u4GfcvoQUKLk4dCX2YlD3JZUmxhIJyIzO91fVBYiSh787f
RUR95RdbirU+aJU4X05eXUTJI0ppFf76cO+/Xs6W5UXEFVZ4qD9RH0qy92ad
xS4+duDe5mN92L6/KlNFWkQS1R4Hj/6nD6Vs5Ysum4uowagnUbod+8ClzWO7
l5DWhth+85/6IHjQ1eMA9RIaSk2Lub6mD2cXrFsj6JeQ44Utyse0BpDp9TLL
+8gSWuk1jfzAZQAtt1MyB7mXULhX7c74BQNwsuVJeyW4hOgYeUL3XjWA1Rvn
guelltCDl1FbJy0NIE3hmE6kyhLi05jyV/Y1gEDar+BotIRK51VWneIN4Daf
fuw95yXUfPrgUnG5AYx+d/4UfmcJ6TUT3DpbDKD7AO8s/9MlNGr/ZXZx2AAo
Ff80/sDzvZGX/kt03zUwPm23dXZmCfFz8A2+NbsGAhSzqt6ayyiWSbKpgcoQ
CnKlHyuIENGhVxlyk0cNwcqwPXREnYhyNLfrqEUMYeuI9YCCMxG9TfxYrWpi
CH1yE8w8ON7lz5yUdPU0hFzDtga3GiLqbomtuHXTEAp177WK9BPRNJXGq+6X
hpDCNLvTS0tCPk9LhYgNhhDy0cErkY+EdskzFzPjyrQ8bDRNkCYh1oj+fANK
IwiyCHaJcCKhJ5yX+ALYjKAj/GV+YhgJnXuf9ThdyAhKdP2sY+6RkMof68wh
QyMQ22twg+0/EopcnWFNcTUCISP30vgmEnq36JmiHm4EUhaP6qe/kNDqzDoj
VbIRuFEZ8AuOkZDQRFjS+2dGULiQoKqzQEIOw3tp/auN4BnNrhjdTRLK6U+M
Ee4ygsnmRCFBihX0vYeZcnrMCGSn/94aol1BTB0Pw3PWjKDn9fqoBfMKuvqJ
+5/hfmPYy8FgVMG2gqLqCwIZOYxBVeQb8yjHCqqpFl5rETGGA0O5LMM8eL/5
psIrUsEY5kfWFV6fwPWm9PKilJExfBphd7I4tYIcCxtcSK7GsEW9yDKD/fjJ
1emicGPoqugv0cUeyO6xtU02hreK3649wfczpxv9PFZgDGPPO36P4uer3R81
+1ptDFmUIn8Ocq6gm7ccBm51GQM0Xi+RYF9B72MWDBTHjeFnqnKn9aEVtB7h
27u9ZgzlsaMlqQdW0LmQv5r/7TeB9owrJ3/sXUHOfjfaPThMgOlefQT6R0J5
nvtV+EVNoOnsYOAnEgkNOd9tHFUwgeXk/JPXZ0josB2rbLqRCQi91Fr1HCah
WKOTl/ZHmMBGtAyzEJ6fet0X/31INoEHN3lvHKwkoS11MbHgAhP4UC145VoR
CbnKygrOd5nA21u5KUpJJPRUuuX5k3ETyKa6rEt9nYSGL2qdNFs3AYOXilkm
HiSkdcacs5PDFB5zOsguaZDQhUNBjKVupvCQdpyJFsefO/3uJMcIU0ibmzYv
3STi9St2P3eKKQyY9CbLTxMR+78UinvvTCGvuGTNppGItn+9WvWmNYMkzuPs
6eFEJD4q4XWW0wzGztikf/YgIs+B2oUJUTO4VXiGVsmCiMY6O6b0jc0gwMHj
1n5EREdb9Gzp3c2gb41U4yhMRHofB0ebIszA8cA+Dj4uImr6b+a7+HMzWDVK
E+7C54mdV54GS+/M4FHiPKF9ZRlJFK/3FHSbgafWdQrZqWVUmLO3nW3DDBZ/
riS86FhG4w8TlXtozeET3X77kvpldCyFuTGe0xx8DjvrXa5YRrfjuN//UTSH
7xV0HkceLyNR+fOTxqbmcLUgIjo3Fe+/tuXpqwjmQBr/NDOVuIyCKg0ussWY
QwX3SMbcjWXE4eNoHpBpDgeSinhfBS+jD0JB0X2vzEHbdj7hks8ysptJKLn4
yRxubGZZ33JbRjRPsr6lDJmDxUfOygIHvN8zf7m9smwOLyPLeG9bLyMttvqT
etQWMMvUVnnFfBnXyx6NsmMW0HqkiqXeeBk9SJrwYxK1gKEPp/UP4PXvkspa
NkHJAvJcWNlOGiyjYQqaT92mFkAx7xS9X38ZRb5nWxT2soCHHNaKlXrL6GTg
mSO3YyygjOZKzDl8vfX8ZbSQaQETPKH/3PD97gsaDuqvLWCpWnrCHT+f6bnl
7eJPFjCZfXNH2GQZVdh4/Uf7wwLEJ9czX+D2GXFEjTgTLWBlXjt1HLc/bL6V
4heFJRi/7tbpwP3rbulNS6a3hGuPzFrtcP95ng2dkWezhOcONjHPvJeRT9Sv
WhKvJfTGlBYmBi2jJqsF3TwhSzh8dOI3feQyYkXrUzqSljBBoik4Fb+M3m3S
MLzWsITk49R7d2UuI/o+xidWRpagHC+VWPp0GVmWs0sw2lpCSHSX6feXeD/g
cdbSM9AStEVrpb0al5Ge2oUVzihLuBL09Ft39zLKPy0T25VkCTVxEgNRQ8tI
dUKzVOiJJeg6ov5POL7uGXnv+t1pCWkd6GvxKSI+74UkZ363BG9CSViRGBFd
PHSTX23CEhIKEy+9vkJE3ztTtYo2LcE6kaW11ISIuOSrcpz4rGB4YkjEPgnv
h7g/irEJW4G9bKF++kMiathua26WtIKHQ7ARl09EjpU/lk5pWoGBnHxZJF4v
qlIno/qMrCBdMpM1uJmI6HwWWWNsrSAMjeUx9hLRS6HdVyYDraBa8+/Iv0ki
2kW3/2tKlBXc3vy2orhERDozTE4Kt63AXYGOggXn85Omo/9W0rEtKgatd5PQ
Wh7f3SdPrCA2x/DTmX0kpBwheELvpRUYXryS5MJAQg/NL1ZSVFkBhcC4F8cR
Epq/hNTLGqzAKvKC5JXjJCTDpvzTussKdn9W5f/MQ0KDI9l3R79bgfYx3WMV
p0goIH/1ivmEFXgdK63ddxbXOzc14uCCFZz+fW2mVZiEys7n5RptWsGMl+LE
hiiuT1ubOn0U1iCjoul7/wIJLdRpUejTW0PjibTPD8VJKCHmWVkPqzUEHe59
dFCShPg1tm20eK0hbTx0g4jddEj/UKegNSw4K5sqSpGQzWBRw1UJa6iZzC2n
xd6Vu8e3RdYadg51ayrg32c7Gp1QUrcGu0+JP1bx8y8Jl35tuGYNc3tvO3Fd
JKH+VapoWWtryMnsMmg+T0J+78wu1rlaw+z0UdPlcyTEfKN88rK/NWhe2x32
SJCESlVo06ojrOFb/WHavtMkpMFgrSSZaA1i+9NTMk+Q0Ny3t+sVqdZw67Ll
4goXrvdZBwvEHlvDsFs976+jJHTS1t7wdZE1vH791cvrMAl9FKihOVdhDTyW
M1dz8Xxs/+fsdKbNGk7cTD+5i5KEMsLq2Z5/tQbmRZ8GyX9EJKHA2npy1Bru
FV9hF1wjIu+eRgGeVWtQ67140WgK7zfmueZZOW3AsXukyfsTEd0s889MPW0D
+QO7aE7VEhFPUKfaITEbaJJ6DY0VRGRGHfLioIoNFBy3Ghh4SkQ93H3uVN42
MNK3e+5gFK7v04KcUaE2cLSH36MumIgOvIzq2h1rA8ju33ycNxEpS4ue+5dp
A8WrufYhNkRUY3BrmdRkA1YLb9rtFIjI+PjEY8JnG+iOYsmykyGijXEpncVB
G7AtDfmVK05EooTp17NLNrC+GWAxIYD3T+LIxvGPDezt+6SwyEdEbtspzJN7
beH7F1s6BU68XiXI+fxkt4Wskvunhw4RkYLOQz6LE7ZAWUFjy8OA1x/W5S9D
wrZgRBkqX0NLROEjSjeNpWyBJ84ov4SaiI7nZ1/ol7eFYB7FUxsUOP9cV3/p
a9qCzC9+/oxdRGR4Xi2118gWLo04tj/4t4xWN3MVtW1t4QixdnN5C9eLus21
TndbeJ6nYvRsYxlRvRk7+SDAFpz/Pnjct4bXj+dtBlaRtjC/n7XAcHUZLWSV
Rwsk2gKH2R97AVxvrO9lVZBSbCHMYaJQjYTXn+joyXePbEGvJ+FQLRHXp2CP
w9HPcX/iEo5EYL/3MFTULLMF61s7W3exRWyv+LHW2MJxks3QEvYTQ4H8n022
cKJH5GUmfh6rOvO3wm5b2J12QToZvy/xyt+9PgO24LP0nPcbbs+ui78uXJ6w
hRZOrlHLdVyfBTrtqBZsYfudSoPo5jKa5vgvpWvdFrSjPvxV+YPPa8w5jQ92
28E5xeb7T/B4dFPHrVrR2kGx231PwOMl/5dw4gyLHZTf+nTtKB7Pt0vG+isc
diDtLrsgSkVEj76ffRMtage0PJYC9AeIiKmT5ZemtB3cVrwU047nK/rD9iE2
RTuwpXCiqcHz6V7U7VNkZAeKDj+/8R/H8/mo8omPjR1E5fQez+YmIoPk3C+X
3exgr4xUpORJIpIJ9RHrDreDUp9rfV/x/uKAJuvKyjM7kImVjlGWx/Mvt5vv
/Ss7EGB7uv++ChGtiM/qxlTbwSozxbEZDSIa4npXxtZlB37L7QaFRkRUTLTw
llmzg0ST+9q8eH/DNaWcR73LHpR8rnq6+hBR8qBIb/c+e1hNfFGTH0hEwQ0U
522O20PlGbOisRtEpJr6jBgjbw9Rcu9mT6YR0fv4OzzaGvYwmx/BW5CB4/16
oA67oT3kJFITKHPwfsvx6utiF3vonnqhoFBAREmmYmO+vvYwwfEg/UQxEe3R
Ps6ErttDGOPp7P6XRDQjuUj4fM8erip5dbzE+Wsq1P/4YaY9+B6e6++uxPnD
U//ZJt8eBkXeGb9/h+fnSOFuwVJ7GDE05vbH+f+W9r7IWqU9nONbOb5VT0Rn
d4VY1X60h2ddh5wUG/B5Z8X2bmyHPfAXvZA1wef7QzPq9dp9+P0H6A5K4PUp
9sfFZfaf9pAy639tqIWIRER/+f03Zw9q7RKDNm1ENBB9/6/umj30OVKZFrQT
0Y3BK5FLuxygtE2073kHft+5JepbtA7A9Zg/zLGTiL5GZd86fdgBFIsflk1g
h31XY27icoC6e777OLuIiF/ozwPrMw7w9uslWVbsz5HPOXYuOED3UVn1z/j3
QX3XnmSAAzjYqitcxeY7SyUgcdUBPgEDIQa/ryO8/OUXfQeIfEWLYnB7/L5a
XyBYOoBMZLe8Gm4vpwBj9QEXBwgS/He5H/enOawWCn0d4PsnFRpB3F9Cr1uT
YrgDtJHWc9XweLDzH1Mbj3eAI0J9ZyXxeH0Maf18PcUBFp0qRlfweLp+Drh2
LMcBEuszDkXi8X4f9NVa/40D6DrXtLNXEZFD143p5VoHUHFldD/zHxEx8Im6
J7U6QMGrocYj5URk05EU+GnEAUaqPBKTXuD9AM/lHZtZ/Hxz/mSOQiKq8JuL
2rWKx5Ml7HoK3k/QcCnfkdzvCFVv/4uTe4Tj12v3syIxR6C6HvRs+TYR6X96
eVYZOUICidi2LxHv54+av55QcQSnHI0xzlgi0mqsqjlu4QgpThf2auP9/eoR
ny+34xzhnUGtCBOBiLJdeYzPJjvCo2HVs3ZuuN7Xd480ZzvCi1DrgVYnInro
LDi3u9wRzE7ZavVZ43ysmdztM+wI2rn6FkIGRDTFmBLDMOMIzeqzStq6RHTH
Xu7AC5IjmNz5YJSqRURS1cv3VLYd4RX3DM0OPm+PH8xhnaRxgvAimeLEq0SU
aKuRHcnsBKzTD8MA5+/Fyr+8nBxOkPTp98OjSkQ0cqDoeTW/E4S5d/3lwOtN
rLWRsOF5J5D88TPyqhyOz/+o36xcdgKFUYP5x3j/NkBbIXVX2Qm23tL38wCO
T0vbOkFdJxjtW27sxOvT2TdMiq1mTpApmsqafxnH5776NntHJ1B/scX4XBrH
p7mHNoW3E1Q+T/7SdwnHZ9nxvkehTnCymNteFPszdbupdKwTVHG0vXgrhcc3
ns6a754TEEbzNdyxu+nUHegyneActeh9FfL127dcV546gTRdPI8q+TpjJ2Ho
pROsOVjf8iBfT6b3b6h0Ap2RxxqV2F2HNUOKPzpBgqx6x0n8Po302xHJHU7w
65SB2X/YnUe7o0P6nMBv3FTGGbdXI5sh0fanE7CcZc2Swf3p5NK+qzbnBFH/
WJPP4/5q5N1NFVt1gp3VbzhOcL6c6Mk4tuMEQ1kylsF4fNQKmB5T7nOGg0M1
R9rx+LUL6ObPMzmDXYuEkCQe33bhL6XvTjqD5rR4mo0i/v3rQxVPzjnD0/Jo
Iw5lImoT069OlHKGJglz0yU8f62S3xpNNZxB9IRA7Bc83y1y/QN/fZ2h8lmD
mg+OF+Um1tGJ685wmKZYqs4Q56Oy0a/2OGcwBSPXI3i/3aw+sJiZ5QyFVL3o
Jz5vNl0borzc6AxnR7r3VOB4VBw4tv9ElzO4vkY3hV3xdVOzgwe+O4Nuzt/H
z9yJqNFqmO3HvDPwyxbeu4X3Lw0uo0Khh1xAy/K1MHUorpcLXGJ2HC5QsE1S
VLuO89vTSlKd3wUuOTumR0UQ0QffMbnj0i5wkcRD0XqTiGQ3eFT2KrrAUSmm
hi8x+HqQjcZvTRegpCQd6owjovrrE4Y1Ni5QlsanF3uLiGDPCfOnbi5wq1/W
QgnnZ12Unc0tfxdgS7ISW76Dr1PnO/pGuEBS9v19N+/h63GTbmYJLmDawnti
TzK+TnfKWyHFBc79VRp2SCGi2iSHAMFHLhAzLp31JhXnH2NBKMtzF+ArFRmc
Ja8/96cj/712gYgUEg91Or5++HTsr3cuwBluzbAfn0/eP3C61dHkAoIX57VI
2DJHC++96XaB7XbrvA94varJmk3LGnCB1ZcFff6ZRCTNdSbr5oQLZGc4dDFl
EdG7XJdctwUXoOoIDr2PLX2i+Jn+hgsYMtRObJKvP5svvrzHFTh3zNgUs4ko
hjm4k0TrCoVrj2/4Y+tc37f0nMUVPF58O3QH+/hcGqMlpytMFPbRkT1tcPL8
4dOuYLPMWEX+fdmHcr12UVf4WSoUoIQdJiTnFyntCts1ULqD36f68HOahCJ+
n05dfw42C5Vl5YKmK5xJdvE5gz1KWBh4YuQKe+IKGXNwf4p/hPw1tnGF+M/9
qju4v/4qtByMbq7w77J2owq27Jt09MnPFRYeGJ4Lx+NzgJvfKjTcFQoSnBXy
8Hj2J1ZEno93hYAl+09lD/D+xba38VGWK/z+UKSYg+dDsttqSv+ZK1hvhRBD
8XxRSi/R0L1yhdDZn/ZqeD4fMh9QC2hwhegoffXau0T06YNij9acKzw6sq/w
CK7X94S+kqhWXWH8rsKu1HgiMn9ow1Kz7QoH1bm+0eH4WiGEG55mcoPSlzG0
0zgeubirhndLugHdEedxTxy/c4nKu97KYuc5E7pwfFdsfON2V3MD3sYb4UIh
OF+7SbYDFm6Qrca8sRxARIHXBedeR7vB+r2bPAVeOB/mqumc7rhBagZnAR9e
DxiuqQpxPnSDT3uWvxbg/VG+kAMh4YUbULQbqrThfOv5kbNu88UNGrlePU10
IKIsFWE29mE32Hf6VKWxPT7/vqmR6p5ygxSvucELdkR0nlvNNHrZDcZFV+5z
2OL1KXEgVPoP7k9+lSkLPk+0bDg+IlK6w/m8lGfseH1Jtl2vK6B3h8dhKYNC
VkR0RvoQJQuPO6T3xXrcxPVg7VnuibYz7nBKQcqt2RznI7OIUsQFdwjluXb7
KPat67WO4sgdntF93X/dDO/359Tjfyvj6xO9tCRTIuK9NlSUp+MOJem0Zf7Y
Cx+cO4xM3aGp//nhA9iVQpsLB+3dgfqQi2wZrkdRD2MYmjzcob61VNKZbPvB
GM0gdzD1TiAKYt8UFd7pj3IHmT8t2nuxo7cj/axvu0NwZYPokjF267ffc+nu
wH2Vym6B7FQBO98n7rC2523RDtnWYUPbJe4wTxnyjpd8v1CPbmylOzB/0gNj
7JitE22MDe5wJVL7ay52bFOgbEanOxyIoz/4j+x7HZV8393hddAxX0fc/lhz
bpGScXfYa84fNUG2gG+B+II7PGVELz3xeMSuNXPWb7hDvimrFR0er7gPx9JU
KTwg46TtVgV2vHHDTTNWD7j1gPHSRUvsk6z/Jnk8wILfPWQfno8EoouPp6AH
nK3y/D6NnRjPbHND1gMiH1p1N+P5TKqyhueuHgB8Xw6s4/hIiq74T9TfA37P
95QdwvX7ts5+4XcRHsD9gGJY3BnvF2ZfHe9K9YCPIrFyCTi+7rLv/rNS5wEa
1WWr6jge703qeYW1ecCf6Ta36zhe770umKH+5gGC5XdiXuL6fk9Vq599zgPY
HaRMaPxwfajpMs7Z7wmnX99+GR2EnRd4+NdBTyhr8FVKw+db1TjentMsnlD9
zjAiB+fHVX1/lTJOT4hvvK//MAznyyXuvRt8nqDwg6c+DueXGndbnbSAJwRI
9RE88P5J7TeHRJOYJ+xm5c47Gond20zaL+UJR/UlpX6SXen1UhN5At2qrnwG
Pi+oPTrmkizvCeeqqmxV8Hlb/WbTye8qnvDQUUBpDlvDxXPsuKYn5J5Mzw3H
+a2hzZ5trecJKcdPiu+LxhZvMHpm5AmSfhudUWQfd2eZN/eEM8XiMiSyKVg/
n7P1hFf1a9Z6eH3SmKlP9HXyhGQf0RMFZHe5KFe5e4LV3SK/BbLfsFDueHvC
T6EfOqfw/lAjo7ZWLtATEhPG3+uQHeEUHBvmCYMl5i2eZDswi3fc8MT7wavx
Edia6jVExjjc3p/5PDexpVTPuf+95QmN5noNIdgnlfJmJu95QiFFkIwTNqP8
YbvPaZ5Q8PVKnSr2X4gbrc70hLh9165zY09f/muS/9gTQgnDFb9x+3qlPPru
5OPxP3Sw4CX2e/ExneAiTxi54pbugF0opt9pV+oJeudZ+liwU0WaVbTeeEKl
EvFVFR6PCKFLjVJVnnAtwvK6AbbrmRI4UesJMl/OPJzB42vIz/3uYIMnnNfy
tfTBlj+RLL7V7AnqezXF1vF8CPNQl0104PnZ9gjxwqY69vt5ZZ8n9FynZdDD
80lktTzxZMgTau69F6/G8/2DpTcn6acnUI5YxB3DLj9YmWYz5wnIwCGkC8eL
NcXNmwd2PEF5dqSAAsfX+9ljVlYnCRApy2Z+ENfjwqnbQ1fPEODj9nMVbX8i
SpnYY3jxHAHu/Nf3ORnHs+vwtAatFAFkf3I58Pji9g+atK7KEOBzVaqqGz6v
yvV3KozKESC315xQjfOBvadc+o06AX49/XzABucLVdept490CJAknXW5BufT
ctvD8/HX8O/j6/iOYTc3hgtYWBHgvfpB2xlc78s/kJ6q2BNgRlFe3xD7Ua09
t5gLAf4lGop04P2VX6Ua6z5fAiSP0ZS14POCdUXtfVIgAX4ckejSxlYvEz04
HEaAR+I1DaM4nyVKn8Y33yDAyqGmj37YfC9YqcpiCcAlyb7OjM1QmBCRdYsA
W9edo966ENGf/O2/Mfdw+1zsE22xJ/MIAV5pBHBOjj7Dit2TM0EyzSQADe9W
QC+uH++zrnkoPSaAPVdTdCr284etsyL5BOgPG7Sywk5Ou2x/rIgAVr7fmMSw
w5NLf1KVEkC1RzuLHtv1Lq/ZcjkBAs917izh+nQtKbV/sJIAH/S+nx/Elk3Y
p9f0ngBPC9eFOrCFYkO6Sj8SgLnw9FgTttiFnlXKFgLU2EWUNGNLjZ06ZtRJ
gBQJL/1ebLgdKvuilwCdD4+/miTvX6V7HXd/J8BCrFPaHvx+tRn+2/rDBDAU
Veo/ia2TGvbm+TgBdsnVXdbFNpT7MvhvmgDqlT6JMdgWS6f36Czg8YiGqI/Y
9lnX+fNJBMgv8PhJhcfHVfWrxtYGASzyD5loY3utC/hqbBPg4uvBvFzsgCfh
GbkUXsBgdtV5CztM+1v9Go0XsElQGRvi+YjaPjOtSu8FPnzxR99h3zHsEyOx
eoG8dfOT+3h+U/cKmihxeIFhHn0JFY6HzNeRERm8XrDWl3sgDLuATqhTTsgL
fs17XQ7A8VNfF+WQLOcFd4xqD9/G8UbkF314wd0LWNYEE+dwPG98jamL8/YC
mSvaNd443rcjf0z+CPCC7fdjvzex9/+IPR99wwv0t35Mb+P8YIgfNhqI9QJl
zXzqUJw/h8XFwoWSvKBUoKVrHZv37kj7twde8Kcr6sxYIBEJyFwgCWR7QUir
lbA2Xg/OzcWzXc/zgh6+lzXV2NIKF+1PlXjB1GMUE4nXB1liQmJwmReUtzDq
DWMrP/r5uuutF+yvTekQw+uF3mbijv9HLzidvMb2Gds4f+xEe7MXXFOMzj2M
91+WuhJqXJ1eYNDDIGuAbb8rycun1wtKvsgM38Z2fTH+oLnfC479WrX6iO1l
LFl7bNgLvBlpa5awA6hv//Ic94LKTvqJI7hehJVP0DZOewEFO3eXBPZNKylR
tgUvCPSMDtbFTqS/Y+hG8oKKedU5B+x71b/C6je8gPowywk/7AeOl56ybHtB
W7/++TDsbJa7bU4U3tBpefBEOPaTD5PLNTTekOf8/kAIdqGHNCsTvTc0JAns
9cIuPXZPxp7ZG5wPeJ+0xq5ombKtYvWGo3uz76hhW7vYpq8e9wbZmQCiCDb9
gZ8d53i9QeREASsTdlWJ2R5Xfm8Y+lsg8Js8HloDF58JesP+rFYdcv+ZiAYu
Y6LecDsj9n1yKPk80/vouIQ3mLcLZlths/S10yTLegO/HWf0Ah7vugCVy11K
+P5Ro60SbFf2JsJ+dW9otiJUuWA3mNUOhF/zhke6zHSDeP58Jl4Vu7l6w3yV
RkManm+uaKGfBQRvMKquM7qC3X6qiGXCzxu4D8lcnMHxwufyJMw4whv6uDa7
xLB7l1O1lFK9odQlrfcDjr+w+8w3IzO8gTXOb84OW+DCncqaHG8QrHlnvA87
MiCOR6zIG3bGRaR0cPyK7gSvcNV5Q52QbiwR1+vhnA1+00Zv2FxbXMjGjpf1
NUtr9QZVm/VAdeyxm+5NB756w3/FtbWvcD1POjW3pTzgDTFc5d8csKVaHISj
Rryhap9jCxf2XTqrB1sz3iCpJPcjA9d76ZIf7RcWcXuVJBXNsac1jXcTVrzB
RWs3Ox928vK3C8Wb3vDaheD7G+cj3Nd1ntr2Bsvntl5V2PNi3dk8lD7wUa7v
VAL2g29qvWb7fEDtzbNCC2z5gBbqdHofSD7sSieBvcSmKP2F2Qf0KotNDmFn
Vn/wPMjmA55CC3krnjh/zNBTVQ4fEFCRWOjHXtmu/n6T1wf2OeVDPfajHAn6
en4feD4pnf0CW1X2jexfQR9QtKehzsZeGxfxFz/vAxxVvgH3sHNvlhR5SfiA
LNvd3/HYGqfOjL647APfKvTNY7C3mp8dmpH1gRWHv7Vk5zvzqfAp+4AX/9G9
idg6dI9DLdR94JapJEcy9vaL468f6viAlM7ZzUfYhZoPJ79e84FaKsWIl9gG
y4ePMpr5AE8L4dEH7D3372uqWfvAE6Y2qe/YL8QYomIcfCDytJkECVv+t36A
o6sPJF6OcKTH4zH0NMNVheCD95PXr53F9jb/aSngh38v1jWrhr3/yCl92mAf
oFKZpPLEftzlqjJ/3Qe27QeTUrAlYl9f7ojygTPu6bbk9dt+8/LJ20k+8Etn
MZgZz+e/VzfYPe/7AOeb2pAr5Pl1bqHXfuAD8p5VKgTsj4N660y5PiA5vV3z
FZvrvUtz6hsfoHwtKlSC4+c/v1fv/Kt8IP9JcNkktobweqlhrQ8U5SRPcuJ4
DMmJTGdvwe+z2NVwH/t7ZLpz9pAPHG0UdAjF9dvz0oj59Z8+wFr90v4/bJoV
Pl3LSR/w8WJeX8K+aFd6iWfJB/r1vRWscT7cU/pEl0/hC1Om27xSOF9O7zqw
O4bGFyKO04i4Yde91Vl1OOALGszcQ9nYC6eHf5w+4gvqnXH5/7BvjvH27D/m
CwI6f1IEcL0/luHUNMflC48bpz7qY1+lWy15IeALJ/58icvHHmuQyksS9gUV
y6i/bdhBoeFpHmK+sMSqarOIzXixKUFL0heCbxi/ZMD5XrBAGy4i4wuvd/n2
CGOjZ9o+THK+4OLxs04N+5tFmiNJyRd8h4geDthurD9Mv6j5QoNoyrfr2JSf
ebTfaPvCePf2fAp2RpyjQqqBL9z0Xyp+ji0qWyLpb4L9+iNjNXbLFknQ0NIX
LN0UWVuxLcskeSTtfEHycO77b9jrLtcPszv7wiupO5Q/sZP4Gvf/cfeF0+by
c9PYJ3/s3xn09gUtJWnfBeyaFC3SuwBfKGl3zl/G1tNIncoK9YWiwktRROx5
qqHBsEhfqKq0ZCFfv1HL3W0R4ws+biVWv7HZAxwaINEX2vYFeE1hvzr34i33
XV/g8LPSGcFWniEW70n1hVswR/cVe+SxxOPxh77QsneypBnbzzgspeERfr8m
QbEKm/9jvtjBp77A/V+lYwH2wJmuXqNCX9DzPKOajJ2YvO715KUvbIx27ArD
vvyPk2mx3BfSTESf2GEv2Cm/kqzyBaPfjmpXsXM6PbWian0hM1GZiTw/lDn1
SWytvlCTmWFN/r5RQTMraNvlC+K5t/m6sR0JTB0lX3xBMOOV1wvsNlkbWvkR
X0i5F3bGFvveL8pY9xVf+Kbyxa4Rx5e8huCpyk1f6HmpP5yBvVah30Sx4wv+
RpXfCdhGsfmU6fv8QAK6+45hc51RjvjI4QfnDXu1vHB899z35KLn8wPLK/Fy
ythRfx/UGp72gz0BAsUc2NMdM/9+n/eDBNUk9Q6cHy89E4JYVfyAZ1ogXwzb
8nsZm40Gfn5yJy8jNpPs0NsXun6Q+/XKjwWcf37Mguuy5n7APf9OtwSbP0Q/
9ZaNHwidcLpwB3tgIvRCv6Mf/PdNNtMbW6ai09vN2w9I/NwXEPYSxzrT2wA/
sDj2KuIUdm4M5+s9YX5w30ghlhFbb0lJW/2GHzhlxen8w/Vgr5HnUlqsH5QB
88wsdkX9g9tjt/zAPHZbZwDbUaBeSPC+H/xI+JXSRj5/3J/p8H/gB6Fc82/e
Y7f/YXT7kOUHT3hH35Rhh9lK0R3Iw+8bjksrxD7XYV10rcAP0l+ymuRhj11I
UM194QdWOTo7Wdj3s8tm5l/j579Ji3iILU89FCv+1g/USYLDD7DXPCj5I2v8
4FKyDEM6dkH/2U/tH/xgESIYM7CNr+jbH2n2g3fqLgPZ2HSFoXutO/yg+JKE
9RPs90z5T4p7/KD6scajImzP4E659T4/+Fy7FF2OzT2xNnblhx98p5Q4UIvd
o8YZmTjmB/UPRE6Q+xv1Rom7bwq3v3K9rh/7IodnHfdvP5iw3dMzhT0d/cDC
legHYYttyhvYN6ni35uu+8GSP88gDR5vnujg4+p//YC9ZTWWHdv0pvmgIJU/
kC4e/QfYm5RaUhy0/nBTzeWpPnZq1JV0egZ/MOY6KuiC3X2D79oimz8sM9A9
fIDtRnG4YoQD/77a1bwUe/8NapZuXn+gy3Kra8aWj5ztKRX0h9UWIbY/2G/D
SzW8rviDVOTcJVscb/q7cl9YK/pDwp69B65jE6/fp9O96g9C5wnEdOyz1/1a
z+v7w8mkiYou7JxQacVVR384tL7fVNKPnL+CT3+5+YPEVDulLvZACCflNy9/
kG+NkHXFPhSy50NFiD8oSCbIZWHHBTVfDrjjD715RXPr2Ce3KjMdU/xh7Bb7
JzqcXw2BRX8MH/oDN4dTLxf2dkBSpeQTf6jbXLqmiJ2xcZ1V4Lk/nE64+/4a
tkQAwZ+9xB84iPOijthe/noX/vznD2Z8LaeisQ+uKyTPvfMH3lfvMu5jF/uJ
kwbr/SHymhllDrbKGr9Oe5M/3F42NyvCnvRlf/WuzR9ucKO8N9g3VmkZXnT7
w+dp6t735Pz3/eee9dUfoq7TzzZh16wsdNwa8IfGjerJDmxjn9GzYSP+cJ3r
UnMv9jrpc4L7BB4vEf+kfuxk74+z5jN4fvZxSA1hi5DKVTQX/EHcJbl9GLvT
K78AkfxhwCVIaRTbhZhGfW7DHzJ9JV+QTeMVZ8/1zx/2LhB3kf10OaiRYU8A
OJg7K5LvlyW48u2mDoBDnLsjB7FHlsxuLNMGwKfn2W/7sEM8Ncd+MgTAnReN
iz3YbEtwpYclAEIkbwuS21/hIZrzgT0AtuSeBJD7p7vIu/OaMwCyH1/oJ/d/
yZ3FPI8vANpG63QrsG8tUNXcPx0AcRbKpGLy/th942iUUAAMSl6tzcUey2o/
MXw+AGqCM9pTsR925AhLSAbA1+mF9TjsfYIqcvNyATDxeffA//cDpsfVFVUC
8Pkgv9AcOyBx2SBHIwCamTbbNbCn59Kd9YwCoCf9jIwgds5Rd58Sc/z+Icvn
R7GvXZUNo7ENAF/3xWzy/rypcPbuO/cA+DfTbDOB4+2p06VKvqgA0O2mI6Zi
m6Yf/BgWFwDTc/FqN8jx2jLe3p8UAGXq0/ke5HrOnziamB4AuwT3JJPru/XU
EPVqSQBULJ3q/Ivzgf3IK0bNcjwee7SezWL3KN48+rwyAKy6Z2f6sa/kCwqb
NQSAceeL/or/n393S/7XEgDHHoQ/zMcu3ftNlrErANguvF9KxeayCzNo/B4A
L6tlrgdi9yfrWHKO4OfftWx2wb7TcNI5cCIApEZ3PpljK69seffOBICt2dmb
Otg7vF2hgosBcPmpLJUSdoVuXkzMSgCcObKkJY3tfsP/7s/NACitPOssin2y
7GrGpZ0ASG1xNDiNPTzG+TSFMhC6PYrZuLFTmVZKFvcFwv2DbP+xYavLNr9V
ORgItu1HRZixKb0yP+QdCoTrki5xB7DfPfZs/8cWCGble+tpsH0+y3+7xhkI
zxlS+inJ9WQ32+grvkAolebu3o09ce73DK1AIFxyHs/fwfUpw7KeZCccCJLN
zibb2Dp3Uv7VigWCakfG3D9yfatzomaXCgQa/Vo98vUPi5cZfVAgXLSdvU++
P4iT6WinfCDcGvV+Sn6+qOYkH79qIGgIMd4kv38mrEooUjMQVhmnBMntyylJ
khjSC4SRooSHdOTvbcPWsheNA0HuwtlG8nrMQC+udsciEFKiqp4dwW6+TGsw
axsI0lU3L3Fgh7uNWMg74/vHnAJPYItnlTllewRC4fZXI0HshfYY7w2fQPC4
2/3lAnb+X5NQnaBAuJwlOSaDfdiU8i7VzUAw1Te/R54/n/CdAqX4QDBp21wy
xf78ZKsu9nYgBO7LrnLATvy9tLT/YSBwdu12CcPec/2H1sGXgaBz1xC9JO8n
8vodtcoDoeRN/2o1ds2n3vC7lYHwZ+FKRzN2AENrKXNDIGzslascw/79uIKB
9XsguN7+ceMw+Xt60yt+o+FAEL61G/FiF8wWw8PxQMhP7ukRJsf/+TzPYwt4
Pu9o2JDzoe5adqwZKRDsuzm09LCPh6TnZG8EQvXFsVUL7P6G291cFEGw8F+z
ph/2xZn4aSuaIAgdJayFY98/EL0r70AQnPpP9FICtoZByLkTrEEw0vAoJhu7
OMhf2f54EDQ/sY16hr3vkZflM54g0G36b18pdsOU453TgkEwcWYusxabh862
wFk0CGhLKfKasK+fs6grEg+CFHFVng7sIT3j/nnpIHCPZmbtxZYK1F8SlA2C
x3V/Ivqx07K0aDyUgmA4jtL8B/ZK/VWuUrUgOC+cWPgTW2dSUWJZOwj67qva
/8J+uV9WS/RaEJTazNyZxqYTvuzobYrbe++CwBy2s65EeLlVECSy/xX5jf3J
//yDVfsgeG9dVLCAzZcpVHrRNQg4hs1vL2JH1p1u9icEAVvF8iTZIxN8o2/9
giDdWvwV2dL7uDY2g4Og3916iXz/Q8GjDJcigsC671I++fkb2of5Q6LxeHbU
fSW/X9+PEWoSguDcO97IGezXD+kMt+8EwXTMeMkkNkMttSdKDQL/h6zm49ju
43tiwzOCoPhocMoIdhv19qP6nCD4fsrNcBCb/+zmf3vyg+BpmF3RN+xorZUu
uaIg6Apkv/8Ze8JncSqqNAhyt8MPtWNfSZ/daXwTBC1x62Lk+fj7c1RYuS4I
NhS8nSqxjaiGlOIacX/TFmJeY1cI9Fm0tgYB942XJkXYBO+O22pfgyBZQlk6
04/8femuw/mBIPh8an2Y/L18z6w+Yh8JgpvKWfq3sJMthxempoOg3SmjN5T8
PPVF9Rt/g2AHbj41w96JLTvhvDsYOP/GBOpjKzf4/9OiCgaHM4Oq6tjfpXa9
4GAIhtvHpjalye09xUhXxRsMh6c56Y9jK9h8Hc/hD4axkhd6LNhJ2enVMYLB
kHX+X80BbE4WHhd98WB4Wua0bwfnl6PWpKy0dDC8Z3xOWifX+4RCdt4rwXi/
O8SwjC2753zrkmowmHT3EsexEy6vP+7TDIYWy1c1P7C/BFQHvtcLBsPnEc19
2HaLcqcTzYPBcY//83bsEgGa3d42wbBPYT3qE/aaXXu/kWMwtNXTFX3Ajh3S
iz3lFQyh7xmGK8n15AibJb1/MBDz/RbekNcv3R/iq8G4/QontV5jWyc9PjgU
HgzHwh0oyfWkqMVu6sPNYPh0SJuuGHuFUqD2eXwwpP9+4vgcWxoWUu/cDobL
936yPcO+Gfza3T85GH5nOXI9xe6s8FM0Tw8GW137kDxyvSNKcShkB8Nw5mfB
XGwLwZ3VM3nBwELnKvYYu8DxYwdTQTCQlhpu52Av5cU83SwOhjdzyohsyZGr
oaOvgiEm4pQs2ZHsDPqfKvD87DVOI7tV/8vZkupgMPvz9DL5ecx3H1Cm1AXD
k6NZ58nvM203HQpuDAZ6rSx/cnueUHOXW7cGg3M8JQ25vb9lfyWodAXD82m2
cfL6fDHsuc25L8Gws/iZitzfsEq3S0e+B8NWCsmzCPvTigjz9o9giAVWzhLy
enFubXZiLBiWG4voX5HXE5eqD21TePwP7Lpcjv04P+zh6/lgUP/y5hn5+8ns
T1mv9GU8noMH1Mj1OtiwjdvhD56PkvILH7Eb7t/eVN8VAjniZT7k+aXr0v0s
tjcEqoPLRtuwsxWGwvccDIH8cZ/zX8nrgcgNCt1DIaDsEBo2QI6XYwLReWwh
8Fvx18IIef0l+SfI84WAgUyCIPl7fGUOc2q0ZAiUHOF4tgfH77HEKtY+mRAw
3nMzh/z/1XB/q4xT8iGQ9zwlgx5bUeNlTrNGCHhdZopmx/7yR7Vov20IrAes
Volgi08tC5o4hYBbLoOmOLk+9TwoLXIPAZ1q0UZyPlk9n3yjFhgCzFejVZTI
9Tv5lkRWWAjEowUtNXJ9CRer/n0jBMLi2s9qYy8YRNYlJYUAe2+7gTG5/sqe
lhu5HwJqvEuPzLHfCHY3CqeHAG/X+TLy9yZWNn/l8OwQmKdRT7LHDqHkaOvO
C4GBtMPCzuR6utigzv08BFw4qu+7YcsOunQTSkIg0amtyhM7v4lJ90NZCAyL
9+aS/z+x73XlV6bKEHgml6BKXr9csywNbd6HwGXCQGkAdncs9WDZxxCg6fr6
JQj7vE+JGWVLCGitf34Tgp1qoT+q1xkC9+lddcOwt1T/Wj/tDYE3i2YvrmOb
Xcz7tdofAmcL730kr4d13KqOisMh8PDPydQI8vpwYHk2dTwEOjWdTkRix2yk
uU1Nh8A0fQ+B7NlxmSXxhRAwrdgJJluj65dXLCkE0nha5cl+VZW42r+B778p
2UF+3qH88wGnt0PA7Hz0YbID7g5sBVKEQvMjVh7y+wdDIkJbaULBust5mdxe
GUf+XUfpQ2HyxOZNcj3N1e2KdGEOhZq7ST+Dsfciv73vWEPBvo2Litx/R4Hj
sXQcocAU17Xqj93O0rDfjDcUSsImXvtiC+92ufWCPxSmutIReXzvzTMybAuG
AuMsRTZ5/I0+WrA8kggF5eGDA+T5eldC9WDxcihUdDPXOGBzPXzBDnKhkCh9
O8QWe9LzD+dP9VA4JvhfJrm++3CkCfDahMK8ydYLDewPXNRubI6hkHE8ifoq
NiOv/8uDbqHw/H6OATn+Sk5dE/vrFwpeMq7DCHvm3BGZr/GhUPnp3Zdz2BLn
Y8LbbodCWJPBUUHyendh/UN9cihk63s5nybPj1SfUkl2KHyejTnNg20ul6Yd
8zr0fyXZdzxX7xcAcCrRsIpSUikp2VsZHRRlFxUlRISmEkU+e5opoxIhQkOy
NVBmvlFJlEhkZUYoJX6fc39/vl/3497nOc8553nuBfPS13tK4Plll2BMSFEI
XIzw3yzO81/zwObzz0JA0VJoHtbTdauDh92qQ2BdZaQA1luvTU3igf9CQDk+
RV2AZ+29ul+t3oaAlc23YKzPxv0rPbe1hkDH1stn/+H7giM7Q7UjBN5bucv8
5fnMoV/fN3WHwN0mGP7Nc6nzcaU130MgJvvP1ynsH64tp5eNhED3xPHpCZ4P
HzV/LPQzBA7J7NH9yfM9j6Kfs79CQGvaLAH3p9+em3UmZ0Jga8H4Jvy+a+4d
f3GQnwSMbyUtI/h+4Cv4tHMhCQ4zenOG8Tx/MvBfyxISLJlf8HiIZ80zfTsa
xEjgSNndiv2G5neQVilJgszSe1vRb8/XVD5ZTYJ/sq9T8f1pXYCu4ON1JDAG
hgn69MWMPRlyJMhvil+Efha0MjxRgQS7LuT8+s7z4hB2wzUVEuhzjizF607k
X2KhmiSoS5Q0R2dSj9tT9Eiw4qwO8X42RW+JDTAkgeq3BUr4/J0s848nTUig
m/S8CX2NU7Taw5wEdr+TknH8XaGbjzhZkcA19Gkkzk8tIv627V4S/L4omoTz
J0UJdu06QILP4tT6UZ7rowPlDA6T4Nd/X6Uxfmti+rw03EiwRm6IPc6zb9zB
rC2eJMi+RhfD+Jdcrxlc60uCPlOf/En8np6gqyJ5hgTPQozO4Xkh/fbKPP5L
JBhM6tPG9Z1IYU/+CiGBqECWHq6/Sdov3REaCUwa7GzxvPE1s+VZazgJdL6U
5c7n5cvq3PjqvGQSuHn4yeH5RCRLZWV0Ogkc1qpEiuL5Kbnq+Ol7JOh40jOL
+TkY8VNIIZ8EImOLRvF94JmPrWVSDQmW/h5tX89zjltvQvBrEpTkz9nj+0H6
wZAhx3c8R86r2oTnoV33I5Z/JoFWldLVrTy7ygq+5YyQoN+tIFeTZweppPVe
P0mQ6OTdqo3nL1FtP9PfJAitbhnH/ULtn/uyWX4yxJGoY/pYXxPT7p8XkmGu
M+GDIc+rBq/kFS8hwzpdt7tYr/M+lTqclyTDnrVvFpvyPPVmf7rdajLU5/ff
2on9sXpoUnkdGRZWpUqZ8fzlOd1siRwZHNwcQrD+3+evju/fQoa8O0fr8H2m
9v7jviplMlQtc5rbg/NP3a13R4MMXyM/SmP/yLnRwaHokqGgnbwO96u0KwGf
jhiQwXju3yI8P15nC2/VNybDG2Xxz+gIUlqQlBkZpttZV7Ef0S7o/zdpQYZM
CQM1W54DTjZKv7clw4aVm/LRvh4+J3McyHDt0M61dthPDvE9j3Aiw0Re1mn0
vr3xwidcyBDY5J+ONt+t4rLbgwyMPR9eog12VGVv8iZD0eXFNWg1Hee5eafI
cMTbPRctp/zT9qsfGQwpiky0lFxo8vMAMmxk1O5AL5WWHbsZTIaV27O7cDz8
y4qNL1LIcFPG7TR6Ssj26n4mGVJcz37D+QzM9XRphJLhei/ZBP1l6rKmWBQZ
th/bFo7zbxxezhi+RoaOs1ovMF7V3fea6q6Tgd96UxfG8+ln402Zibz5H3s3
aoHxbfx4gZlKhn/7Fg9i/NNenal2zyADs+9hE65PeFHicZnHZOCz+xKA60nJ
1ir+U0AGseJ16rt4vpD+n9DHJ2SoeXewHfPB5dp01tVKMujmJoka4/5zZv+Q
4EcyZBVxfm/H/W3Fmz6bdjJUutTp4/dMq+e7v8V2keH0G+WLmI++SwxaNw6T
gWba1Yn5+95evHsdPwWOHY9PUuL50OaGoxXzKfDw9f63mO9df0I7vBZSYFfe
QwHcH8ZSFnx+uIQCR9dZULA+RH/8eqe/ggJhMqPv8f8DcRX5th1SFHgsVmeC
7xdr4/3qadIU4B9bWyrNs7LRYO2r9RQwb4trl+I5XzzT7NRGCoQ77qGvxPXu
OVYpJk+BVfSHelivluFfyg4qUkBto/+H5Rh/1wTDv8oUGDBULl2G49V0fJqk
RoFTUWtLsN67FkpuM9GkwMT2Z9ViPPu0vivs0aYATdm/D/vDj4eRWlw9Cgzl
3pVGX6Ra5irpU6Dtwl0P3L/49gupvTWkQCO5uAz7C3tL1cPzQAGBs8JqRL+Z
oSquNKWASmFp/lKc7xujrCe7KOBk1GGNXnvnr7zLbgqIOJ3/uwT7SUBxGr8l
BaSunH2OVrK4sCHdmjeeu8+vofNlNJJ321Hg0wpNEtpgbERmaB8FjIpTL6Mr
Ku8nRO2nwALhhki0xXXvVZqOFPA65ZWPbjyxKb75EAW2rhIdRh/a0SURdIQC
abpH9HA8nctuX5Vxo0B+S0ss2rv3sNgLdwroL+AXwPn8KJGKPObJe36hKxN9
MeLDEiFvCqy+5LYC4zHndpV735cCo2PuRWiWlq2g7SkKCCc+OY7xExFayhw/
Q4GRumx5jLfMIyZl2wUK+EZdqMf1SKOZzLYFUiBDoisP10vpwFwwJYgXb9/x
dFxP/X8XA2vIFBibH5eF758v32pP+tIoUHDHpYT4fpM2fk6ESYHScfN3mB9O
lidP7w/l5efskRV4Xg+84er5LYYCCruWtWH++f/mq3CKp8DH5Dtz63g+dzB1
/dsbFLCaZywny/NJyZ7Pz5Io8LWn9BT2e7do331xmRSoelk8vJnnIz+W5Cy9
T4GIV91Evh+yfShMf0iBk1KPV2E9OAj/qD2Ty7uf9n11rJc93As79jyjwObH
BcvwfGXWvyKxrJQCxh0pv9A7zYv/aL+gQL3twHt8nzAS+FuwoZqXP3vKz2L9
6R+7tfxGLQXWLD2lpoXnswpDP9H/KPDGbqwHrUGlKM28ocClFGd1Haz3r7Kh
5xopIFqZWo1W2lHR19/E812OHda3QtKxXa4tFJhZMdWAlv8ncOfDJ958l/QY
6/G80TmDz6qNAq9XbslCr3+62+XlFwo01EcvwH6xdvXAU71OCvwun7BHS18K
W/XoGy8fbm+LR0t9VArc1EsBmaTrDegVug1NCf0U2L5k+R/08rgzGssGefnY
k7oK+5HYpNgVzjAF7m41UUYLO+QOz45S4MzBYS304jx7ywvjFIic+qGGFlw2
mTk4QYF9wuGy6AV+cQvdf1FgdqRjIZr/re6xj9O8fB0R7sTnzap8emEzQ4Et
bro56L8RQeuqZimQnZbgj/49JB2iz0+Fo7/vq6AnLZ+3Pp5PhfTY7C84//F7
LnpbFlKhQrOfgf6xiC8uSYgKDcOJsuhh75SfEkuoQAveXoDxHKgx2RsmTAXL
fkVA98t3Z/OLUUFirP4lrkdXt7zviAQVvEficvA80GFaW3NsJRU+3Eteg25L
9dn0eRUVHlgJ03B9m90efK1ZS4UjoVXbiX5cZm1kJEuFQFnhKA2e364dTcjf
SAWhLq8vmD91beoHU7ZQoSuu4SzmV5ljUX2QBhVMqq388DxfJ1rHJ69Nhcse
q29hfjZVt2m+06VChnZHlSKOV2vezc2GVPgmMSqF+bxM3NqryZwKdJeKBnme
19S63iBbUGGvC3UeejP53Out1lS459OyDfu9wXC8BnUfFX78pBRg/Xi96ppV
PkKFgX+6o3ieOkuZVP/kSgWzD3XW6GBdIU+GOxUWiEfnYT2yRlZfV/WkwrB0
/3r0lXTl/1qPU2GLkEIc1u9NZ5hl+lJhR1TmcnT6cnt19VNUWL2s6AbuJzl1
nsfazlBBUjxmC/oJ9WI8+xwVCgbty9fwXKkXVqdxgQoeSrJH0W9GE/+1B1KB
+WzDEnTr3Rw1bhBvfN0Xif2o+0iFh1YIFW5bGAajRySa4zrIVNg3STNGT//X
/yqURoXvuw+IoxfQ/85oM6lQXvVsAPuPyHYRtU42FWo7HtWjpcbWe4SHUqEw
f+MT9MZMzTjdCCoUywnmoFVczV51RVFBf6PJI7TeCqeZiKtU6CksKEKb1J9Q
3RZLhevT+q/Q1gySe3c8FfykMr+hHfWjY6NuUuG1ffVCHI/7+J3a7YlUEAzw
0ECfzCr823ObCkMW1l7oQLdXKtGpvHh6mqSiaSvbjhqkU0Fz7k8POrxhJKYv
gwqnpBTUMT5xTP7aq/eoMC/gIh2dbCDx1/AhLx9TI9vQBfe2HY3JpULmIDsF
419+1CpmRwFv/jHlS3G96qRcawaKePX1/WgI+guLoWz8nAoiBrtP4XoLebyZ
Hq6hQnJzQjD2Y2dpz6vm7bz8d4j+iflVYhVm1dtBhYN0cwrm3wrS44XMLioE
fylegv353dd/QS/7ePVqUSqzBeO5TE776ABvfEOJd9Dhphajc0NUKLo0Ko/9
2+xunIfhOBXSDoTKYb6ntTyTaZvg1Z/K5iQ0/6JvLUG/ePlu0r4c6+PZCVWr
4hkq9Bo/HkevSty/8OAcFQ40Hz+M9RTQEFw+yU+DrlHnMrS6eq2WpiANdktt
uoj1F+k+MvJuEQ02H+K+Rg9dk8g6u5QGG9k20iq4X1Rt9xAVpcF8BTiGvjvl
JpMtTgOByf0Z6AVb2C1WEjTIDr7cjT7q9DB6cAUNCp7GSuP/K0pD31uGrqLB
2zy6FXrNs2kBhTU0eJe7JRB9aXhdec1aGnQ7xCSgm9eaBXnJ0uCfxecStJbd
SS0BORqcTJx+h46mXh25I08DmsPgN/RIbnGmiQINoi8+GEVbdX9x71SkAWy1
mURnSQrIUFRowL39ZwK90FyxZa06DcoaXoygPS7ujX6uSYP7unld6PKsQEtn
HRqIH/ryFr32c6LAXz0aTIU5E+MJXlpZdkOfBo+EfG6hPxoOXNIzokFxyuYg
tM4ZMa0WoMEh/ZJ96GvJOiMXTGnQWWIkj/7xzjlTwowGIQLfJjBeNvPp7nm7
adC/X6oMfV8ra80+Sxqkjkwx0F7xk1ei7GiQIjs9H11RK22pYk+D2H8jz3G9
1v8xFqjfT4OIMA9/9GfnyEuLD9OAOn65BddbLzJfM+sIDXx2zzHQcWWtw+Zu
NBDW71FF223Y7M70pMFH5cskzJ/qvjILvrO8eOslCmG+5Zwbk55i0CDyzJQY
5jNddabgOJsGdzqqnmK+HxhaaPeJS4Pe7LHj6BnPNYxnkTQ4XSBLvI++2bB5
rUo0b/5p7AB0aod68e1rNDA4KLwVvdvJfIh2nQYKVzSvy+H+vWIfa+ImDYR8
59mjRxqd13sl0sDY5IwYOsbqnMOeVBoMhT++hv38+KKQkSdpNBizaXBCb69m
c5QyaBCYvXIjumNH4jPRBzS4YR1Zht+HcmcyDlCzabCqN/cqmlGS+2M8hwYD
DzR80AcDnocey6OBheUGU/RWzVq55gIaBPjGrUf/G20sNS+mQU7eHX702wft
jiVPaKD51qUX+8Mdn/7xrc9pYOjT1oAOkP8ZfquMBoPvVj1F7/n2T17kJQ2+
x/XdQ69JFnpBrqTB5w87k9CjzssPj1XT4PouzVj0y1VrJ91f0WDyVn4UOrZ5
S1TTfzR4fbUuAu19TVPBrIEGE+0BxHV9O6OKore8eGk/jUGLCO85ovCely9j
sYnozlf2v25+4MW/tiELnc9yiV76kXddc1cJmm3qo0hqpYHXje//oQ/x+VeN
ttHgvOuDTrTyc5Lr0Q5e/Q2G/EHzBXGnGztpcPCOzQqMx3udmGs7u3n1MCSi
jb77M0m5sJcGJ5QfHUBfysmq2fydBpsyFgWjrU7lH70xyPONzhT0eO+r2Ms/
aHDTMWYKXXWnSXVknAYVetpyuJ7X3TpeuU7S4N6mDuL7h1HrxD+TPzSQsmwt
RovHz8Xnz9BA9tvIMLrbfrGG/Bwvn9ZflsP8Ca1f57VoAR0S17rGopvLLRre
CNPheM5OGubjqYzkJGdZOsQrPTqO+W7zbI3IfDk6/HOiZaBV3l0PyZKng/Mx
5170yJ8rzlOKdPjBCXHDft4gKvz6lgodbl05k4B+JMfVN1WnA0W1rAl91oa6
+ooOHVJ13hljv7fz+MfV2UaHAyTPC2i1i5em2/TpENfZfRctFjHpTTeig0eD
avP/32f9PioY0+FZrvx8rM/GwmHzt6Z0uDOTpYzO/c+nKMCMDtKrb+5Hn5s8
GldhSYfy9lOJ6H2Lvwj42tChPdXpOVpj3aELYnvp8DQytJU4X2k1dxfa06HS
eXQC/XP3PocjB+hwpDZgKfaHpiMNFfOd6DAeLiqLzj9noXnvMB0GPTM10DHs
6lQ7FzqIausao/1vmSz75UYH28ROK7TD41JqogcdQPnRfrRW9fYxUy86yA8n
HUZLfC50G/Cmg1nPIxf05KjG2ysn6NAh00m4ecGjHbqn6aB5W90ZXbhK8VH7
WTqw/ZIPoONUMtYyztPhZIKhDTrAdGPk1gA6rPXfboo+4Hj739uLdFgxelcb
rXNK+lRgMC/e0tGb0Cto8W0yJDq0CgkS++uvuOVWlRTe31evmMV4fLwf9dSX
TocU94ZedHH5EkVxFh02j+rXoy8OzF/sEkYH36rWa2jHOfKlBZF0CC7Z54/W
k5jpv3eFDhPPBO3R04YTNb9ieeMViVqCDoruZkYn02FnzNaTxPvcXbdJ3Tt0
8BTLI/Jl+9O2Y1/S6XBO8dwK9N/uJlPF+3S4m7+8FPPrsl4Vf1UBHS4GnFiE
drY29jtRTIdpEfU2zFcD9+dfxZ/S4T+O+iP0v7CCMpdyXvwDPA+gSR3pIb/r
6GCY+f4B9vMm8sJ6v3o6OCXvZaO3rj++ZvANHRY+rnZHN7ttedreRIdfRWNr
0Er83MUHW3jrc/nDX6wnWsp3p7efePOfz9+GVu669/vlFzpYaSolE9dpS3Yb
dPLyMduCgf644WR8wTc6NCR88kGrVLzuVemlg0N7vx2a4aGsk9nPq58DHOJ8
3zo/kik7SIfhgZqNaLW0kaabw7x6DikSRbN22spJ/ODl05jXP6z3tu5H5yPG
6bBPu3UIrcEUq1g4ybseNdGO5mzyW0b5RQf/S8Vv0V+q3h2dnuatj69iFVrL
S+PxuRk6FH/c95ToJwuv8Q3N0mFgu1Ye+uvdn7ae/AyIEPzwAK1j7nD7y3wG
qBdsz0SH9+WPHFzIAI8nvunoLrak0TshBuRG+Kah9bYERFgsYYCNoi5xPbK2
ua1CmAHrjTMz0N3eukqGYgygnc+7j96+6Hpw4TIGSCbaP0ZfyfpdpyrJAOp1
ejG6d4/T6qyVDPACoxdo/YESnw2rGeB9hvQf8fvQ1SUJaxigwLejhfj91mAh
yXUMsK0P6kYb/Pf5YKQsA4IeK/1EXz1hkCEoxwB+Dcv5GN/+JYlTFHkGlMQ9
lEAbPfi3688WBrgKwWb0wFBp95AyAx53ltqiIWKdlpcaAybUrnii45Qp9A4N
BhxwPnwZbXLaeEOjLgPur8h6gL45WuFaZMyAY98eSmJ+/YiSe6S2kwExlO9q
aDM15myWGW9+ukFW6PGzZom3LBkwPnaTgd4zXttK3c+AwGc/fqF/T9Tvt/Jh
QEvS/SbM9xRRE6WSEwywFmgmvqdYbC2cJ3+aAZUJlguxfhJckx7NnePNz1FK
G70zaBnr5AUG6JDPWKKHYljOnwIZkP9B/CjaqO70orzLvPlp6Iai+7q7OtaR
GXB38EEi+srcgcJwKgPmfbfLQeut/i98ms6A3rMSL9GdWjs8vFgMUH3V34gO
tc3b9p7DgFLdsi60hu9mMQhjwJl53DH0Z0ZC74MIBsid0Z1DM26LPl91hQHF
FU+XYH9QfkK/xrrKgKVmgivRzU2/fH7GMOCv/hJZNGn0BLjFM8Dev1oBvXnx
1xX1N3jxFPZSR7+VcxjedosBT4qGddEXd9RW3E1iwOu3hw3RsocMbi5PYcCq
wmyiP9X555yl3GHA6qruneg1967LHMrk5X/zT3P0qQ5KneZD3vqMBpuhV/yZ
SE5+xIC6PYuI35dK+AQK5zKA8e0SoI+rtlsH5TNgNOKbPrEfWuyV6ytkQFKh
hQ665FjVH/sSBjzUzFNFu5O3vSt/ylufz+u3oBfffJihXMoAR3r8OnRevizp
ZjkDVOZJE/3T+U2sg2AFAxqVHxHxWjCwSNG/ilefbQf50AfWjbdY1zGgaPVU
L8Z3bptX9pPXDBCbFfiEznRoZWx+w4A2xWN16GnuS3X+JgYYWWnfR9+auBqW
386LX5utF3qXqKC77Fde/dn/skePKATrRXbx6q8djNE7XD16jvfx6mesfzW6
65XmDukxBki8nP8a81PhdtM4dQETqmaTVNFfxZ8kbRRkwqh8kDQ6jnHbomoR
ExbdLhdEz/P1TRUSZUKseE0n5n9xm63NPXEmmH1IfYM+bav9x1KCCaeDZUvR
rVp8+6JWMSHHwSgRfSWj55/aGiaMXeqOIOpt9X9ZjWuZUHdzJ5k474fn7PeX
ZYKH23E/dO5cLP8KOSZ0n99/DO19LvhhkTwT/EkrHdFre9ycnBSYsF2hkKjX
poNmAn8VmXBEZrsJOrRO8fEtFSYsWPBADw2G4keM1JmwnyVB1PvUoymhr5pM
qEgN3oJ+sKEtn6rDBDa9VRbtHvvCbeM23u/fKhH7kZRQxtIqfSYocc+tRDcE
hRd7GTFBOPv+cjRj2O+YkDETpo0+iqH13Q6K3TNlwoj+bxF05q4N3sO7mdAQ
L0JYQnG4TM2GCfKse8Tv6xIbTzTaMeGhrjFxP4pY8Up/eyZIieWtQOvQEysk
DzDhhCifNHpoknamyJEJ6dpb1qNTvb2lnQ4zoZKmKI92/Gxd8+cIL14jk0po
ERvN87fcmGB13UsLXVkutc7IgwlbF4YYoIM0Z+s6PJkgpLdtF1rt7rcAqjcT
BpUTbNCJYdkNlaeYUORp54F2mL0W5HWWCYcjU0+jF/tdkhc6z7v+yysIHXBg
J8nyIhPmnZi4iraRbVVupDHhy3vZWvSCmLJP55lMiHIxa0Y/WZjOlOQw4e6l
4m60/NCZdscIJqTW5vFj/s0WCkR0xDOB8yVZH52vMKhHvcmEzM2rLdC+t952
b0hkwtn0q47oZmqCgVcqE6qlhC6gH1mpDw09YMJPMaN76FaLv4FHHzEhJvJH
AXrhnqr5zY95+dB+5AXaZZeTdFkhE/xGHVvQoaYbMzRLeOO5VdKJLjAe1sh8
yoTnvhmD6KVGVIvocibk+WydResZWDYLVDAh/GYZ0f+PbZd0D6pigu1QpwjR
v/U6hkdqmDDrEr0C/VQn65JHHRMii6qJ7zu9WucFPr5mwvcUPzn0Mk3DaKs3
TBAhR28l9gd1QZkX75jw10ZeDe2r+i5Tu4lXb+JqxP4Sp5ygda+ZCSo12dvQ
LxU9y9d+YkLAmVTD//cLVatrn5nAXLyE6Bertky3CH5hgrRXvymxP8lXeFz+
ygTTyW1mxPuGXMTojy5evB7NmRP9aMPBYM8eJojFbtuDrl0vK9jax4T89D7C
62UK1lYMMSF4dzLhwFV7dB6MMeHqOzXi71NXLn+5foIJRj6Wu4j3Hcl269gp
JmypnzFB/1me8WnRNBPs/u0EtPwyP0/SXyYUTm8kxr9PTH9s/B8TnF7eIOZH
EhEIOc7HAoODd4n531v6RqhtHguOFO9RR39YfCPGToAFT3voSmi+RR7rqwRZ
4NjhsBmtJKj8YNtiFqinP5Ml9r/5Lyo2iLIgJdZOEp3DH2YbL86CNDKFWL+2
OYfPSyRYYJJwURCtOdM/PiHFAr6m779x/bsmxDbUbGBBhOXbT2iRn60P9Tex
wFky+R16+1jatpzNLHAK3fUKHT2st/eGEguaLogXo6HXjXJChwUL32jGoJNa
cr6IWrDgxN9UW3SL8tCOEisWfG6sNEOLMTanuNuyYAGHzwhNU0vyKHBggabB
ZyX0U9anSpeDLEgeTpdDT7RJyAsdYsFO1cI1aC9uWP8hVxYoe2QIo293VO9Z
4M6Cc/s5C9Eftefdf3iMBSMt2XNYn+LhhksPHmdB0sDqabRF18VTfL4siJVt
HUfT9fIbsk6yYJvpvGH0s8hRVfszLDC6ca2P6L/dW6Nn/FiQujGyC62q7zWe
7s8C766xdqLfR6fY2wayIPJD6Seiv/W15f++xILl/yY+oD8bSq1IvcyCv44x
jUQ/jbEPtCSzgMpNIvYj64HIjxNUFmwKXVmPZkHdtiQGC05z5+rQZXECCeZs
3nqwD7wiznNDMPODy4Jx+hqiP/neKCo1jWKB6KXJanTbLhVqXAwLuvzYNWjJ
Wz5dO+JZoOZynPi9zXia6fcbLKBtziDux979Ne3qLRa01Jv9hy5Pkl5ocJu3
HnvNiPFMTxw43pPCgujH6cR4NSyv1kamsWBy5BgxnxMp9Qp6GbzxLWIQ8037
JRTWmcWCWr75RDzarXcOhT5gQf3ljjbie3Ea2VrrEQumvfmI/ZljNyXKzmfB
hW1/v6Nf3FX3UytiQaXMhxH0n5mTjZ9KWCBzb+gn+mTWtxilMhb8fNI0i7ab
925V4ytePr/eshLXn+u4NDj4NQtGS8ky6JfZ5m1yb1gg5vd9I1rrcGlSYBML
hpZNqqGl8u9vlOlggf+Xr5bovYv7GNWdLPDiS95H9FO3Db1nulnQqGrnhJ5Z
eiPz5XcWyBbRvdCdnixl7wkWWBs0ktFXzO+e7p5iwa2rLky0kUL1I7dpFnyX
qQ5F3xoS0HCaZUFN06ZY4vzdsOn8Bz42/FwvfhM9/WhX/t75bJiwqklCHzjP
1LEQYoPfzhjie4zA/vTA6sVsGBG9f5/YX3Sqik2E2QBPw4n3W3epnulSUTaE
z2jnocX/LNDXX8aG5iu3C9Hln+UuF0mwQUb7VQn69POdzzVXssH9e+4ztMzt
Y7OPVrEh9aFzGfo1hbFDaQ0bvlKrif0m2D2NkrmWzeu/PyrQW3dWvpCTZYPg
309VRP1t6p6XspENb1ZTa9BswQU7ZeTZ4HiqpxbdXWdaLanIhpx7PXVok0j6
bhE1Nojmtf5H1PPeirqF2mzwvF9LeEZivvXcNjbknysjfn9/akNksAEb0kq+
EP3o0EeTN7+MeOO5Xk7cX+iJu5i/MRtWiXgSzy9KoO39YcqGROnXxPi8QlKv
njRjQ1DELDF+CdeX7/t3s2GTzcKX6ArokvC0ZEOT6zdi/uc2zDvQac2L58vY
5+j1CzbEH7Fjw54AmafoNz3GHz/tY4NwcBDRD5WyqIcaD7IhKzA/F/05NCXB
5hAbaGeiifUJPfmirc6ZDW7Fpg/Qfar8rhVH2cA9ppyOTi2keOSfYIOCn2Qc
kY/Xk9PUTrOh8YLCVTRfUHnPg7Ns+GauEkn8P9yQzzv9Aht0HBaziHyuJJ+M
I7OB/lqWOE9EvCNduHiNDS5aTQ7oSOVcw/5YNsy5Su4l8pXbI+B4nbe+ge7W
6BhjqzjdRDawfQ2Ifh2XSHbJuM2GZdHvTdDx07nyK1PZsKabtQN98/Gqoqm7
bCgUNdlG5LewNdkriw07+/fooBN9KObN93n5YHpak9gfqvJEzbLZsGJ1EVF/
ybJ9LQU5vPjWblYh5h+yOnlTHhtUbcsV0Xc+WXvHFrCBL5uigL4bnf/b/wkb
lCcubkJnDveVdz9jA+dzDlHfWXukuQ5lbCCB+Ab0vXSbvZUv2FB+5dZ69AN+
2iqtSjbUCtqvI85bJf1Zy1/x7udrTPSLXD/b7T/r2XD/eBvxflHcueZwbgsb
BPj4CJfuHQj262TDvw10Yj96sWjv0r29vPUI37wWXfmi6JbaIBtK1D2I51XL
DB5LHmbDjiclsuiaS2uVxX6wgXFWixhvnTrz+egEG0KK/OSJeosoZrr+YsNW
YY0t6Prvg9ZvptmQ9EloK/ptyr4v2bNs6G+eVib2V/H1c6eEODDu/p2I98dT
9jXtizkwfPoIsR6tr1hR1sIcyBvrI86jX6jD65SXcaCrQcaYqMexJzAkzYEF
3vlE//vxbj/NV5UDCw3JR9FzzD/rRDU48JDsc4w4H2y//TxPiwP3N5sT34uV
Uvt/z2zjwJ2MtpNo/QMRcSkGHEgix5wh+ttiDS2zHRwYfbbjHPr4ueAzUTs5
oEU+FYgOkF8vrGXOgeLUrktoRmvlvY97OFD50eAykQ8mIr2ythzwv5xMQT+e
yqVX7+WA1EAWjehn9w7KnnDgwC7f6wxifstSnPOdODCZIsdBD1fv+uPozBvf
eCmX6CdBA/H/XDhwuUI3DL1ENUo79SgHKBJR4ejV3zTfmx3jwKOeygjifGwZ
InLFhwNRQq+j0Pvzqvd8Os2BNUrW0UT90J3KT1ziQIxgMVGfr+2HdGbpvPkF
zxHXB55qnzPnckD6dfcVoj/JkR9eieRATrYtcb+VHzdaakdzQDzkIFHP8uG1
/Z+uceB51i7i+aYT4nIbb3BgvWYrsX/syyx8UZPAgZYoCjEfN+fDrieTOBA9
I0LMl1SZdrPgDgcEDw0Q8XgSoyu+O5sDDfM7Q9CvdrdlD+VwwPbxr2AiX2Yo
VtF5HDA15Q9CTx2rY7cWc0BxC38AWl37yOzJCg5k8RWdIurtA20w+iMHBi32
HCHWX3Kpz6LPHHjxhHSYWB+H2F5KOwdOR5UR++WT9xmdZ7o44HDcg/jearRc
3bWvmwNhvtVEP6rY96TNpY8DCY1a9kT83r1usR7iwL9l2nZoO/ED+6tGOJB8
/7UN+oNdR6PBGAdG3lwg+tWhK952+T85MEBWsyLW/81YveIUB64+nSHet/ps
Frxa/ZcD/R9e7Sbyu35F5SI+LvxY2070t2krhbLfC7jA0dq2Cz3vtf6TvkVc
eKbeY0rkh6VNQbMIF95e7iT6n0SdW07Vci5USqoQlq9l3r0jwwXnBXlEPelV
37tF3cyFj7sPE9eNdz2PP6vEhdwAaeJ+FpVvrrqqc8H8wcadaHvTrggbHS7M
vj9LPN/55QTHUJ8Lg92jxPg8jQUZSsCF4YREYvyny1eRpXdxYd70JWJ+gTuU
ghZbcEFphkHMn1JqdGHahgs+6aVEvBbM1oyf3cuF3pIB4jzONdx7tt+eC5/O
ryb6/9VnHidaHLkg8ptOxD/tCedogTsXCo3JxPvpq8JGa78ALuzWaHYn4m1T
nyxziQuPZzSIfjDUU/PzVTAXVm0N90SLST6/sYHKheRrqt5E/T4oGmqg8553
+LwPWmtn7o5gFhdoCx/6oh3PZ/S8D+OC7Px5RH5dTr0VphTNhfN0FaJ/3H4X
rc6M461HhYIf+iUfu6U9gQtHsoaIftKrejlEJ4ULDlqB/ugLQ3aSNwp56/PB
6CIx/6xND//+x3PhBsKWgmLTD5q5MLqomMjvq55/drp0cuHw/Eji7wtjRgcK
e3nxiNQ/T/TPiu4rokNckNxQTjx/dvyTjvcYFyqa155Fy25401Y+xYXM796n
0Tv3VtJWzXBhn0AK0Q+9KSVbzvGHQqlCDTHfnC93/DcuDYXTCkPE+dEo4eJS
lmwoCPv5uRL9oSymvEo+FMZelhP19a4rx19AKRT6oxScif12Yf2WXeqh8LPl
/iH0sa3f2xg6oRD23pyotyk/2V0LjEOBWdhH1Bu3xOkh3TIUfmWv2Y/O3l0X
QnMLhZNV54j1bmrZbkO9EAqfv9gR9Xh83flCPkoo3M1gE7//43V/LSU0FMoN
1A4S+1toTWNZVCi0KakS+RGR/Y01FxMK01wgnr9+SnqUdDsUaqxoRD8YWKV3
pzQtFC7l5hLjzzN0ODibFQouZ4eJ+Zkxw8tC8kPhvPB5N/QJiX9Rl1+Fgtcz
BSKfmrg1gebvQ+FOtzyx3xjNRbsuaw8FEcUuIr8y/J3N23t545dzJOIrNiCv
mvkjFGxn/E+gvzU9nTVcEAYzQ1eJ9Sgss2t4vzIM+KS0CK/Tli5Mkg2DJ6UM
4vecez2JPoph8ILCIu43vi6HqaUdBi5rbIn8PRwbdGrOKAxO3+4mxlO5eNf+
ut1hoOx2iFhPFYqoYey+MPii+oKoD74TaUsVvcIg8V0YsZ8mgZbFq7Nh0NAx
Qay34YpK9vHgMIi5Fu6Cbhu0rxJghcF8iaNEfIJefJuXdiUM/G9fJuJXfHI+
6Wt6GBiP3SDiO7ly4/Sap2HQ0TlIWKPCxN/pbRj4XdAn/v7saffR2J4wqBgx
JJ4nsnNcSetHGEykuxDxfriK5tv4Jwy2vAknxmc1Kp55ViAcogofEfU+UJnS
IyIWDn8fvfRAlzUqtBbohoNkZCYx35ivjxucXcPho3wfYVLf5G618+FQYixF
2HtkW8V8djg4+nQR8dg3GWLYcjMcUg9cJO5nOPOi6F52OFQvFiSeZ+JuTPeZ
CYdtY4rEeM1ry222WESAdul3YrxTqidqqUkR0J9xlfj7u/GSJp/HIyDsqQpx
/8Wn9xZfMY6EkH0pxPVTOyNUzK5EQpNjOXH/NLFh8Y39kSBs6UO4tc1qcm5H
FBiwPAj/Dyh/2Bg=
     "]]}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"R,S,F\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{706.95703125, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 999.9999795918368}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.646399097394348*^9, 3.646399276565907*^9, {3.646399332611264*^9, 
   3.646399356054983*^9}, {3.646399407471919*^9, 3.6463994452861977`*^9}, {
   3.646399519007917*^9, 3.6463995347807207`*^9}, {3.646399933529674*^9, 
   3.646400035119308*^9}, {3.6464001337508717`*^9, 3.646400141511561*^9}, {
   3.646400205377198*^9, 3.6464002316434*^9}, 3.646400298727111*^9, {
   3.6464003302470913`*^9, 3.6464003379219007`*^9}, {3.6464003871530333`*^9, 
   3.6464004232952757`*^9}, {3.646400530477583*^9, 3.646400566546845*^9}, {
   3.646400626464662*^9, 3.6464006542402973`*^9}, 3.646401193146693*^9, {
   3.646413475754074*^9, 3.6464135093525963`*^9}, {3.6464148095266047`*^9, 
   3.646414837628758*^9}, {3.646673580305324*^9, 3.646673619411201*^9}, {
   3.646674394071185*^9, 3.646674431555167*^9}, {3.646675184780552*^9, 
   3.6466752284246187`*^9}, {3.646675323176228*^9, 3.646675353923946*^9}, {
   3.646675759387485*^9, 3.6466757873699923`*^9}, {3.646675862242443*^9, 
   3.646675868145846*^9}, {3.646679248804887*^9, 3.646679253454431*^9}, 
   3.6490028621621323`*^9, 3.649178061710877*^9, 3.649178115973216*^9, {
   3.663351625902285*^9, 3.663351652086905*^9}, 3.663351768630843*^9, 
   3.6633597014269238`*^9, 3.6633597349322968`*^9, 3.663360681662324*^9, {
   3.6634476253028593`*^9, 3.6634476533173113`*^9}, 3.6641294816273727`*^9, {
   3.664136129117447*^9, 3.66413620096839*^9}, {3.664136396142663*^9, 
   3.664136443902113*^9}, {3.66413935437337*^9, 3.664139395616802*^9}, {
   3.674824189098743*^9, 3.674824206588896*^9}}]
}, Open  ]],

Cell["The below code solves for the steady state", "Text",
 CellChangeTimes->{{3.636819917046274*^9, 3.636819943537436*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sol", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"0", " ", "==", " ", 
        RowBox[{"ts", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", "*", "R", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "R"}], ")"}]}], "-", 
           RowBox[{"R", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", "*", "H"}], "+", 
              RowBox[{"m", "*", "F"}]}], ")"}]}]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"0", "\[Equal]", 
        RowBox[{"ts", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Sigma]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "R"}], ")"}], "*", "F"}], "-", 
           RowBox[{"\[Rho]", "*", "R", "*", "H"}], "-", 
           RowBox[{"\[Mu]", "*", "H"}]}], ")"}]}]}], ",", 
       "\[NonBreakingSpace]", "\[IndentingNewLine]", 
       RowBox[{"0", "\[Equal]", 
        RowBox[{"ts", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", "*", "F"}], "-", 
           RowBox[{"\[Sigma]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "R"}], ")"}], "*", "F"}], "+", 
           RowBox[{"\[Rho]", "*", "R", "*", "H"}]}], ")"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"R", ",", "H", ",", "F"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.636733761306307*^9, 3.636733821361238*^9}, {
   3.6367338732188787`*^9, 3.6367338900380793`*^9}, {3.636733950263845*^9, 
   3.636733950848785*^9}, {3.636821460636732*^9, 3.636821506722666*^9}, {
   3.638802895588224*^9, 3.638802913904401*^9}, {3.639404459689352*^9, 
   3.6394044601112328`*^9}, {3.639751571463934*^9, 3.6397516353744717`*^9}, 
   3.63975174554202*^9, {3.6399159847423*^9, 3.639916071779233*^9}, {
   3.64633936483854*^9, 3.646339391852702*^9}, {3.646399544303945*^9, 
   3.646399547796715*^9}, {3.646679261252306*^9, 3.646679276354968*^9}, 
   3.650124557035658*^9, {3.664129300305913*^9, 3.664129339358344*^9}, {
   3.674843142860195*^9, 3.674843157809655*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "0"}], ",", 
     RowBox[{"H", "\[Rule]", "0"}], ",", 
     RowBox[{"F", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "1"}], ",", 
     RowBox[{"H", "\[Rule]", "0"}], ",", 
     RowBox[{"F", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ",", 
     RowBox[{"H", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}], ",", 
     RowBox[{"F", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6367338562774057`*^9, 3.636733892835491*^9}, 
   3.636733953271134*^9, 3.6367342268947773`*^9, 3.6368028539326344`*^9, 
   3.636802918057365*^9, 3.63681183160989*^9, {3.636821468543605*^9, 
   3.636821514826768*^9}, 3.638037586765584*^9, 3.63863731133125*^9, 
   3.638640475795381*^9, 3.6387056476591587`*^9, 3.638802922695804*^9, 
   3.639404469794877*^9, 3.639751651214674*^9, 3.639751752013788*^9, 
   3.639753818415154*^9, 3.639916083995297*^9, 3.646339399287528*^9, 
   3.646399019070917*^9, 3.646399465618232*^9, 3.646399549397532*^9, 
   3.646591489201261*^9, {3.6466792659419737`*^9, 3.646679276734028*^9}, 
   3.649789057395759*^9, 3.649849743665978*^9, 3.650034871886655*^9, 
   3.650125498957747*^9, 3.66335154366611*^9, 3.664129342666638*^9, 
   3.664135613107689*^9, 3.665257579905547*^9, 3.666372626366248*^9, 
   3.666448990504071*^9, 3.667318614028458*^9, {3.669660693060197*^9, 
   3.669660707402479*^9}, 3.674818839404607*^9, 3.674843159119795*^9, 
   3.6769807218527603`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InternalSol1", " ", "=", " ", 
   RowBox[{"Sol", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"InternalSol2", " ", "=", " ", 
     RowBox[{"Sol", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.636734010604021*^9, 3.636734036566966*^9}, {
  3.6367343790332203`*^9, 3.6367343796497917`*^9}, {3.6397516932049723`*^9, 
  3.63975171269001*^9}, {3.646339476460618*^9, 3.646339479500432*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "InternalSol1", "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
    RowBox[{"\[Mu]", "->", "0.2"}], ",", 
    RowBox[{"\[Rho]", "\[Rule]", "0.5"}], ",", 
    RowBox[{"\[Sigma]", "\[Rule]", "0.5"}], ",", " ", 
    RowBox[{"m", "\[Rule]", "0.2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.636734039540743*^9, 3.636734111419137*^9}, {
   3.636821532476531*^9, 3.636821534605826*^9}, {3.638802937516183*^9, 
   3.6388029446389923`*^9}, 3.639404479065029*^9, {3.6397516641921864`*^9, 
   3.63975168223667*^9}, {3.639751719417858*^9, 3.639751719980227*^9}, {
   3.6399160959739017`*^9, 3.639916124787385*^9}, {3.6463394835723267`*^9, 
   3.646339491410533*^9}, {3.646399476469509*^9, 3.6463994824753513`*^9}, {
   3.646399553709423*^9, 3.646399555895651*^9}, {3.6497890642685843`*^9, 
   3.649789064819036*^9}, {3.664129368439653*^9, 3.664129370587388*^9}, {
   3.664129422925795*^9, 3.66412942352055*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"R", "\[Rule]", "0.5333333333333334`"}], ",", 
    RowBox[{"H", "\[Rule]", "0.2592592592592592`"}], ",", 
    RowBox[{"F", "\[Rule]", "0.5185185185185185`"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{{3.6367340942464657`*^9, 3.6367341118464622`*^9}, 
   3.636734230112893*^9, 3.636802854162773*^9, 3.636802925190996*^9, 
   3.6368118495181103`*^9, 3.636821536360592*^9, 3.638037596377495*^9, 
   3.638637315679579*^9, 3.638640475900714*^9, 3.6387056477640343`*^9, 
   3.638802946313595*^9, 3.639404480350066*^9, {3.639751674958169*^9, 
   3.639751720872808*^9}, 3.639751779895405*^9, 3.639753818579537*^9, 
   3.639916128895604*^9, 3.646339492406941*^9, {3.6463994730716743`*^9, 
   3.646399482880644*^9}, {3.646399556551483*^9, 3.646399564778727*^9}, 
   3.646591489356626*^9, 3.6497890690336437`*^9, 3.649849743794527*^9, 
   3.6500348720858994`*^9, 3.650125499149332*^9, 3.6633515438093863`*^9, {
   3.664129423887477*^9, 3.6641294294853*^9}, 3.664135621064705*^9, 
   3.665257580072838*^9, 3.666372635726495*^9, 3.6664489905831947`*^9, 
   3.6673186192910748`*^9, 3.674818839577305*^9}]
}, Open  ]],

Cell["\<\
This means only InternalSol2 is an INTERNAL, POSITIVE SOLUTION\
\>", "Text",
 CellChangeTimes->{{3.6367341216915073`*^9, 3.63673413469573*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntPosSol", " ", "=", " ", "InternalSol1"}], ";"}]], "Input",
 CellChangeTimes->{{3.636734140626615*^9, 3.6367341644216967`*^9}, {
   3.636734214526906*^9, 3.63673421628828*^9}, 3.63673438707572*^9, {
   3.636821601636962*^9, 3.636821603414339*^9}, {3.6399161377925653`*^9, 
   3.639916138244009*^9}, {3.646339507845647*^9, 3.646339508059929*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Rstar", " ", "=", " ", 
  RowBox[{
   RowBox[{"IntPosSol", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Hstar", " ", "=", " ", 
  RowBox[{
   RowBox[{"IntPosSol", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Fstar", " ", "=", " ", 
  RowBox[{
   RowBox[{"IntPosSol", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.636734243619029*^9, 3.63673430689607*^9}, {
  3.664135695621868*^9, 3.664135697794962*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
   RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]], "Output",
 CellChangeTimes->{{3.636734281637939*^9, 3.63673430732928*^9}, 
   3.636802854231922*^9, 3.636802930763019*^9, 3.636811860836183*^9, 
   3.6368216155344687`*^9, 3.6368289138881903`*^9, 3.638037605140617*^9, 
   3.6386373157441387`*^9, 3.638640475938632*^9, 3.638705647808175*^9, 
   3.6388029559596043`*^9, 3.6394045010089903`*^9, 3.639751795452619*^9, 
   3.639753818623708*^9, 3.63991614491415*^9, 3.646339512999179*^9, 
   3.646399591554145*^9, 3.646591489414483*^9, 3.649789074142665*^9, 
   3.649849743864037*^9, 3.650034872143837*^9, 3.6501254992258797`*^9, 
   3.663351543848957*^9, {3.664129551639027*^9, 3.664129556672278*^9}, 
   3.664135626152213*^9, 3.664135702426548*^9, 3.6652575801114273`*^9, 
   3.666372658679545*^9, 3.6664489906217012`*^9, 3.667318619324209*^9, {
   3.669660696907233*^9, 3.6696607237815037`*^9}, 3.674818839636366*^9, 
   3.676980730727426*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox["\[Lambda]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "\[Mu]"}], "+", 
     RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
     RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.636734281637939*^9, 3.63673430732928*^9}, 
   3.636802854231922*^9, 3.636802930763019*^9, 3.636811860836183*^9, 
   3.6368216155344687`*^9, 3.6368289138881903`*^9, 3.638037605140617*^9, 
   3.6386373157441387`*^9, 3.638640475938632*^9, 3.638705647808175*^9, 
   3.6388029559596043`*^9, 3.6394045010089903`*^9, 3.639751795452619*^9, 
   3.639753818623708*^9, 3.63991614491415*^9, 3.646339512999179*^9, 
   3.646399591554145*^9, 3.646591489414483*^9, 3.649789074142665*^9, 
   3.649849743864037*^9, 3.650034872143837*^9, 3.6501254992258797`*^9, 
   3.663351543848957*^9, {3.664129551639027*^9, 3.664129556672278*^9}, 
   3.664135626152213*^9, 3.664135702426548*^9, 3.6652575801114273`*^9, 
   3.666372658679545*^9, 3.6664489906217012`*^9, 3.667318619324209*^9, {
   3.669660696907233*^9, 3.6696607237815037`*^9}, 3.674818839636366*^9, 
   3.6769807307379227`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "\[Mu]"}], "+", 
     RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
     RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.636734281637939*^9, 3.63673430732928*^9}, 
   3.636802854231922*^9, 3.636802930763019*^9, 3.636811860836183*^9, 
   3.6368216155344687`*^9, 3.6368289138881903`*^9, 3.638037605140617*^9, 
   3.6386373157441387`*^9, 3.638640475938632*^9, 3.638705647808175*^9, 
   3.6388029559596043`*^9, 3.6394045010089903`*^9, 3.639751795452619*^9, 
   3.639753818623708*^9, 3.63991614491415*^9, 3.646339512999179*^9, 
   3.646399591554145*^9, 3.646591489414483*^9, 3.649789074142665*^9, 
   3.649849743864037*^9, 3.650034872143837*^9, 3.6501254992258797`*^9, 
   3.663351543848957*^9, {3.664129551639027*^9, 3.664129556672278*^9}, 
   3.664135626152213*^9, 3.664135702426548*^9, 3.6652575801114273`*^9, 
   3.666372658679545*^9, 3.6664489906217012`*^9, 3.667318619324209*^9, {
   3.669660696907233*^9, 3.6696607237815037`*^9}, 3.674818839636366*^9, 
   3.676980730744254*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{"Rstar", ",", 
   RowBox[{"\[Sigma]", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{"Fstar", ",", 
   RowBox[{"\[Sigma]", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6748240119344397`*^9, 3.674824080786352*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["\[Mu]", "\[Rho]"]}]], "Output",
 CellChangeTimes->{{3.674824054035412*^9, 3.674824081293599*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
  RowBox[{"\[Rho]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", "\[Mu]"}], "+", 
     RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.674824054035412*^9, 3.674824081298491*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alpha", "=", "0.5"}], ",", 
      RowBox[{"lambda", "=", "0.2"}], ",", 
      RowBox[{"mu", "=", "0.2"}], ",", 
      RowBox[{"rho", "=", "0.2"}], ",", 
      RowBox[{"mr", "=", "0.2"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Rstarspec", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"IntPosSol", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "mu"}], ",", 
         RowBox[{"\[Rho]", "\[Rule]", "rho"}], ",", 
         RowBox[{"m", "\[Rule]", "mr"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Xstarspec", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"IntPosSol", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "mu"}], ",", 
         RowBox[{"\[Rho]", "\[Rule]", "rho"}], ",", 
         RowBox[{"m", "\[Rule]", "mr"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ystarspec", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"IntPosSol", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "mu"}], ",", 
         RowBox[{"\[Rho]", "\[Rule]", "rho"}], ",", 
         RowBox[{"m", "\[Rule]", "mr"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FigFP", "=", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Rstarspec", ",", "Xstarspec", ",", "Ystarspec", ",", 
             RowBox[{"Xstarspec", "+", "Ystarspec"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", "lambda", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Starvation rate \[Sigma]\>\"", ",", 
              "\"\<Steady State\>\""}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(R\), \(*\)]\)\>\"", ",", 
              "\"\<\!\(\*SuperscriptBox[\(H\), \(*\)]\)\>\"", ",", 
              "\"\<\!\(\*SuperscriptBox[\(F\), \(*\)]\)\>\"", ",", 
              "\"\<\!\(\*SuperscriptBox[\(H\), \(*\)]\)+\!\(\*SuperscriptBox[\
\(F\), \(*\)]\)\>\""}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Dotted", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"lambda", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"lambda", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"\"\<Transcritial Bifurcation\>\"", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"lambda", "-", "0.02"}], ")"}], ",", "0.5"}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"90", "Degree"}]}], "]"}], "]"}]}], "\[IndentingNewLine]",
         "}"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.636828847643564*^9, 3.636828890382423*^9}, {
   3.6368289268709183`*^9, 3.636828927925363*^9}, {3.636829012263837*^9, 
   3.63682919871548*^9}, 3.6368292951195927`*^9, 3.636829408492687*^9, {
   3.636829466693036*^9, 3.636829490835649*^9}, {3.636829527412133*^9, 
   3.6368295651378517`*^9}, {3.636829721658711*^9, 3.636829747275872*^9}, {
   3.636829785769545*^9, 3.6368298188516083`*^9}, {3.6368298613805933`*^9, 
   3.636829908707963*^9}, {3.638037552949978*^9, 3.638037557241889*^9}, {
   3.638037674373057*^9, 3.6380376751294727`*^9}, {3.638037760460108*^9, 
   3.638037762100814*^9}, {3.638705651353438*^9, 3.638705664494424*^9}, {
   3.638708839338275*^9, 3.638708846561138*^9}, {3.6387996604295607`*^9, 
   3.638799687647542*^9}, {3.638802961133232*^9, 3.638802989175686*^9}, {
   3.6388057445606728`*^9, 3.638805757735209*^9}, {3.638805795345224*^9, 
   3.638805822945912*^9}, {3.639404510474008*^9, 3.6394045150562897`*^9}, {
   3.639751802166316*^9, 3.639751902022428*^9}, {3.639753826942215*^9, 
   3.6397538521396646`*^9}, {3.639916174262718*^9, 3.639916240307322*^9}, {
   3.646339519093129*^9, 3.6463395718605957`*^9}, {3.646339619190909*^9, 
   3.6463396500440702`*^9}, {3.646340092812203*^9, 3.646340117377707*^9}, {
   3.6463401638182077`*^9, 3.64634019379604*^9}, {3.646398387466496*^9, 
   3.64639843949728*^9}, {3.646399596759367*^9, 3.646399603015993*^9}, {
   3.646407678126123*^9, 3.646407693507011*^9}, {3.6465671320911016`*^9, 
   3.646567138928913*^9}, 3.6465914985470057`*^9, {3.646591548398472*^9, 
   3.646591565692947*^9}, {3.646592739360794*^9, 3.646592739459112*^9}, {
   3.649789088176059*^9, 3.6497894390904016`*^9}, {3.64978950630929*^9, 
   3.649789508197551*^9}, {3.649849590920107*^9, 3.6498496237786903`*^9}, {
   3.649849686041395*^9, 3.6498497577936287`*^9}, {3.6498519728974943`*^9, 
   3.6498519749520693`*^9}, {3.64985201091964*^9, 3.649852146734466*^9}, 
   3.6633515347482452`*^9, {3.6641294878627*^9, 3.6641295278560743`*^9}, {
   3.664129567164752*^9, 3.6641295771984663`*^9}, {3.664133746965197*^9, 
   3.664133781253888*^9}, {3.664135707551635*^9, 3.664135710048244*^9}, {
   3.665257563853388*^9, 3.665257572762594*^9}, {3.665258197982313*^9, 
   3.665258240337859*^9}, {3.667242586749527*^9, 3.667242588018387*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVkXlMkwcAxSvjkBILZXI5XFAEREAEwWMcjxsnUpRDEKtTjskELSoYcLAJ
3USZoiBmdEqjQ8IxWBSUFkUsRJAi45Zy2+uj5SifN6BrWPfHy8sveX/8krcu
jhWeqEWhUEI1+b/ZblVNHI4QZ/K4rYLpRO+a9e/flt0R4oteq3aeaQCGjGD/
d5UQzJserMQvI7FRNXijtVEIp3u8NJ1VCegup7BmR4Q4F3bC/jQlDeZmMeu8
1nSiNl3xPF/BRu2S7gXxH51YXGp0zGq4DlFzQpjdrRcwOfdzzqboMrjzaKp/
hf/g6XptdTKzHm+ZXrSx/h7QN9gMSZofIyP0uzaBsheeBlciAx60IMvaTJ+v
7sPOnMPtR4rb4Ly3sGArZQCcQP7A0Q8dUNbnWkSYD4Ki9MgdietCa/za/v0O
L7Go5+EYfqkHIcfPdU06DGEzL+fiWds+jFQwuqh+IuxSXs+XXe2HmSex6nHg
MCocPzOdugdw1tImOyxgBEUOLGnTh0GMbh1/kxczCt1uPwnLZgiqO1GVAbFj
MPN5ucLcVQSd4KCE8lPjEIpOJv8UNAzsEIfOsCfAbLxZvxg8go3nPTPr2ZNo
Nn6XzHUchemyYbUV5xUkjCSDT+ZjiJ0Jp+kzxCjw33o9aXYMNakHOiNGxaD3
HlaZtY2DVupWapQgwY2r7hTDwgl0vH997apcgjWuVbtdgieho0zKE7OkoKce
+z1G+xU4uq3cd2+k8L93soBb+wreL8iujFMyuNyl8q/YipHoMKLu+SxD2ILN
7cpMMeQNZWHTWXIUto4qXJ+JMTVhf3dwJQE7q9uH5HQJFqt/MXQtIhBoebtk
20EJ4soEN/cZT6G6eMsey1IJGNv5m/xLpzDQ4aGgSCUo+nht9OPXClhWqbfo
WUmhOOh9x5KrwJ8XAnK6YqVoZlYcX71RiSkRS5pUIoXq4pvI7kolZmuWHBZ6
pODuXfCNdZuGwLiB70KVocJ/MqyyYRoTi582dXjL0DLOSUvaNoOKZyktzaky
HKLTb30SzODDhroDXuUy7Dv1g5zhN4vlpvNNDwdleJ6S7ZzePQvayW9KCnXl
YNC+L1wVMwcGYcBWu8vhNOa8Oml4Dj9GU33mjsg1PzzkFMer8Oysfv7aAjmC
RV/5sAkVTAvt20x4chjRo9WyhHlY+weStpNyMKdCn5iS87DIqrdj6hGgKGy4
Bqkk4i8fOiFwJCBEPivkNIkn3CarRCcCRSXzPr+lkbC3uyTQ30xgw26ejJpJ
wvJKRlu4M4Fva3fZU3NJtFobEzIXzf5M8oOVxSTYmTt/0tpOwJpyv1OHT8KF
l77FxZfAXIzJrcBHJGrr3TMGNNxwP/PEr00k1m3uq0n3I7Ar3s9Ip4VEo13l
eKM/gZT2gSjtThI3utyifYMIPLj8Uaw1TuLojseP9oQQyCZi6/wmSeTXPe9T
aTjI+yk7V0yCn0m8LNhDYJjMs9UiSPgGx5X3hhJQh1ukrJjX+Fg2H43YS6D9
r2wv39ckzH3rJO80fE1bSst5S+I9o59RvI/A+obq+5QFEryEsteD4QRmaYZs
nyUS3tSDNukRGp9jZyLPfyahPRgSbBKp8RGIbARqEgpa5v6HGg6y8FxYXiah
ozcVHhVF4D/l/2tQ
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwdzn001XcABvA7oZCLwji7c4ZpmqmzOJTk8ZaXOijyEqlzyEvGwVRnOuzI
zXKkwpydqeuqIS/TonRpW7quzZaMhLi/++JyX13u/aLQvMxszznPef55/vjY
JmSGJ+nQaDSfzf63kcZ5cXdch0H7P3NQPSq0jrAaQUFgyFaGLQEv8cNXUU6j
YF53Drd00OJo2qV+sdNrFGl+Ui8GasBvCO039B3D6I3E52bJs3jfU278y+Fx
WOlK6+1rZnCR4ZAf5s9H75VLC+cUalAuwvmrMRQOwm3nLUc1NHcjG/1jBZjv
oP5pLZiGXmDA2fpsIeyeUGtzwypgvyREzRTBoaXrpq6LCo4FnrmPmGIEmxev
MeqUsNwwaf6oagLtA+LORFMlYtXhdINQCXoXN2rFpQq0ZJ3si6AkWHpaZzSk
qwC92rXa9Owk/L4R10QVyfHn27mym7JJtHpHfX55pxx6qtSrkswpLJ88czeo
WoYqfR77zfwURodWFHkuMni9IP1fZUvR83CBPzAoRZITf31wVQpRyUt3TYoU
Mk5t2HSeDC9K95zmGkqhEO2uG9kmx+DYcskPTVN413zFZF+FHI1C9+7VkCkk
1HJvH9+hwGcBPXdYq5MIde/81K9agRX/RfHX9ZOoWCqjlmyUYM/ydJajJ6GM
87rLYCvREZ12uoA+ia5TDWnmjirY7nsry+uWQFM8f2KgUQVKudXAKE8C9rFl
n1jXaZSnMvg+LhI0+InDGjnTGCsvrTSSTqBbWHU+1U2NePMshn3yBOLNzFgr
XDVu1/JqFFNiHM8+Jwv1nUHhJ12NB9LF+CM9f++FgRlQsxlbKokIofTkcuOY
WXB9E/br54rgLNhrnjo+iyMOijNtxiLc8HtcVZmogUW0aheHJUTg2AfeTLkG
QRZW3wa7CWFqFr0uPauF8/irJvaIAKcUIU8tiRa/Bz9jVWUIQFM6sI2yCAxs
v9PamArwHCWZR78ksM9x3MOkC1Dxvdb72nkCa5smtnK7AB8f6ZAa5hIcqAnf
0WYgQPD9oN2GhQTV98L9ArZs/nO+aN9WSXDoWNZvuUsU7GltfXqdBHocvr6e
iMJsjAXr8M8EQ125EZkCCpy23IyiXwlaty8O8vkUghJ9TfW6CdpYcTEPXlNI
7x2O1O0juE5bqz/1kkJ76ZJER0hg+sbJmdtDIV8e+9BXTNDUXZrjzKMQ4PWM
WSgh6Azznb7FpTBOru7SkROIQ0oSLj6lsB5unf6elqD4Sd21vR0Uen/MP+Qz
RxAQzzvKfkyhTHeKfnmBgO2x4GHcTsGO09xGWyY4eCXl3kwrhRm6CdP7b4Kk
ZJZd3INNT0rOiYJVgncZvL/67m96uGMO3HUCbuxQg0fLpsfac3ljg+CCltva
3EzhX8ZOH54=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwdzn001XcABvA7oZCLwji7c4ZpmqmzOJTk8ZaXOijyEqlzyEvGwVRnOuzI
zXKkwpydqeuqIS/TonRpW7quzZaMhLi/++JyX13u/aLQvMxszznPef55/vjY
JmSGJ+nQaDSfzf63kcZ5cXdch0H7P3NQPSq0jrAaQUFgyFaGLQEv8cNXUU6j
YF53Drd00OJo2qV+sdNrFGl+Ui8GasBvCO039B3D6I3E52bJs3jfU278y+Fx
WOlK6+1rZnCR4ZAf5s9H75VLC+cUalAuwvmrMRQOwm3nLUc1NHcjG/1jBZjv
oP5pLZiGXmDA2fpsIeyeUGtzwypgvyREzRTBoaXrpq6LCo4FnrmPmGIEmxev
MeqUsNwwaf6oagLtA+LORFMlYtXhdINQCXoXN2rFpQq0ZJ3si6AkWHpaZzSk
qwC92rXa9Owk/L4R10QVyfHn27mym7JJtHpHfX55pxx6qtSrkswpLJ88czeo
WoYqfR77zfwURodWFHkuMni9IP1fZUvR83CBPzAoRZITf31wVQpRyUt3TYoU
Mk5t2HSeDC9K95zmGkqhEO2uG9kmx+DYcskPTVN413zFZF+FHI1C9+7VkCkk
1HJvH9+hwGcBPXdYq5MIde/81K9agRX/RfHX9ZOoWCqjlmyUYM/ydJajJ6GM
87rLYCvREZ12uoA+ia5TDWnmjirY7nsry+uWQFM8f2KgUQVKudXAKE8C9rFl
n1jXaZSnMvg+LhI0+InDGjnTGCsvrTSSTqBbWHU+1U2NePMshn3yBOLNzFgr
XDVu1/JqFFNiHM8+Jwv1nUHhJ12NB9LF+CM9f++FgRlQsxlbKokIofTkcuOY
WXB9E/br54rgLNhrnjo+iyMOijNtxiLc8HtcVZmogUW0aheHJUTg2AfeTLkG
QRZW3wa7CWFqFr0uPauF8/irJvaIAKcUIU8tiRa/Bz9jVWUIQFM6sI2yCAxs
v9PamArwHCWZR78ksM9x3MOkC1Dxvdb72nkCa5smtnK7AB8f6ZAa5hIcqAnf
0WYgQPD9oN2GhQTV98L9ArZs/nO+aN9WSXDoWNZvuUsU7GltfXqdBHocvr6e
iMJsjAXr8M8EQ125EZkCCpy23IyiXwlaty8O8vkUghJ9TfW6CdpYcTEPXlNI
7x2O1O0juE5bqz/1kkJ76ZJER0hg+sbJmdtDIV8e+9BXTNDUXZrjzKMQ4PWM
WSgh6Azznb7FpTBOru7SkROIQ0oSLj6lsB5unf6elqD4Sd21vR0Uen/MP+Qz
RxAQzzvKfkyhTHeKfnmBgO2x4GHcTsGO09xGWyY4eCXl3kwrhRm6CdP7b4Kk
ZJZd3INNT0rOiYJVgncZvL/67m96uGMO3HUCbuxQg0fLpsfac3ljg+CCltva
3EzhX8ZOH54=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAh2yNifWZ6T8AAAAAAADwP6dD3k+o
tuk/15GMlAvj7z/B3Jl0aDbqP10UcBwjZu8/XRERnPrA6j+bo8Kf5uLuP1Fx
aeROQus/gie+qDls7j/HbH0vdc7rP9rsbQOU7+0/Tg5mkQ1Y7D/AQmI4Bnnt
Py3bLxRo2Ow/SiXmX7EN7T+OQ7WZlGPtPxVX6Ca2nOw/R9cbQIPl7T9IFRiT
STbsPxARV/3jZO4/LdjSqZ7U6z9c5k29Fu/uP8VJv5yZbes/AOclngtw7z8J
IZbuHhDrP8k/im9Lcu8/I3MoLoMO6z+SmO5Ai3TvPxkeqZ7nDOs/JEq34wp5
7z85n1ISsQnrP0mtSCkKgu8/naZSQ0YD6z+Sc2u0CJTvPz1QcMR59uo/IwCx
ygW47z8FttkGBd3qP+xYFZxFuu8/0b55U2/b6j+2sXlthbzvP7AM9c/Z2eo/
SGNCEAXB7z+xnFtYr9bqP2zG01UEyu8/jQD8pVzQ6j+0jPbgAtzvPxDzKy3A
w+o/feVaskLe7z+pwYxzLcLqP0Y+v4OC4O8/uE9C6ZrA6j/Y74cmAuXvP95N
imJ2veo//VIZbAHu7z+IuaSLL7fqP8arfT1B8O8/Rl3CS5616j+QBOIOgfLv
P5468joNtOo/IraqsQD37z87hGem67DqP+sOD4NA+e8/ZWacIluv6j+0Z3NU
gPvvP/htws3Kreo/fcDXJcD97z/AWtGnOqzqP0YZPPf//+8/de7AsKqq6j9f
pSKm
         "]]}}}, {
      Dashing[{0, Small}], 
      LineBox[{{0.2, 0}, {0.2, 1}}]}, 
     GeometricTransformationBox[
      InsetBox[
       FormBox["\"Transcritial Bifurcation\"", TraditionalForm], {
       0.18000000000000002`, 0.5}], {{{0, -1}, {1, 0}}, Center}]}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Steady State\"", TraditionalForm], None}, {
        FormBox["\"Starvation rate \[Sigma]\"", TraditionalForm], None}}, 
     FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(R\\), \\(*\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(H\\), \\(*\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(F\\), \\(*\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(H\\), \
\\(*\\)]\\)+\\!\\(\\*SuperscriptBox[\\(F\\), \\(*\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.636828891978991*^9, 3.636828929172289*^9, 3.636829018882822*^9, 
   3.6368290688651323`*^9, 3.636829102090407*^9, 3.6368292001679487`*^9, 
   3.6368292961357203`*^9, 3.6368294118337*^9, {3.636829467774069*^9, 
   3.636829491963479*^9}, {3.6368295428464947`*^9, 3.636829567510602*^9}, {
   3.636829742014682*^9, 3.636829748105545*^9}, {3.636829793166854*^9, 
   3.636829805372933*^9}, 3.636829846593967*^9, {3.636829890968876*^9, 
   3.636829909911626*^9}, 3.638037612294804*^9, 3.638037675968644*^9, 
   3.638037762712059*^9, 3.638637315930397*^9, 3.638640476132234*^9, {
   3.638705648048143*^9, 3.638705664957114*^9}, {3.6387088434700203`*^9, 
   3.638708847212545*^9}, {3.638799673562715*^9, 3.63879968853969*^9}, {
   3.63880297202958*^9, 3.638802989701627*^9}, 3.638805758758151*^9, {
   3.638805801179553*^9, 3.638805823709331*^9}, 3.639404522326849*^9, {
   3.6397518333074627`*^9, 3.639751843872826*^9}, {3.6397518752772818`*^9, 
   3.639751902596304*^9}, 3.639753853117202*^9, {3.639916220390346*^9, 
   3.639916241480801*^9}, {3.646339526144821*^9, 3.6463395727891607`*^9}, {
   3.646339623724451*^9, 3.646339650600472*^9}, {3.646340099845911*^9, 
   3.646340118048833*^9}, {3.646340168912354*^9, 3.6463401947036543`*^9}, {
   3.646398390307703*^9, 3.64639844082697*^9}, 3.6463996060719624`*^9, 
   3.646407702248352*^9, {3.6465914897003508`*^9, 3.646591499068818*^9}, {
   3.646591549163529*^9, 3.6465915662381268`*^9}, 3.6465927417411118`*^9, 
   3.649789083477162*^9, {3.64978912068495*^9, 3.64978916160948*^9}, {
   3.649789231998828*^9, 3.6497892406335583`*^9}, {3.6497892746928368`*^9, 
   3.649789319782489*^9}, {3.649789382628107*^9, 3.649789410628214*^9}, 
   3.64978950892266*^9, {3.649849716077764*^9, 3.649849758432613*^9}, {
   3.649852059474835*^9, 3.649852147354486*^9}, 3.650034880203405*^9, 
   3.650125499344994*^9, {3.663351537506962*^9, 3.663351543936224*^9}, {
   3.664129529119361*^9, 3.6641295781833982`*^9}, {3.6641337480994*^9, 
   3.664133782102124*^9}, 3.664135629442482*^9, 3.6641385215065527`*^9, {
   3.665257574605114*^9, 3.665257580192728*^9}, {3.665258198574914*^9, 
   3.665258240925823*^9}, 3.6672425891412077`*^9, 3.674818839834177*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/Manuscript/\
fig_FP.pdf\>\"", ",", "FigFP"}], "]"}]], "Input",
 CellChangeTimes->{{3.649789511048077*^9, 3.649789512651924*^9}, {
  3.649789543514022*^9, 3.6497895572262983`*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
Manuscript/fig_FP.pdf\"\>"], "Output",
 CellChangeTimes->{3.64978956003055*^9, 3.64984977264023*^9, 
  3.6498527722722683`*^9, 3.65003488098094*^9, 3.6501254997070217`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Rstarspec", ",", "Xstarspec", ",", "Ystarspec"}], "}"}], ",", 
   RowBox[{"\[Sigma]", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.636829427804101*^9, 3.6368294439324083`*^9}, 
   3.639916263202137*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.6368294453349113`*^9, 3.6386404762560863`*^9, 
  3.6387071307828007`*^9, 3.6394045323180933`*^9, 3.6397538619342613`*^9, 
  3.639916264683671*^9, 3.650034881023757*^9, 3.650125499768462*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dF", " ", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", "*", "F"}], "-", 
    RowBox[{"\[Sigma]", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}], "*", "F"}], "+", 
    RowBox[{"\[Rho]", "*", "R", "*", "H"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dH", " ", "=", 
   RowBox[{
    RowBox[{"\[Sigma]", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}], "*", "F"}], "-", 
    RowBox[{"\[Rho]", "*", "R", "*", "H"}], "-", 
    RowBox[{"\[Mu]", "*", "H"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dR", "=", "   ", 
   RowBox[{
    RowBox[{"\[Alpha]", "*", "R", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}]}], "-", 
    RowBox[{"R", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Rho]", "*", "H"}], "+", 
       RowBox[{"m", "*", "F"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacSpec", " ", "=", " ", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dF", ",", "F"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dF", ",", "H"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dF", ",", "R"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dH", ",", "F"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dH", ",", "H"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dH", ",", "R"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dR", ",", "F"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dR", ",", "H"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dR", ",", "R"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.6367345537246017`*^9, 3.636734687079061*^9}, {
   3.636821627840353*^9, 3.636821652950233*^9}, {3.63682186789629*^9, 
   3.6368218773918257`*^9}, {3.638803003472077*^9, 3.6388030173960943`*^9}, 
   3.638806884048028*^9, {3.639404444029475*^9, 3.639404444472543*^9}, {
   3.639751926584313*^9, 3.6397519519424887`*^9}, {3.639916282231394*^9, 
   3.639916301631213*^9}, {3.646340205798622*^9, 3.646340216096526*^9}, {
   3.64639961265875*^9, 3.64639961546839*^9}, {3.6641354513200493`*^9, 
   3.664135457874148*^9}, {3.664135714434786*^9, 3.66413573909451*^9}, {
   3.66637258237985*^9, 3.6663726037598658`*^9}, {3.6672476420103188`*^9, 
   3.66724768217033*^9}, 3.667247744823715*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "R"}], ")"}], " ", "\[Sigma]"}]}], ",", 
     RowBox[{"R", " ", "\[Rho]"}], ",", 
     RowBox[{
      RowBox[{"H", " ", "\[Rho]"}], "+", 
      RowBox[{"F", " ", "\[Sigma]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "R"}], ")"}], " ", "\[Sigma]"}], ",", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], "-", 
      RowBox[{"R", " ", "\[Rho]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "H"}], " ", "\[Rho]"}], "-", 
      RowBox[{"F", " ", "\[Sigma]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "m"}], " ", "R"}], ",", 
     RowBox[{
      RowBox[{"-", "R"}], " ", "\[Rho]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "F"}], " ", "m"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "R"}], ")"}], " ", "\[Alpha]"}], "-", 
      RowBox[{"R", " ", "\[Alpha]"}], "-", 
      RowBox[{"H", " ", "\[Rho]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.638803018810583*^9, 3.638806888503537*^9, 3.639404437484146*^9, 
   3.639404546547593*^9, 3.6397519616799917`*^9, 3.6397538621132708`*^9, 
   3.639916304123005*^9, 3.646340220370294*^9, 3.6463996165093718`*^9, 
   3.649851625764737*^9, {3.650034855890368*^9, 3.650034881075095*^9}, 
   3.650125499818701*^9, {3.664135460266553*^9, 3.664135487809733*^9}, 
   3.664135632374612*^9, 3.664135741542385*^9, 3.666372605377166*^9, 
   3.666449003625924*^9, 3.667247685894985*^9, 3.6672477456954412`*^9, 
   3.667318626432261*^9, 3.6696607279406652`*^9, 3.674818857669694*^9, {
   3.676980711563093*^9, 3.676980739099204*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacSpec", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.636821661986713*^9, 3.636821666550809*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"\[Lambda]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "R"}], ")"}], " ", "\[Sigma]"}]}], 
      RowBox[{"R", " ", "\[Rho]"}], 
      RowBox[{
       RowBox[{"H", " ", "\[Rho]"}], "+", 
       RowBox[{"F", " ", "\[Sigma]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "R"}], ")"}], " ", "\[Sigma]"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", 
       RowBox[{"R", " ", "\[Rho]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "H"}], " ", "\[Rho]"}], "-", 
       RowBox[{"F", " ", "\[Sigma]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "m"}], " ", "R"}], 
      RowBox[{
       RowBox[{"-", "R"}], " ", "\[Rho]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "F"}], " ", "m"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "R"}], ")"}], " ", "\[Alpha]"}], "-", 
       RowBox[{"R", " ", "\[Alpha]"}], "-", 
       RowBox[{"H", " ", "\[Rho]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.636821667145422*^9, 3.636821881986177*^9, {3.638637296530751*^9, 
   3.63863732244209*^9}, 3.6386404762971478`*^9, 3.638707131027398*^9, {
   3.6388030114900637`*^9, 3.638803022643118*^9}, 3.638806898000214*^9, 
   3.639404437600232*^9, 3.639404550950568*^9, 3.639751964420309*^9, 
   3.639753862157166*^9, 3.639916307617361*^9, 3.646340223619935*^9, 
   3.6463996212174597`*^9, 3.649851625900284*^9, {3.6500348560670843`*^9, 
   3.650034881125455*^9}, 3.650125499868082*^9, {3.66413546364902*^9, 
   3.664135490393856*^9}, 3.6641356366939993`*^9, 3.664135746691572*^9, 
   3.666372609436925*^9, 3.666449003763565*^9, 3.66724774906989*^9, 
   3.6748188578405037`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JacSpecSol", " ", "=", " ", 
   RowBox[{"JacSpec", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", "\[Rule]", "Rstar"}], ",", 
      RowBox[{"H", "\[Rule]", "Hstar"}], ",", 
      RowBox[{"F", "\[Rule]", "Fstar"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacSpecSolTriv", " ", "=", " ", 
  RowBox[{"JacSpe", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "0"}], ",", 
     RowBox[{"H", "\[Rule]", "0"}], ",", 
     RowBox[{"F", "\[Rule]", "0"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.649851577822241*^9, 3.649851620337479*^9}, {
  3.664135751875751*^9, 3.6641357566005297`*^9}, {3.6673186550110083`*^9, 
  3.667318693163837*^9}}],

Cell[BoxData["JacSpe"], "Output",
 CellChangeTimes->{3.669660736144885*^9, 3.674818857902419*^9, 
  3.6769807438708687`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["JacSpecSol"], "Input",
 CellChangeTimes->{{3.649851867892756*^9, 3.649851871071999*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "-", 
      RowBox[{"\[Sigma]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
          RowBox[{
           RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
           RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ")"}]}]}], ",", 
     FractionBox[
      RowBox[{"\[Mu]", " ", "\[Rho]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
       RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}], " ", "\[Sigma]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], "-", 
      FractionBox[
       RowBox[{"\[Mu]", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", 
         SuperscriptBox["\[Lambda]", "2"], " ", "\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"m", " ", "\[Mu]"}], "+", 
           RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
           RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}], "-", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}], " ", "\[Sigma]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"m", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[Mu]", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"m", " ", "\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"m", " ", "\[Mu]"}], "+", 
           RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
           RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]]}], "-", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
          RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], "+", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
          RowBox[{
           RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
           RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ")"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.649851871548547*^9, {3.650034856150935*^9, 3.650034881179166*^9}, 
   3.650125499940329*^9, 3.664135496003161*^9, 3.66413564228056*^9, 
   3.664135761891519*^9, 3.664136107454238*^9, {3.66637264395014*^9, 
   3.666372664357833*^9}, 3.66644900381229*^9, 3.6672333587837877`*^9, 
   3.66724775682229*^9, 3.669660742047326*^9, 3.674818857951888*^9, 
   3.676980747669183*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", "JacSpecSol", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.667247467682506*^9, 3.667247476731036*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"\[Lambda]", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "-", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], 
      FractionBox[
       RowBox[{"\[Mu]", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
       RowBox[{
        RowBox[{"m", " ", "\[Mu]"}], "+", 
        RowBox[{"\[Lambda]", " ", "\[Rho]"}]}]]},
     {
      FractionBox[
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}], " ", "\[Sigma]"}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}], " ", "\[Sigma]"}], 
        RowBox[{
         RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
         RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
        RowBox[{
         RowBox[{"m", " ", "\[Mu]"}], "+", 
         RowBox[{"\[Lambda]", " ", "\[Rho]"}]}]]}]},
     {
      FractionBox[
       RowBox[{"m", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "-", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], 
      FractionBox[
       RowBox[{"\[Mu]", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "-", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "-", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.667247478717534*^9, 3.6672477603497*^9, 
  3.674818858027845*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"R", ",", "H", ",", "F"}], "}"}], "/.", "Sol"}], ")"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
    RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "mu"}], ",", 
    RowBox[{"\[Rho]", "\[Rule]", "rho"}], ",", 
    RowBox[{"\[Sigma]", "\[Rule]", "sigma"}], ",", 
    RowBox[{"m", "\[Rule]", "mr"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6498522805727053`*^9, 3.6498522890383053`*^9}, {
  3.664135508410368*^9, 3.6641355111542177`*^9}, {3.664135766579782*^9, 
  3.664135768490623*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"mu", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "lambda"}], "+", "sigma"}], ")"}]}], 
      RowBox[{
       RowBox[{"lambda", " ", "rho"}], "+", 
       RowBox[{"mu", " ", "sigma"}]}]], ",", 
     FractionBox[
      RowBox[{"alpha", " ", 
       SuperscriptBox["lambda", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"mu", "+", "rho"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mr", " ", "mu"}], "+", 
         RowBox[{"lambda", " ", "rho"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lambda", " ", "rho"}], "+", 
         RowBox[{"mu", " ", "sigma"}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"alpha", " ", "lambda", " ", "mu", " ", 
       RowBox[{"(", 
        RowBox[{"mu", "+", "rho"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mr", " ", "mu"}], "+", 
         RowBox[{"lambda", " ", "rho"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lambda", " ", "rho"}], "+", 
         RowBox[{"mu", " ", "sigma"}]}], ")"}]}]]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.6498522674657173`*^9, 3.64985229001208*^9}, {
   3.650034856214478*^9, 3.650034881223432*^9}, 3.650125499968363*^9, 
   3.664135512245902*^9, 3.6641356537588873`*^9, 3.6641357707485437`*^9, 
   3.674818858085864*^9}]
}, Open  ]],

Cell["\<\
This plot shows that the bifurcation at lambda=sigma is a Transcritical (I \
think)\
\>", "Text",
 CellChangeTimes->{{3.649852619904641*^9, 3.649852633799219*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"R", ",", "H", ",", "F"}], "}"}], "/.", "Sol"}], ")"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
    RowBox[{"\[Rho]", "\[Rule]", "0.2"}], ",", 
    RowBox[{"m", "\[Rule]", "0.2"}], ",", 
    RowBox[{"\[Sigma]", "\[Rule]", "sigma"}]}], "}"}]}]], "Input",
 CellChangeTimes->{3.664136361861033*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"0.2`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.1`"}], "+", "sigma"}], ")"}]}], 
      RowBox[{"0.020000000000000004`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2`", " ", "sigma"}]}]], ",", 
     FractionBox["0.03333333333333334`", 
      RowBox[{"0.020000000000000004`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2`", " ", "sigma"}]}]], ",", 
     FractionBox["0.06666666666666668`", 
      RowBox[{"0.020000000000000004`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2`", " ", "sigma"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6641363422180357`*^9, 3.664136363487423*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Eig", " ", "=", " ", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"JacSpecSol", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
          RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
          RowBox[{"\[Rho]", "\[Rule]", "0.2"}], ",", 
          RowBox[{"m", "\[Rule]", "0.2"}], ",", 
          RowBox[{"\[Sigma]", "\[Rule]", "sigma"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"REig", " ", "=", " ", 
      RowBox[{"Re", "[", "Eig", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"IEig", " ", "=", " ", 
      RowBox[{"Im", "[", "Eig", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MaxEig", " ", "=", " ", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"Max", "[", "REig", "]"}], ",", "0.000001"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              FractionBox[
               RowBox[{"\[Mu]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
                RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], "}"}]}], "}"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
            RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
            RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
            RowBox[{"\[Rho]", "\[Rule]", "0.2"}], ",", 
            RowBox[{"m", "\[Rule]", "0.2"}], ",", 
            RowBox[{"\[Sigma]", "\[Rule]", "sigma"}]}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Large"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"REig", ",", "IEig"}], "}"}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"LightGray", ",", 
              RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
              RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Real part\>\"", ",", "\"\<Imaginary part\>\""}], 
           "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "MaxEig"}]}], "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sigma", ",", "0.5"}], "}"}], ",", "0", ",", "1", ",", 
      "0.001"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.667233261183021*^9, 3.6672333441856613`*^9}, {
   3.667233411539075*^9, 3.6672334819313297`*^9}, {3.6672335175271807`*^9, 
   3.6672335288214607`*^9}, {3.6672426135928373`*^9, 3.667242661821867*^9}, 
   3.667242710307724*^9, {3.6672427411101217`*^9, 3.667242786886365*^9}, {
   3.6672428295931797`*^9, 3.667242869028776*^9}, {3.6672430003482428`*^9, 
   3.667243003767679*^9}, {3.66724398907008*^9, 3.667244105901696*^9}, {
   3.667244188074353*^9, 3.667244235673367*^9}, {3.667244268207528*^9, 
   3.667244274028097*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sigma$$ = 0.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`sigma$$], 0.5}, 0, 1, 0.001}}, Typeset`size$$ = {
    917.30126953125, {236.150390625, 59.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`sigma$3185$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sigma$$ = 0.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`sigma$$, $CellContext`sigma$3185$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`Eig = Eigenvalues[
          
          ReplaceAll[$CellContext`JacSpecSol, {$CellContext`\[Alpha] -> 
            0.5, $CellContext`\[Lambda] -> 0.1, $CellContext`\[Mu] -> 
            0.2, $CellContext`\[Rho] -> 0.2, $CellContext`m -> 
            0.2, $CellContext`\[Sigma] -> $CellContext`sigma$$}]]; \
$CellContext`REig = Re[$CellContext`Eig]; $CellContext`IEig = 
        Im[$CellContext`Eig]; $CellContext`MaxEig = Round[
          Max[$CellContext`REig], 1.*^-6]; {
         ListPlot[
          
          ReplaceAll[{{0, 0}, {
            0, $CellContext`\[Mu] ((-$CellContext`\[Lambda] + $CellContext`\
\[Sigma])/($CellContext`\[Lambda] $CellContext`\[Rho] + $CellContext`\[Mu] \
$CellContext`\[Sigma]))}}, {$CellContext`\[Alpha] -> 
            0.5, $CellContext`\[Lambda] -> 0.1, $CellContext`\[Mu] -> 
            0.2, $CellContext`\[Rho] -> 0.2, $CellContext`m -> 
            0.2, $CellContext`\[Sigma] -> $CellContext`sigma$$}], PlotStyle -> 
          Large, PlotRange -> {{-1, 1}, {-1, 1}}], 
         Show[{
           ListPlot[
            Transpose[{$CellContext`REig, $CellContext`IEig}], 
            PlotRange -> {{-1, 1}, {-1, 1}}], 
           Graphics[{LightGray, 
             Opacity[0.3], 
             Disk[]}]}, ImageSize -> 300, Frame -> True, AspectRatio -> 1, 
          FrameLabel -> {"Real part", "Imaginary part"}, 
          PlotLabel -> $CellContext`MaxEig]}), 
      "Specifications" :> {{{$CellContext`sigma$$, 0.5}, 0, 1, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{963., {190., 195.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.667233362491886*^9, 3.667233483260435*^9, {3.667233518864328*^9, 
   3.6672335291801033`*^9}, {3.6672426517712927`*^9, 3.667242663075879*^9}, 
   3.6672427105875463`*^9, {3.6672427425378733`*^9, 3.667242787752527*^9}, 
   3.6672428298780937`*^9, 3.667243004147485*^9, {3.667244047070491*^9, 
   3.667244106384297*^9}, {3.667244220940179*^9, 3.667244236258086*^9}, 
   3.667244274513391*^9, 3.66724777525231*^9, 3.667318645026835*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\[NoBreak] cannot be \
transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676980064317778*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676980064991561*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.67698006506033*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\({\\(\\(ListPlot[\\(\\(\\(\\(Transpose[\\(\\({\
\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \
\\(\\({\\(\\(-1\\)\\), 1}\\)\\)}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*GraphicsBox[List[GrayLevel[0.85`], Opacity[0.3`], DiskBox[List[0, \
0]]]]}\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(Frame \[Rule] \
True\\)\\), \\(\\(AspectRatio \[Rule] 1\\)\\), \\(\\(FrameLabel \[Rule] \
\\(\\({\\\"Real part\\\", \\\"Imaginary part\\\"}\\)\\)\\)\\), \
\\(\\(PlotLabel \[Rule] \
\\(\\(Round[\\(\\(\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
1.`*^-6\\)\\)]\\)\\)\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6769800651011887`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\[NoBreak] cannot be \
transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.67698070357869*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6769807037283*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6769807038695917`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\({\\(\\(ListPlot[\\(\\(\\(\\(Transpose[\\(\\({\
\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \
\\(\\({\\(\\(-1\\)\\), 1}\\)\\)}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*GraphicsBox[List[GrayLevel[0.85`], Opacity[0.3`], DiskBox[List[0, \
0]]]]}\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(Frame \[Rule] \
True\\)\\), \\(\\(AspectRatio \[Rule] 1\\)\\), \\(\\(FrameLabel \[Rule] \
\\(\\({\\\"Real part\\\", \\\"Imaginary part\\\"}\\)\\)\\)\\), \
\\(\\(PlotLabel \[Rule] \
\\(\\(Round[\\(\\(\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
1.`*^-6\\)\\)]\\)\\)\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676980703894484*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\[NoBreak] cannot be \
transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676988932545829*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676988932672546*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6769889327708*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\({\\(\\(ListPlot[\\(\\(\\(\\(Transpose[\\(\\({\
\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \
\\(\\({\\(\\(-1\\)\\), 1}\\)\\)}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*GraphicsBox[List[GrayLevel[0.85`], Opacity[0.3`], DiskBox[List[0, \
0]]]]}\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(Frame \[Rule] \
True\\)\\), \\(\\(AspectRatio \[Rule] 1\\)\\), \\(\\(FrameLabel \[Rule] \
\\(\\({\\\"Real part\\\", \\\"Imaginary part\\\"}\\)\\)\\)\\), \
\\(\\(PlotLabel \[Rule] \
\\(\\(Round[\\(\\(\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
1.`*^-6\\)\\)]\\)\\)\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676988932796453*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\[NoBreak] cannot be \
transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676988983312726*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676988983545485*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676988983662108*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\({\\(\\(ListPlot[\\(\\(\\(\\(Transpose[\\(\\({\
\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \
\\(\\({\\(\\(-1\\)\\), 1}\\)\\)}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*GraphicsBox[List[GrayLevel[0.85`], Opacity[0.3`], DiskBox[List[0, \
0]]]]}\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(Frame \[Rule] \
True\\)\\), \\(\\(AspectRatio \[Rule] 1\\)\\), \\(\\(FrameLabel \[Rule] \
\\(\\({\\\"Real part\\\", \\\"Imaginary part\\\"}\\)\\)\\)\\), \
\\(\\(PlotLabel \[Rule] \
\\(\\(Round[\\(\\(\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
1.`*^-6\\)\\)]\\)\\)\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676988983693698*^9}]
}, Open  ]],

Cell["\<\
The internal fixed point crosses \[OpenCurlyQuote]0\[CloseCurlyQuote] and \
exchanges stability. This is a classic TransCritical bifurcation!\
\>", "Text",
 CellChangeTimes->{{3.667244136030428*^9, 3.667244161262879*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Eig"], "Input",
 CellChangeTimes->{{3.667242936988305*^9, 3.6672429549678297`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.34896212154102824`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.0073814936709467`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.15172179230143237`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.0073814936709467`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.15172179230143237`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.667242937704525*^9, 3.667242955305634*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Eig", " ", "=", " ", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"JacSpecSol", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
         RowBox[{"\[Rho]", "\[Rule]", "0.2"}], ",", 
         RowBox[{"m", "\[Rule]", "0.2"}], ",", 
         RowBox[{"\[Sigma]", "\[Rule]", "sigma"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"REig", " ", "=", " ", 
     RowBox[{"Re", "[", "Eig", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"IEig", " ", "=", " ", 
     RowBox[{"Im", "[", "Eig", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"REig", ",", "IEig"}], "}"}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"LightGray", ",", 
              RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
              RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Real part\>\"", ",", "\"\<Imaginary part\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FP", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"R", ",", "H", ",", "F"}], "}"}], "/.", "Sol"}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
            RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
            RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
            RowBox[{"\[Rho]", "\[Rule]", "0.2"}], ",", 
            RowBox[{"m", "\[Rule]", "0.2"}], ",", 
            RowBox[{"\[Sigma]", "\[Rule]", "sigma"}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPointPlot3D", "[", 
            RowBox[{"FP", ",", "\[IndentingNewLine]", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "4"}], "]"}], ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}], "]"}]}], 
             ",", 
             RowBox[{"PlotLabel", "\[Rule]", "FP"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\!\(\*SuperscriptBox[\(R\), \(*\)]\)\>\"", ",", 
                "\"\<\!\(\*SuperscriptBox[\(S\), \(*\)]\)\>\"", ",", 
                "\"\<\!\(\*SuperscriptBox[\(F\), \(*\)]\)\>\""}], "}"}]}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
              RowBox[{"Polygon", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigma", ",", "0.1"}], "}"}], ",", "0", ",", "1", ",", 
     "0.001"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649851637240397*^9, 3.649851850415141*^9}, {
   3.649851893272331*^9, 3.649851938695746*^9}, {3.649852202725564*^9, 
   3.6498522482523193`*^9}, {3.6498523075192347`*^9, 3.649852398675373*^9}, {
   3.6498524300737867`*^9, 3.649852531643402*^9}, {3.649852566131813*^9, 
   3.6498525864283524`*^9}, {3.649852656835186*^9, 3.6498526905529823`*^9}, {
   3.649853031191595*^9, 3.649853112024125*^9}, {3.649870564797371*^9, 
   3.6498706648861237`*^9}, {3.649870696987735*^9, 3.649870820868453*^9}, 
   3.64987095170216*^9, {3.6500348911622667`*^9, 3.650034894725707*^9}, {
   3.650035089322117*^9, 3.6500352576861277`*^9}, {3.650035291253294*^9, 
   3.650035322718047*^9}, {3.66413581711614*^9, 3.664135846219429*^9}, 
   3.664136380265555*^9}],

Cell[CellGroupData[{

Cell[BoxData["FP"], "Input",
 CellChangeTimes->{{3.64985254118918*^9, 3.649852541280491*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.16666666666666669`", ",", "0.33333333333333337`"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6498525418317547`*^9}]
}, Open  ]],

Cell["Specific Bifurcations", "Text",
 CellChangeTimes->{{3.636735249182033*^9, 3.6367352528544283`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Sigma]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Mu]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Alpha]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Rho]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Lambda]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.639916661498138*^9, 3.639916737347307*^9}, {
  3.639916927000423*^9, 3.639916930351451*^9}, {3.639917059900681*^9, 
  3.639917061445949*^9}, {3.639917271531619*^9, 3.639917273202471*^9}, {
  3.639917355594678*^9, 3.6399173562835493`*^9}, {3.639917760808323*^9, 
  3.639917762454817*^9}, {3.63991860916257*^9, 3.6399186110231857`*^9}, {
  3.6463403665580263`*^9, 3.6463403774819403`*^9}, {3.646406263215164*^9, 
  3.6464063123309517`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Sigma]", "\[Rule]", "\[Lambda]"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.664135962610614*^9, 
   3.667242698009782*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{"-", "\[Rho]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.664135962610614*^9, 
   3.6672426980242767`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Alpha]", "\[Rule]", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.664135962610614*^9, 
   3.667242698053769*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Rho]", "\[Rule]", 
    RowBox[{"-", "\[Mu]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.664135962610614*^9, 
   3.667242698058466*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "\[Sigma]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.664135962610614*^9, 
   3.667242698062965*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SylvesterMatrix", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "Jac", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dim", " ", "=", " ", 
       RowBox[{"Length", "[", "Jac", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Mat", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Dim", "-", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Dim", "-", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Col1", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[DoubledPi]", ",", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Dim", "-", "1"}], ")"}], "*", "2"}], ",", "2"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Mat", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "=", " ", "Col1"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Mat", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[DoubledPi]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Mat", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "-", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "2", ",", 
          RowBox[{"Dim", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Dim", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Todel", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "Mat", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<", "0"}], "||", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", 
            RowBox[{"(", "Dim", ")"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Mat", "=", 
       RowBox[{"Mat", "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Todel", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "Todel", "]"}], ",", "1"}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"CPG", " ", "=", " ", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"CharacteristicPolynomial", "[", 
         RowBox[{"Jac", ",", "\[Lambda]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CPGL", " ", "=", " ", 
       RowBox[{"CoefficientList", "[", 
        RowBox[{"CPG", ",", "\[Lambda]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Mat2", " ", "=", " ", 
       RowBox[{"Mat", "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[DoubledPi]", ",", "i"}], "]"}], "\[Rule]", " ", 
           RowBox[{"CPGL", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "CPGL", "]"}], "-", "1"}], ")"}], ",", 
            "1"}], "}"}]}], "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 Background->RGBColor[1, 0.925, 0.925]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sylv", "=", 
   RowBox[{"SylvesterMatrix", "[", "JacSpecSol", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HopfSol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Det", "[", "Sylv", "]"}], "\[Equal]", "0"}], ",", "muy"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.636736436134536*^9, 3.636736500049109*^9, {3.6367367219487257`*^9, 
   3.636736738826749*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.636736677937512*^9, {3.6367367334010353`*^9, 3.636736755454893*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CPG", " ", "=", " ", 
   RowBox[{"CharacteristicPolynomial", "[", 
    RowBox[{"JacSpecSol", ",", "L"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CPGL", " ", "=", " ", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"CPG", ",", "L"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.63673694172998*^9, 3.6367370423808413`*^9}, 
   3.636737084247136*^9, 3.63673732646585*^9, 3.636737388095427*^9, {
   3.636822176583478*^9, 3.636822178990656*^9}, {3.646399699282878*^9, 
   3.646399702476984*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sylv", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}]}], " ", 
  ";"}]], "Input",
 CellChangeTimes->{{3.6367370874757833`*^9, 3.636737102643981*^9}, {
  3.636737292648432*^9, 3.636737383415155*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HopfAnalytic", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Det", "[", "Sylv", "]"}], "\[Equal]", "0"}], ",", "\[Rho]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639918749090508*^9, 3.639918773681662*^9}, {
   3.646399710646468*^9, 3.64639971556273*^9}, 3.646400755370916*^9, 
   3.646400812843563*^9, {3.650040941506727*^9, 3.650040944197229*^9}, {
   3.664136569643469*^9, 3.66413657049122*^9}}],

Cell[CellGroupData[{

Cell[BoxData["HopfAnalytic"], "Input",
 CellChangeTimes->{{3.650041464139906*^9, 3.650041465288834*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TemplateBox[{"1"},
          "OutputSizeLimit`Skeleton",
          DisplayFunction->(FrameBox[
            RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
            Background -> GrayLevel[0.75], 
            BaseStyle -> {
             "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
              ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
            ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
            GrayLevel[0.75], RoundingRadius -> 7]& )],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 23, 19149734377573433858, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 23, 19149734377573433858, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 23, 19149734377573433858, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[23]]], "Output",
 CellChangeTimes->{3.6748188957717457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "HopfAnalytic", "]"}]], "Input",
 CellChangeTimes->{{3.650040946376001*^9, 3.6500409510612993`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6500414333491173`*^9, 3.674818904781753*^9}]
}, Open  ]],

Cell["\<\
The solution to the Hopf Bifurcation surface may not be analytically \
tractable
Try Solving numerically with a = 1\
\>", "Text",
 CellChangeTimes->{{3.636737525783757*^9, 3.636737558522097*^9}, {
  3.636744978724807*^9, 3.636744979061075*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hsp", " ", "=", " ", 
   RowBox[{"HopfAnalytic", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.1"}], ",", 
      RowBox[{"m", "\[Rule]", "MR"}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", "0.2"}]}], "}"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
     RowBox[{"m", "\[Rule]", "MR"}], ",", 
     RowBox[{"\[Lambda]", "\[Rule]", "0.2"}]}], "}"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"curves", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "/.", 
      RowBox[{"Hsp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"MR", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.646400690908239*^9, 3.646400783799788*^9}, {
   3.6464008170780478`*^9, 3.646400863708932*^9}, {3.646401262660769*^9, 
   3.646401282964713*^9}, {3.646401386010373*^9, 3.64640140294523*^9}, {
   3.6464017110996943`*^9, 3.646401716799921*^9}, {3.6464023986360826`*^9, 
   3.64640241015652*^9}, {3.664136001494297*^9, 3.664136035267358*^9}, {
   3.664223497434146*^9, 3.664223559964218*^9}, 3.6642236006052637`*^9, {
   3.664223893420742*^9, 3.6642239673211107`*^9}, 3.664224005976799*^9, {
   3.664224036714096*^9, 3.664224067547892*^9}, {3.66422411270894*^9, 
   3.664224120132173*^9}, {3.664224199426642*^9, 3.664224238710062*^9}, {
   3.6663727625552597`*^9, 3.666372799615531*^9}, {3.666372853684032*^9, 
   3.666372856089883*^9}, 3.666373288897025*^9, 3.666373789405501*^9, 
   3.666373903434442*^9, 3.666373954974207*^9, 3.666374012665082*^9, {
   3.666374057564727*^9, 3.6663740583727922`*^9}, 3.666374093058712*^9, 
   3.6663741303054953`*^9, 3.6663742168426123`*^9, {3.666381864382494*^9, 
   3.666381887320348*^9}, {3.666381936514955*^9, 3.666381967083099*^9}, {
   3.666382165268211*^9, 3.666382168100629*^9}, 3.669660800346294*^9, {
   3.669661526673798*^9, 3.669661526723531*^9}, {3.669661572010537*^9, 
   3.669661572118034*^9}, 3.669661622327856*^9, {3.669661657338397*^9, 
   3.669661661579398*^9}, 3.669661696781642*^9, 3.674828464346685*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HopfPlot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{"curves", ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Starvation rate \[Sigma]\>\"", ",", 
          "\"\<Recovery rate \[Rho]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<DeepSeaColors\>\"", "]"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{"Length", "@", "curves"}]}], "]"}], "/", 
           RowBox[{"Length", "@", "curves"}]}], ")"}]}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"SwatchLegend", "[", " ", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"MR", ",", 
            RowBox[{"{", 
             RowBox[{"MR", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}],
           ",", 
          RowBox[{"LegendLayout", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<ReversedColumn\>\"", ",", "1"}], "}"}]}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<b\>\"", ",", "Italic"}], "]"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Hopf Bifurcations\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RegionFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"x", ">", "0.2"}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6642242665209837`*^9, 3.664224276907671*^9}, {
   3.664224343920782*^9, 3.6642243482177362`*^9}, {3.6642246222792473`*^9, 
   3.664224624248412*^9}, {3.664224825103345*^9, 3.664224834878428*^9}, 
   3.664224866848115*^9, {3.66422495987202*^9, 3.664224968548967*^9}, {
   3.664225007852799*^9, 3.6642250130912867`*^9}, {3.6642251130620117`*^9, 
   3.664225125447866*^9}, {3.664225202409466*^9, 3.6642252068497334`*^9}, {
   3.664225244105321*^9, 3.6642252477244463`*^9}, {3.664300220511352*^9, 
   3.664300262922666*^9}, {3.6643005226985683`*^9, 3.664300522926591*^9}, {
   3.6643005682176933`*^9, 3.66430056846682*^9}, 3.664300854534204*^9, 
   3.664306495253357*^9, {3.6643073075126553`*^9, 3.66430730969363*^9}, {
   3.664307401496554*^9, 3.6643074113051023`*^9}, {3.666449066286664*^9, 
   3.6664491518025293`*^9}, {3.669660872865423*^9, 3.669660893523471*^9}, {
   3.669661039470377*^9, 3.669661049806254*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.16791, 0., 0.301671]], 
        LineBox[CompressedData["
1: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
xucf10y1wLc57WOFPgvvuRY+E6upMHc78EJ8OwuRVkuj0pWpCPyz9sUxExYc
DEs77DWoOJOxcqfQlAX5405bI7WocJl3UBQ8YOHClNON0ndUWP7Q22T3dKH/
Uid6RAEVy4u2ZWsmsnB6H01Cp4aKOz38PyLesOCSWHLjcAsVNttOjBplsdBn
H06d6aXC1Di7eu49C/6avgUXB6mwWN4uTi5kQeNl6chqARWuqlFnL31ioZl0
LK1xnIoo+vjIoeqF/EmjrtdLaIiJ1L9f1sSCdvgWz0BFGkhmepsGqCxMG5TX
pKnQkDh2QDSlg4XDt+iWwetpiHiTQ7jcxUJE74z1+o00fAv7fFmFw8LiYFmm
qAkNiyZNN4wMsjBpS9t3wJwGU0eTsIkpFoaOiwxnH6NBY2LuYalRP0R4cio5
RBrEAvJv3DLuh3BlVs7LWhp+fQxc3GfZD8N3SY/oHBrc5AhXyyf7QXZhSduI
tmHJtpsfq6f7kWJ4uOPj4ja0WSfISsz145VguCBCog15CveSViuy8cy3qtPd
uA21pioSpGg2pN8kX/OUaYeo5ao1iqocGHjWOxdPtONtrpj/8z0cmLqnE+23
d8DcUHxn4T4ORD5Ti6d2dKDh8mSy1gMOihn+jxm5HYCf8dGwKg4ijhNucqXp
kN893rCqmoOuN57uL5fToWp9VvlALQfv9S5IusvRUTHqX6xaz0H61NVRgiId
PmdpK+qoHLyl/Mqt1aIjtcikX6eVAysbbpa2Dh3pvq6LlvZwkKLr6J64g45A
S97dFwwOGiSOqZQQ6FhLTO3VH+LgHuOfieBDdNwqil+l+Z2DysYTdkMn6Jgc
e1ifcnsAp/XcGtac7IR3+UxDjBwXErqhxCG7LvhlbFQM0ODiT53seUO/Lugc
5G0QW8+FDPm/4s3+XYjVXqymqs8FN9Jhci6yC38u9l1T2sSFmJ9k4feEbiwp
CRh6QeXC5F3p9cnX3fB+HlEgP8TFUpnFx1rrulFSlPghm89F66GqQp3GbtTN
qD+odh9EV2Khks3LHlyvOn+h49QgPMUOd0+97oHZ+74P9lcW4gPz+9UaevDb
TCnxetgg/rYdPfmJusChlWaXbwziJSnO1bC9B6H92t4f7w6ic+7EORqnB5Qx
vfRp4iB8KW9V11v1ovXlpeTx5UOYXaajw6P2QpykcF1VYwiUYlHbvMleVJgx
Kn6uH4JlpKf1otleVFmeXmymNQQ9UQ5T/HcvCqOUnkhuGYLtRSfxUak+CO0q
/hOrHkJVbWFSnxwDEoe9fx4cH4L9f1ri6f8wwHsSUvVDlIdANvfJRDgDwfTc
X1Dn4fStvFvvPjPQtz0oT0+TB78Eu2oBkQH2/p4c/408nCv5ufIZmQEzZ7Wn
bzfz0Bc5Xz/QyoBXRL98lREP2gNRaX5sBqIzt+5ac5iH5K6fV2qWMHGKsDuj
YoED3Cr/chRnIs+iWVXrCA+ybb0z1ySYkFN3DiA78rD9UkiBvwwTF3S+1Vxy
4WH5YI2enzwTdGqW+rozPCjE6ySfVVrol3PtYL7fwjw/xsqz1zMRuWHXtmtX
eThl8I+79RYmpCIiI++N8jAs8zHvdwwTd9hta3myw5CKCydMFzGxwlbV2d1m
GO6/zS4mf2PihG2SSa3LMCT0jdwz55gQG9z3tcdjGMcUT6u4Lng1LkQDxleH
IZKr7kpYzYJi84sa2aphzN/YmBrjwEL+8vBM1T/42C0PFUYsC49Edh35uoYP
P/mxAWEGC8XfTaUTtPjw3m2Vxsxnwd5AzshLnw/pTb+dKKUsRB2nkGcM+Fin
/YppVM7CJce2p32GfEQIZls6v7AwVld2KmEHHxrtg+d8Kln4YHcmdyWBjy+r
jr7xrGVB3EgusnEXH5KTmtoN9SwUbKp5qubJh3MuX6NrmIWbQS282n/58HDr
WN34nYVTpNTT9/35WGZ9JlNrkoWg1dVy9wP42KbSaC674L1bkeZN24L4C//S
hs0x0wveH+70lAzhozCwdb3uHAsSF04P0JL4uKIbonVHtR+KbZWWMRl8dLGa
bvlr9aO7VtxGpYAPfdg3rN+64MFfuy+afOCD+ihyi7xBP5Z1fRpbvFwAd/2/
//7rdj9mjB8atDoIsP+TMP+P2n6U6ro3cQIEyNofk/aK1Y83dIvEoSQBwmtF
R39LsjF6eeJ2VbIA0bm9rgnSbDgUfMjaWyBAY9KMdaUyG2z/U41PCgVY6xsv
9v0vNtT4BInkYgGqN3nrVaqy8c/M2SM3PwqwM8+v4fFaNoKfTa+3LhXAk0K2
W6vOhu9ztYrQMgEiZNu36GuwsaS9psF1TAB58c2rmx3YKBh+Py43KYDCR9vh
Hc5s6CXEuu+cF4DQpaub6s6G8zMfN7LiCM7XfrHSC2XDzet5bZn2CKQUfm2s
i2QjYovpr0SMYGv56WB+Ahuv/KzDw46M4Am92s09e6Ge/7bewXYELlqNyZo5
bNSKJFDb7EaQGXZzY2QuG28n6VFeLiMIbq8i7v3EhuDypb0/zo1g9EZ74AiR
DZ/lXfly90cQ4T1seLufjXwm8cSqnhGso6tsd9TlIJH7lVjBGEGlI6evZAsH
j78Pdd35NYLID1ubdlpxsO37RYfXC9y19a2j3QJvODnjkmH+DS+Pn9/je4+D
KV5BnUf8N1QR1BJv9HFASMvP35r5DVrBJ75sGFmIX++SyzQQQqCwPEvUewBf
3HJvy1gJse2gBTsrfAAmi//s5h8WYpiAG44L3v9ZN3SQekQIzo2IV8siB9AV
lPJz+1EhDLb2lq19sJBvPXT4Pw8hwgt1JZNjBjA8msdeFirEYy4370nWAHTM
T5otTRXirFd72ZX2AWjmKi3qSBeif7kBUblzAFLEzcaGmUJ8fOTIPNI9gEhG
vajleyHSPfJO/WIOQPzjgfO3y4S4oDVODeIPgLV5W+wimhDkxiXffEW4ON/q
kLGvTQjPIRu9h2Jc0P/I1UihC7E0ds2SvCVcCB9MKVH7hCAMTssGSXEhOfx+
UR9PiK90l7XVq7i45tDz4IhACDXprJY/FLlINZm/oiEUwtnpWlSeEhch/30m
Vv4QQitETO+bKhdvqNSUJ1NC7OY0Eh6qcWFuveS826wQVvR9m3UX9l5p3a8V
fT+F2HRZeOn6Bi5uBr9Onp8Xop410u69kYv/ASOouwk=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.22307159999999998`, 0.02430488, 0.42178180000000004`]], 
        LineBox[CompressedData["
1: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
sb83mpVxMP26znHNcybc45Qq/T5z+P8SeXLfCyZEemtbLvzkYPnpBAOXNiYI
YwWTkr84uDknXreqiwmNxOd2+xY4uGqY8k+mnwmb2OsXm6S5aIl0JllMM3HR
Ja7uszoXHSnSAeKifF9v1/2bBC5o2UOyKXIsvL5hFhJszoWGGvftwf9YsGG/
abSy4MI9pm6djAYLdQKJnT2WXFQIRgrF8XP45ldfvIstF4anPYqEdVjgBPgf
nLrCxaap5HeXDrJwfQW5UPIBFwPn0pdIO7NQSK0+t6afC+18hbXiJSwkjTZU
Vw5y0dZquy37IwuPfzDJ9/5yEc1IdpMgsaD546ZVCp/DVn6N3chn1fOzttkG
4xBwHeo4ITOGGRah3v7lOIYVrzkPeoxBP7OwcEfOOAzvJhj6h/Drt8mSObt4
cE0IPqsjxsaXi3nhy4/yEEm5+eO4It+3wjIU9nEeIszDZJRV2JivZx7pNOch
R/ilvoAqG2TvtPndp3iQUNhDt9rC7zdjHn9iz8NM9dqC+1psjE3kD4v78TCH
0oiyY2xsMTivtziDh8pywT41fzY25ckKkbJ46K09Q+DdYmNp9TbtPTn8etlT
x8PBbEQMNi4yLeBh7I030zicDdFS46vhn3nI6j5ffyGaDdo2zedCXTzo1naM
JGSwcbXbKvtQDw8h57S6OrP4uVyWp5LWx8Ovp8QilXds8KJmZDsHeNBePvyf
QSE/N2MFQgMsvr5e6TH1cjaCrPqjzDl8PVfbDfFf2MjQWbilwuPh/cuHGheq
2PB9UlH9dYqHd6bprWP1bKR3dqZFz/Bgf/YLJZ/IhoGZyNWLczxQPw203Gxh
o6z+78qBeR4KQ11SuG1shPqkpC4s8CAt88JWpIuN/wOAO/oo
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.27823319999999996`, 0.04860976, 0.5418926000000001]], 
        LineBox[CompressedData["
1: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
Vo2Ocmb5yN4uXZJ2lA+h/3/j+B/Q4xA5
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2917374, 0.11413976, 0.6482166]], 
        LineBox[CompressedData["
1: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
PyuBT94=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2635842, 0.22089488000000002`, 0.7407538]], 
        LineBox[CompressedData["
1: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
5z8j8v8Yx38BvGijUw==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.235431, 0.32765, 0.833291]], 
        LineBox[CompressedData["
1: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
ScQv
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2541886, 0.4613372, 0.8892074]], 
        LineBox[CompressedData["
1:eJwdiQ80E3gAx1d0G9aSqKg7/ZN453XaHSWvb8RLLKKueMLqjQuhhfKnFflT
53rldE/l0iF11eKmErbJ39vy4/rDZNmazZx1ps1dlxwe5+773ud93ud9Vx9O
ComeT6FQAub4z6xoUULRtQ4MTBZtp4Y9QvvNtZmbPyOI6TnkvSezAZ0feJ6v
7Am4wmUte79rwNUNEZRIB4KXTi2FMy0N0G8LXdi/nuAZ75j91PMGNOvWGmuc
CKLS7gvaRxowkZd7iPo5wVXzEk4LRQhxso8aGwkel2W62NoL0TR2eSHdnUBO
NfNhHhGC+mc84+lcW9exm22ShKi/YF8SsZUg0m65c1ahEMf+ymf6ehHQw6t6
s6VC7PfvvspnEUhDrG1LXUUoYq/P1s916ZbTo0amCDPfKA05+whGnQIXPEwX
4fW4n/H6foKMb8vw8YII5goH6lAkwUExZ5NBLoKgwUKRFkUwbZUv3aES4Vmr
ZdpHNoHbryRzUi/CV6to1xdxCPyYvL5ImhhUoXrKM4ZglWzaOmylGK4fOGzf
OAJ/+zMDYV5iVBwPIlnJBAvXuvkvKhYjOuuszuEkwWyFt1tMnRiVNNPXYRkE
i03pJmYyMdZsmW/nyiNof7FzZdI7MVjNrY6xUgL2upzg2dwmvFc276mL7UTt
jY5PNCdaMdFR3EKP7UK3+qzliRgJhp5yHgT/0oVsafvuoEwpUuOSfvZ50IW0
9hLL23lSTIzVRAlJF36IcOHHKKRwkSrrJc7PcR9mVrxlLyDbvtdw1/ACvZx7
m0/tkOGoeXx37xfd6NdyGmmkD53yA42Miz2YlbIWsIMUoDmeP3Dlpgy7T97M
sR55g0mr0sDU1zKUlAtSMuNV4Ku5+5KHZGDNo3O1eSo8sTA3Taf3Irxv35IL
ahUOenaV1wX3Yn0qPyKANwDPXZfGH657hfjI5HpulRrqmcuyI2f6MF198rF8
9SBqnVm9Jm1ynHOozilM0EJwbSD95ep+WA7N2iRIhnC8pqfNJ1mB6rfpKwoX
DONijmSsIEOBu9GTGxPpwwg99aGMxlPAOz8jqZYxjEinxZ6SXAXkMhtFh80w
lmS9XDNQoUTZNd8rqSt08Pi0h0uESiRWce32u+owzSWbYhuVkI89Tqli6uDH
KOsZb1fC3CDvZ3voYNdYuTzc/Q0e+M7YKn/SwcInP6RmmQo7VSnN6pi32HYn
2CgNH8DS4fr33NN/oO9wGGWKpUa3wp/pVzACxiOv9+WhagRYO3unlY7g4Nfb
4wrC1Dj9Zd6ijzfmfn6f1eJRNXbpHLb+fUmPAjE/r3tSjYuFrglud/TIvlxu
UkHVQJUkCHol1sN/VlKmcdeAbrZxM898FJWK1pTEUg1C02rYg1WjiPpt05pD
FRpw5t0/KqgdxT/eTxxMAwbh8bumr6bpHZbeuzNyIGQQ1YUW39M634Fv2yRY
NTAIq1K7bk2lAYFTFHcv/SCOVrQ03qozILHNOVk5Pgi73ffOlHQY0KMILGaY
aDGjddQ6Kg0Ij/MeazinRc3Ou28mbhmx68fctj3ntVgeMsRS3TaCee7KKKNY
i6INHiskIiOcXZjKsjYtKP9vDP8CAvhdCA==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2729462, 0.5950244, 0.9451238]], 
        LineBox[CompressedData["
1:eJwdxw0w23cAxnHHbbaiLXpl1U1bkQ4zZkr12EOaUcdpqNezsbrQxrtYab13
bd1111k7q43SKuuwzQhDZ/l7zYIfoyTMSyR/r5fIBTu0uirTPXffe+5zNCop
IFpbS0vLfbdXX1DyIq+iuA8Hbagypm0zzA1T7n1/jGBi36PNUS0hLscUXg1h
ELxTk+w5YSyEqD/4qT+TwGHg7o6zlRAPbH2/jd91zb7g077WQiTfCJyBHUHu
AZ9DizeEMOh+N4H/IUGWwMyXJRDCkrOmeeZCEJG68+T2uhDT/Afbr5x3PiDr
zq6XbFjxYjeCNaeE0XIzCtUt2febQOAzK4zNsKNg9KQ9ediDgBs2ZHn4YwoB
0jbum2yCNMrwgjycgtOt4sFPPQn2i83LRKkUnqsKefbeBG89Mgj9/TaFKjDz
43wIzqyv7dyrotB1oOF8vy/BxZWQK01NFBLbZuVJfgRHYkx0uGIKpR3sRBaH
4HCk2eeL4xQGebU9uQEEVo8Nve+sUIgeySGDEQR1zvzLjPg2KPk6C7V8gt9+
sWtlnWjHc8FpY1YawXbO/aDMsHb4dnQd5/UQJPLnyi3cOrEm6+C08PrBS97a
5p4SYbOvqFOfNwBP468KNu72Yr6X2+BfN4BIxyaXzN4+XIpNqmI3DMDKTxK7
KunD5qogspUMIGqps2XTgcC2R/ZYbD2EWPqIblnzMKTu55Zrlp/AemPPZ82B
Y4jfEzcyaj+C5HZWpq7LJPrHQ6i9BRLwFE38PlM5eo97tbykpYgxSbPtIDRM
d9iVQXNSKJOMPhr7i0Z4fr1ofl4K1oQ7PTdE4xDHtSgofxQZFm6vF3w3A1fv
r582MsYQ7JJ9PS58FvR2ofRi7t9476pNuvY/c1jwHqo82D0OsW0g72TYAuqL
FVeGj07iJ6felJjBRfAFkm526hSWiZG6n6lEwTXx6pcZUyhSF807vq9EaNZG
+RvZUxBIncqr7ZWIsDJ0FV+fgqynxsvrpBLGecPHFBUyMKN/tlP6q3DqbUkK
aZUht14xkcpTYSuFOPAoGcYNrtU+i1PhzN5yyVORDJ5/TLtbpapwiPrBNNx5
Gh4FTJ4ZrYIeOz9AYCJHQwO3pLtpCa2WNQnJq3K4f7N1VDtHDalxkaPIQwGV
ydU/GX1qyDi6lxjBClgNN9LPptTI2r+gP/OJAtyELusPZtUYjmWfU/nRKE1n
8se0NZBjZNPiLI0vfpSEuulooB9cnfWQQyPzwpGOydc0CIuu63WMonEiVGz9
K0MDM0sL76kBGiLzYw+FCg2aX9z0LpHTKLnt3yjb1sAt7ezL7n93bbK27mG/
jNmKW5UWpTMo1at2rmOvIF3HRqPWm4XW/1vFf11WC8Y=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.3802722, 0.7144184, 0.9782062]], 
        LineBox[CompressedData["
1:eJwdhw1Qy30Ax5emXNTlSXQR13O6LqGQd+ebzENneVahyMvQ2LwmRB7Ec/dE
OK509dRVj65kxay83Ar9+6vR+i2VbWr03/rbVspq4zAPNy/xufvc5z6B2w/E
iUZwOJzwYX+2INfDvbSgBYv4dFp2nwIVZcpv/kEEp+d6CsVJFDyGNrV9Gf45
AuFMvoiCXt4XRoUQuBsCZhkvU1AuC1DpQwnungkYqLpOod+VWyMJJ+DL8rsW
d1Oofq11Y2cTtBqKs50OCl8S3RojIgi2aAJTPo9swOJdlqbkhQROk1KxI7IB
HdO4WbdiCAZ9hA3SsTSKaN7+KAFBDu9jsXkKjTaJrDkjjqD4Abc2cjoNkeYU
adtC4GuvTJ+TQqM/1bVXlkrwImZbWJ+Bxuea5T5RaQSuWwP019/R4NONwZJm
Asrnf2FHRSPeM7RAIVFDtTSkO9X6GJbNRZ4J8lYYbzbfN3JaMaOZqX0yrR1/
biyafixaC11kvK3S1oFY76XLnQl67PXYo3kersHjrCu1+f8yUOsT6r0uafFo
wdrYQjELVfBKxVdWh7PU19+PxZjg951Xts6sQ7YibLNGYEJSZrXSYtHBJb0i
0TPeBH/Bkrx1mc9hPNSkXRNqxpLoy447Uzvh5bdNl/rdDPbbFZ04owu0xfvQ
X/d60RvdXja+SY8Kzo2cfQtfo7qgJ/1Z4Etw3ZLkf5B+XDvnmhVyvBurSnae
bYl6gw/vj/KeljMoLz0/w+WkFeXcl6uHbjNIPPVJa7hgRVqrzVNUx0CoE324
kWPFxx0b3+x8wCCjS1GiyrXCeZDMltQzOC176NTkWbHK66rWoWQwLtkyIqPE
Cv/6cr+k+QaM6mSL5b8NYjQvM65mghEDfuaSi45B3A+q3Jfy1ghhbb5aqh6C
zicvQrmsBwN/+674b6INjMD9yNT1PXBMKnSRhtlwwrt3zKtNPciq5letnGeD
NDgoePIaFjfrDrSLd9nxbDcvfmD4Y+uS1SaxHWPWS0+UClgUVoXIfPfasUEk
V0VsZ/GPyKVFedGOw52Tc0OvsuD84i1+APVTjoA=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5761666, 0.8195192, 0.9884546]], 
        LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAobQ7RoWZyT8mZ7oGVIi5P0TUc9Zq
Jco/jLaJLDVCwD+gJTxfcijKP5DpiIq5VMA/cIVU4T8vyj/UNfJQTn7AP4yF
k+YcOco/p1NId1S6wD+eUF4fnEjKP5vQX4QJGME/Yo5M/SZLyj8K3yIwaSfB
P9AqBImuTco/G/HQxrQ2wT92/X5Tw17KP+7OZjuynME/mE7bNxZkyj+H3Dbp
e7zBP/a/FVVhbco/n1FJV/nzwT/5sUMTQnbKP+gnwKP7KMI/TMDCJ2nHyj+i
Bi/oMwLEP/PcwFC3acs/RCjI2gONxz9AFr2iU67MP4ueeL4UI84/LcfcuMYq
zz/uY294NNLUP9RAU+6p7tA/fzjnhNVP2j9sCmvS1TDSPxYnlfKU694/y9hX
vQ6O0z8AATKb6b3hP1NGWOHk5NQ/Ffev37fO4z82oItXoCTWP4ZUyMlSm+U/
4P6T1Gh/1z/KT5dzT3HnP+VJz6MWw9g/eco2T3EQ6T+wmd950SHaP5nmP49f
vOo/pYgDiSl62z/1d0sUZk3sP/Tzd0TNpNw/0kKCxmCb7T+kBNpL7bLcP6jA
lbUsq+0/dszuDWW53D/+lRJnaLLtP/VjWupmu9w/8KpbEqe07T/8ccoyab3c
P71ZLzLRtu0/SA6g0/bE3D8C0zif9L7tPxq9pBhbN90/qu4/iTU67j8LRIZS
sRfeP7hh1t3sK+8/SWhvJGjj3j8AAAAAAADwP3Z3F0s=
         "]]}}}, {
      Dashing[{Small, Small}], 
      LineBox[{{0.2, 0}, {0.2, 1}}]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Recovery rate \[Rho]\"", TraditionalForm], None}, {
        FormBox["\"Starvation rate \[Sigma]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Hopf Bifurcations\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "0.1`", "0.2`", "0.30000000000000004`", "0.4`", "0.5`", "0.6`", 
       "0.7000000000000001`", "0.8`", "0.9`", "1.`"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
                StyleBox["\"b\"", Italic, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5761666, 0.8195192, 0.9884546]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3802722, 0.7144184, 0.9782062]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2729462, 0.5950244, 0.9451238]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2541886, 0.4613372, 0.8892074]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.235431, 0.32765, 0.833291]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2635842, 0.22089488000000002`, 0.7407538]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2917374, 0.11413976, 0.6482166]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.27823319999999996`, 0.04860976, 0.5418926000000001]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.22307159999999998`, 0.02430488, 0.42178180000000004`]], 
                    
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.16791, 0., 0.301671]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.16791, 0., 0.301671], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11194000000000001`, 0., 0.20111400000000001`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0.16791, 0., 0.301671]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.16791, 0., 0.301671]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.16791, 0., 0.301671], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.22307159999999998`, 0.02430488, 0.42178180000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.1487144, 0.016203253333333334`, 0.28118786666666673`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.22307159999999998, 0.02430488, \
0.42178180000000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.22307159999999998`, 0.02430488, 0.42178180000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.22307159999999998`, 0.02430488, 0.42178180000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27823319999999996`, 0.04860976, 0.5418926000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.18548879999999998`, 0.03240650666666667, 
                    0.3612617333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.27823319999999996, 0.04860976, \
0.5418926000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27823319999999996`, 0.04860976, 0.5418926000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.27823319999999996`, 0.04860976, 0.5418926000000001], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2917374, 0.11413976, 0.6482166], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.1944916, 0.07609317333333335, 0.43214440000000004`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2917374, 0.11413976, 0.6482166]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2917374, 0.11413976, 0.6482166]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2917374, 0.11413976, 0.6482166], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2635842, 0.22089488000000002`, 0.7407538], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.1757228, 0.14726325333333334`, 0.4938358666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2635842, 0.22089488000000002, 0.7407538]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2635842, 0.22089488000000002`, 0.7407538]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2635842, 0.22089488000000002`, 0.7407538], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.235431, 0.32765, 0.833291], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.156954, 0.21843333333333334`, 0.5555273333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.235431, 0.32765, 0.833291]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.235431, 0.32765, 0.833291]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.235431, 0.32765, 0.833291], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2541886, 0.4613372, 0.8892074], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.16945906666666666`, 0.30755813333333337`, 
                    0.5928049333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2541886, 0.4613372, 0.8892074]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2541886, 0.4613372, 0.8892074]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2541886, 0.4613372, 0.8892074], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2729462, 0.5950244, 0.9451238], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.18196413333333336`, 0.3966829333333334, 
                    0.6300825333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2729462, 0.5950244, 0.9451238]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2729462, 0.5950244, 0.9451238]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2729462, 0.5950244, 0.9451238], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3802722, 0.7144184, 0.9782062], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.25351480000000004`, 0.4762789333333334, 
                    0.6521374666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.3802722, 0.7144184, 0.9782062]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3802722, 0.7144184, 0.9782062]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3802722, 0.7144184, 0.9782062], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5761666, 0.8195192, 0.9884546], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.38411106666666667`, 0.5463461333333334, 
                    0.6589697333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.5761666, 0.8195192, 0.9884546]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5761666, 0.8195192, 0.9884546]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5761666, 0.8195192, 0.9884546], Editable -> 
                    False, Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", 
             StyleBox["\"b\"", Italic, StripOnInput -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"ReversedColumn\"", ",", "1"}], "}"}]}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.664224260720883*^9, 3.6642242957167187`*^9, 3.664224367695649*^9, 
   3.664224643594948*^9, 3.6642248538465643`*^9, 3.6642248858431396`*^9, 
   3.664224986448703*^9, 3.664225030606587*^9, 3.664225143855473*^9, 
   3.664225226122547*^9, 3.664225265673161*^9, 3.664300253435184*^9, 
   3.664300284842554*^9, 3.664300551857348*^9, {3.6643008505197887`*^9, 
   3.664300872887126*^9}, 3.664306513747014*^9, 3.664307328950172*^9, 
   3.664307437563324*^9, 3.666372751552997*^9, 3.666372788693902*^9, 
   3.666372827690732*^9, 3.666372879685793*^9, 3.666373311648203*^9, 
   3.6663738093457823`*^9, 3.666373929949905*^9, 3.6663739902634287`*^9, 
   3.666374043594467*^9, 3.6663740816838493`*^9, 3.6663741155832443`*^9, 
   3.666374150976224*^9, 3.666374237396452*^9, {3.666381882319332*^9, 
   3.666381907235281*^9}, {3.666381962466902*^9, 3.6663819869782457`*^9}, 
   3.666382200407227*^9, 3.666449044464583*^9, 3.666449129950738*^9, 
   3.666449172175006*^9, 3.66966079251643*^9, 3.6696608232078733`*^9, 
   3.669660901248231*^9, 3.6696609738408823`*^9, 3.6696610793817883`*^9, 
   3.6696615564530277`*^9, 3.66966159702332*^9, 3.669661651539982*^9, 
   3.6696616915299997`*^9, 3.66966172181219*^9, 3.674818931002445*^9, 
   3.674828494782249*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/Manuscript/fig_HopfPlotb.pdf\>\"", ",", "HopfPlot", ",", 
   "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6643073374916687`*^9, 3.664307380737729*^9}, {
  3.6696611108126993`*^9, 3.669661122320026*^9}, {3.669661158725421*^9, 
  3.6696611619865026`*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/Manuscript/fig_HopfPlotb.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.6643073868195267`*^9, 3.6643074380416727`*^9, 3.666373868286346*^9, 
   3.66638301256199*^9, 3.6664491830535707`*^9, {3.6696611018946877`*^9, 
   3.669661127118389*^9}, 3.669661163783815*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorData", "[", 
  RowBox[{"35", ",", "\"\<ColorList\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.664224538112522*^9, 3.664224589193911*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.803921568627451, 0.30980392156862746`, 0.07058823529411765], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.5359477124183007, 0.20653594771241832`, 0.047058823529411764`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.803921568627451, 0.30980392156862746, 0.07058823529411765]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.803921568627451, 0.30980392156862746`, 0.07058823529411765]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.803921568627451, 0.30980392156862746`, 0.07058823529411765],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0.7254901960784313, 0.09411764705882353], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666667, 0.48366013071895425`, 0.06274509803921569],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[1., 0.7254901960784313, 0.09411764705882353]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.7254901960784313, 0.09411764705882353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.7254901960784313, 0.09411764705882353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9568627450980393, 0.796078431372549, 0.13725490196078433`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6379084967320262, 0.530718954248366, 0.09150326797385622],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.9568627450980393, 0.796078431372549, 0.13725490196078433]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9568627450980393, 0.796078431372549, 0.13725490196078433`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9568627450980393, 0.796078431372549, 0.13725490196078433`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.9529411764705882, 0.9803921568627451, 0.5725490196078431], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6352941176470588, 0.6535947712418301, 0.38169934640522873`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.9529411764705882, 0.9803921568627451, 0.5725490196078431]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9529411764705882, 0.9803921568627451, 0.5725490196078431]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9529411764705882, 0.9803921568627451, 0.5725490196078431],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.4117647058823529, 0.592156862745098, 0.4], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.27450980392156865`, 0.3947712418300654, 0.2666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.4117647058823529, 0.592156862745098, 0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4117647058823529, 0.592156862745098, 0.4]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4117647058823529, 0.592156862745098, 0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.30980392156862746`, 0.47058823529411764`, 0.34509803921568627`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.20653594771241832`, 0.3137254901960784, 0.2300653594771242],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.30980392156862746, 0.47058823529411764, \
0.34509803921568627]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.30980392156862746`, 0.47058823529411764`, 0.34509803921568627`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.30980392156862746`, 0.47058823529411764`, 0.34509803921568627`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.2980392156862745, 0.28627450980392155`, 0.5490196078431373], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.19869281045751636`, 0.19084967320261437`, 0.36601307189542487`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.2980392156862745, 0.28627450980392155, 0.5490196078431373]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2980392156862745, 0.28627450980392155`, 0.5490196078431373]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2980392156862745, 0.28627450980392155`, 0.5490196078431373],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.27058823529411763`, 0.1843137254901961, 0.3764705882352941], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.1803921568627451, 0.12287581699346406`, 0.25098039215686274`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.27058823529411763, 0.1843137254901961, 0.3764705882352941]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.27058823529411763`, 0.1843137254901961, 0.3764705882352941]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.27058823529411763`, 0.1843137254901961, 0.3764705882352941],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.8784313725490196, 0.10196078431372549`, 0.20784313725490197`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.5856209150326798, 0.06797385620915034, 0.13856209150326798`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.8784313725490196, 0.10196078431372549, \
0.20784313725490197]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8784313725490196, 0.10196078431372549`, 0.20784313725490197`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8784313725490196, 0.10196078431372549`, 0.20784313725490197`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.8, 0.058823529411764705`, 0.07450980392156863], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.5333333333333334, 0.0392156862745098, 0.04967320261437909],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.8, 0.058823529411764705, 0.07450980392156863]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8, 0.058823529411764705`, 0.07450980392156863]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8, 0.058823529411764705`, 0.07450980392156863],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.6642245458936453`*^9, 3.664224589549901*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Hsp"], "Input",
 CellChangeTimes->{{3.664136041438506*^9, 3.6641360425230637`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "\[Sigma]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.0005760000000000003`", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.0003200000000000002`"}], " ", "\[Sigma]"}], "+", 
            
            RowBox[{"0.004320000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", "#1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.005760000000000002`"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008800000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00016000000000000015`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.024000000000000007`", " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008000000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.0024000000000000002`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.016000000000000004`", " ", "\[Sigma]"}]}], ")"}], " ", 
          
          SuperscriptBox["#1", "4"]}], "+", 
         RowBox[{"0.008000000000000002`", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.0005760000000000003`", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.0003200000000000002`"}], " ", "\[Sigma]"}], "+", 
            
            RowBox[{"0.004320000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", "#1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.005760000000000002`"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008800000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00016000000000000015`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.024000000000000007`", " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008000000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.0024000000000000002`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.016000000000000004`", " ", "\[Sigma]"}]}], ")"}], " ", 
          
          SuperscriptBox["#1", "4"]}], "+", 
         RowBox[{"0.008000000000000002`", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "2"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.0005760000000000003`", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.0003200000000000002`"}], " ", "\[Sigma]"}], "+", 
            
            RowBox[{"0.004320000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", "#1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.005760000000000002`"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008800000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00016000000000000015`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.024000000000000007`", " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008000000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.0024000000000000002`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.016000000000000004`", " ", "\[Sigma]"}]}], ")"}], " ", 
          
          SuperscriptBox["#1", "4"]}], "+", 
         RowBox[{"0.008000000000000002`", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "3"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.0005760000000000003`", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.0003200000000000002`"}], " ", "\[Sigma]"}], "+", 
            
            RowBox[{"0.004320000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", "#1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.005760000000000002`"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008800000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00016000000000000015`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.024000000000000007`", " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008000000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.0024000000000000002`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.016000000000000004`", " ", "\[Sigma]"}]}], ")"}], " ", 
          
          SuperscriptBox["#1", "4"]}], "+", 
         RowBox[{"0.008000000000000002`", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "4"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.0005760000000000003`", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.0003200000000000002`"}], " ", "\[Sigma]"}], "+", 
            
            RowBox[{"0.004320000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", "#1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.005760000000000002`"}], " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008800000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00016000000000000015`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.024000000000000007`", " ", "\[Sigma]"}], "+", 
            RowBox[{"0.008000000000000002`", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.0024000000000000002`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.016000000000000004`", " ", "\[Sigma]"}]}], ")"}], " ", 
          
          SuperscriptBox["#1", "4"]}], "+", 
         RowBox[{"0.008000000000000002`", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "5"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.664136021004897*^9, 3.6641360432501373`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MetapopDyn", "[", 
      RowBox[{
      "a_", ",", "\[Lambda]_", ",", "\[Sigma]_", ",", "\[Rho]_", ",", "m_", 
       ",", "\[Mu]_", ",", "T_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"R", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"a", "*", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}]}], " ", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", "*", 
               RowBox[{"X", "[", "t", "]"}]}], " ", "+", " ", 
              RowBox[{"m", "*", 
               RowBox[{"Y", "[", "t", "]"}]}]}], ")"}], "*", 
            RowBox[{"R", "[", "t", "]"}]}]}]}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Sigma]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Rho]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"X", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Mu]", "*", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Y", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Lambda]", "*", 
            RowBox[{"Y", "[", "t", "]"}]}], "-", 
           RowBox[{"\[Sigma]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "+", 
           RowBox[{"\[Rho]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], " ", "*", " ", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"R", "[", "0", "]"}], "\[Equal]", "0.16"}], ",", 
         RowBox[{
          RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0.16"}], ",", 
         RowBox[{
          RowBox[{"Y", "[", "0", "]"}], "\[Equal]", "0.16"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "X", ",", "Y"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "All"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "0.5"}], ",", 
       RowBox[{"\[Lambda]", "=", "0.2"}], ",", 
       RowBox[{"\[Sigma]", "=", "0.21"}], ",", 
       RowBox[{"\[Rho]", "=", "0.2"}], ",", 
       RowBox[{"m", "=", "0.2"}], ",", 
       RowBox[{"\[Mu]", "=", "0.2"}], ",", 
       RowBox[{"T", "=", "10000"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Traj", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"R", "[", "t", "]"}], ",", 
           RowBox[{"X", "[", "t", "]"}], ",", 
           RowBox[{"Y", "[", "t", "]"}]}], "}"}], "/.", 
         RowBox[{"MetapopDyn", "[", 
          RowBox[{
          "a", ",", "\[Lambda]", ",", "\[Sigma]", ",", "\[Rho]", ",", "m", 
           ",", "\[Mu]", ",", "T"}], "]"}]}], " ", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{"Traj", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "All"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time\>\"", ",", "\"\<R,S,F\>\""}], "}"}]}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.636818991590914*^9, 3.6368190277522917`*^9}, {
   3.636819069088731*^9, 3.6368191125387383`*^9}, {3.636819264811551*^9, 
   3.6368192980259027`*^9}, 3.6368225644646*^9, {3.636829939892223*^9, 
   3.636830014380571*^9}, {3.639404872826383*^9, 3.6394049722443237`*^9}, {
   3.6394050144911413`*^9, 3.639405019012155*^9}, {3.6394063834669647`*^9, 
   3.6394064149109983`*^9}, {3.6463985279599457`*^9, 3.646398609007303*^9}, {
   3.646398645453455*^9, 3.646398754993803*^9}, {3.646398793627618*^9, 
   3.646398828570057*^9}, {3.646398898504942*^9, 3.646398916564762*^9}, {
   3.646399089033573*^9, 3.646399093251112*^9}, {3.6463992694913187`*^9, 
   3.646399271481216*^9}, {3.646399330822397*^9, 3.646399353267209*^9}, {
   3.6463994019138317`*^9, 3.646399444394405*^9}, {3.646399508960676*^9, 
   3.646399534049861*^9}, {3.6463999152131853`*^9, 3.646400034745784*^9}, {
   3.646400132351523*^9, 3.6464001410179853`*^9}, {3.646400202948778*^9, 
   3.646400231178789*^9}, {3.646400293450811*^9, 3.64640029727627*^9}, {
   3.64640032943053*^9, 3.646400337373057*^9}, {3.6464003864565907`*^9, 
   3.646400422694214*^9}, {3.646400520282331*^9, 3.646400566181733*^9}, {
   3.646400624135583*^9, 3.6464006531024637`*^9}, 3.646401179779606*^9, {
   3.646413474146559*^9, 3.646413508873995*^9}, {3.6464147899261913`*^9, 
   3.646414836692885*^9}, {3.646673579737204*^9, 3.6466736183704348`*^9}, {
   3.646674392355935*^9, 3.6466744309787188`*^9}, {3.646675181556884*^9, 
   3.646675227641704*^9}, {3.646675321723659*^9, 3.646675353025045*^9}, {
   3.64667575507104*^9, 3.6466757867580757`*^9}, {3.646675849303026*^9, 
   3.6466758675577517`*^9}, 3.6466790733558197`*^9, {3.646679246481843*^9, 
   3.646679252826593*^9}, {3.649002839449933*^9, 3.649002860143219*^9}, {
   3.663351628871316*^9, 3.663351651229472*^9}, 3.663351767965734*^9, {
   3.6633597009112062`*^9, 3.663359734075075*^9}, {3.6633606768519907`*^9, 
   3.663360680606036*^9}, {3.663447624368971*^9, 3.6634476529510107`*^9}, {
   3.664129451638467*^9, 3.664129475440546*^9}, {3.66413613394307*^9, 
   3.6641362001276207`*^9}, {3.664136395418762*^9, 3.664136443243495*^9}, {
   3.6641373073452673`*^9, 3.66413731288132*^9}, {3.6642238225799313`*^9, 
   3.664223856880867*^9}, {3.665244615543239*^9, 3.665244679479351*^9}, {
   3.6658491857822733`*^9, 3.6658491860718327`*^9}, {3.6658509720034437`*^9, 
   3.665850992724732*^9}, {3.665851056613605*^9, 3.665851056724793*^9}, {
   3.665851135882414*^9, 3.6658511457606697`*^9}, {3.665851220146245*^9, 
   3.6658512202461357`*^9}, {3.6663733036776447`*^9, 3.666373323895265*^9}, {
   3.666374171461565*^9, 3.666374247221095*^9}, {3.6663810207796917`*^9, 
   3.666381045887591*^9}, {3.666381093308938*^9, 3.66638110681997*^9}, {
   3.66638157373553*^9, 3.666381577952396*^9}, {3.666381628040174*^9, 
   3.666381631908457*^9}, 3.6663816657955523`*^9, {3.6663822494858303`*^9, 
   3.6663823146460867`*^9}, {3.6663828144299917`*^9, 3.666382839917531*^9}, {
   3.666384488842003*^9, 3.666384504129211*^9}, {3.666453312304215*^9, 
   3.6664533148629932`*^9}, {3.666453363931553*^9, 3.666453369905622*^9}, 
   3.6664534849047213`*^9, {3.666453565916485*^9, 3.666453600499835*^9}, {
   3.66645661256292*^9, 3.666456629063346*^9}, {3.666979023163447*^9, 
   3.6669790407112713`*^9}, {3.666979110372356*^9, 3.6669791126344*^9}, {
   3.667233573867504*^9, 3.667233616461399*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwUV3c8lu8X9pWdikhCSLJJkkrc9yERSUj2FknKHlnZe+/t9RovyR7ZmZmh
jIaIhjTMCCV+fn89n/M551zXdc5zznM/9wlzO01LcjIyMjl6MrL/PwtPy8y8
fiaEh6PKXsh7dmHfkfDTSWE0EJ1Ce3w0/y2mYZgsNwljBYb9ItdKOj7jeYNN
iz9WPKDJv9xPG/cVD57et6wQJgAP+7otWr9/wRX7DnrFlIgBd0MyoT9kFvff
o6dYsJKAlNevvAZMXuPmcUaVw+7nYPZGgFH9/V5cho/Gng+7AAmfD8wCbzUm
FHNMGKZfgq81Z4RvfUrG8Uw8HP4lCOIu9T12yHPFHa1MlTenAZqIMnGHbbVw
kxOL1pyVPHiElmzfPyGBawSObbgvXYbLbVsblJkMuHSKPX2/+xUgdlclG3Mu
o8J4TtlsMiVY1C+5JTIwgnKUTsyIh12FsBKXDK6vVSh1+2RAJ6MKLO+rP8VL
mYJiK/n4tNOvweKP1j9sej4ozEqwb57nOoxPvNCjLrFE/uwitp4lauD4Xv1p
do06QtYp1NRs6pBLMt3cV3kJNXaw6qlPqwP9hJ0iqUoASR1Pf5xG1IDmvgmD
CwVHUbUb+/ZHK00QHHjtS3OdBom/yrwuInwTHNwtmwSL/8g+EeHMcVm6CeH9
NGO/GJZkBUJyllurtaCfQoVzW/eTbMEstzyN+y341m748bL/W1keGWKChow2
KIVQVgTNvZTNTj75JZ1MB75tHTaVju6XZVvJl/rcpQMHKS8L7x/rkk25xhcq
GqYLA7xGpOVL7bLMhaS3rtf1QIAi5smL/a2ysWSCwm2M+lBe3V1+NKpJlt7g
sRfthD5w3xrSWgxplA2tFR7STDcAhiedtc19jbIUDKVcmcaGAMO+15s1mmX9
bMQcvvAYgfA/wWh5tWeyO13lHWJfjeDFVapIn8Mdsh5cZ5jdS4zha3zew62O
btmNh1WW7XYmEMr7rVfu2oCs9Pc0A0o2U3BXUHP+8vKlrHuKPoWQlylcYc20
8MdvZOsU2EvVpk3hZuy7mN+HZmXXViZvOYEZhFIQfhGX52UlcjJ3Uohm8EZU
+LnfxKqsvaoRqZnCHPaZWv7wNf8nW751XH3WyhzyBm/JsXRTo8XC6U3KPnPw
HWxfWStnQiJaOblCwhaQNr3aeY/1BLL5z1TlRpQF3PVTDugGMVRUxv3LackC
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
hB08jFnv7xcPn2GAjMpUO0NCCtee3U74osfGL3HmTFo7H25hFBMWDRgguflq
uqT9AuqROVzCbcyAvs8VhMKNE2jwQWOJiCkDolasJVoO9aHRPxdKpS4zYPoj
X9Oh4gb0+cb70gNXGKC5lyfIzJ+GZvscyo5bMeBMws+lP9zFaBH/LjtrwwD/
4rSCGs5stFoSWW5mx9aXVXnZ5EYyWie2ueLGLQaInMy5GesdiwTDcis8HBhw
02TajHtdONoye4AY6syALVGZSRtuBKOdFtXEBFcGPGT4vsz454t2t5whZXsw
ICJHvinAzgspHhwklXmz69eOGks28kAHc66Tq/wYEGyjo372pjvS2PCT3BrI
AMvmnUIaPu5IxzuY8vouA8J5JD78DfZA5yYEqB/DGFDyVtFmzWMvZGTwiPoz
kgFmU5YmecJ+6PIzeRpnDAN0/rvownsgGF2Tp9M23mf7mW/kzk+5MGSfrE3f
kcAA4um7IR/Eo5Erx0v6vmS2H2RGPdrjE5CvgyXjSCoDGldu/KDfS0N3B6cY
pzIYUIg151QbnqB7Oj5Mk8cMWOp53Z3yhIDiietYNjlsP8/f1HcvpKK07cms
O3ls/HaSO1xja1HOPanKoEIG8I8bSP6waUdP58sr44rZ+6f6JCWtXqMKK42q
R6Vsf5/dFbg9cgLRO1qriivYfGltUuR+OIdq1E2fMcgMKMoUicg4w4mb8iee
vaAxICHn66DTPSHcJeRa3cdk13e59ODao5J4wP9f9YcqBvzJWijvMFHG7z7H
1nyvYUBydWd2yRvAk8YSz//WMQDZuMrztV3A07VFz/lfMOB3f57rgLINnlc8
VCvewoB7/yYZhmIeeCWtvnZPOwME7pCk6EGRmIvboO5QFwPUEknvA45m4A13
Ruq0XzLgloLO2nsFpVh0xL7+Qj8DHvRP1Faiarzt9FL91ddsPQRMjIuXW7E0
LbzBcYgBpXOqATpPe7GClEij3wgDzrmWhwWue4VV4nIao0bZ+Z4sxkR39+Kj
y/tfpI6z9V0uvHdFvB1rXa96UTDJgG8/j8Zr3n2OT7/UbaJ8YYCFQ/RvykAZ
vjaV93LtNAPMv/XpvvrxEPty/3trNMuANP41NKNgf5y46/LnvJ/sfqr8fWdN
oTUmHKH9/LnAgJErereebz6J642E/mn/ZgDXzehcwzlFPOx4my/5LwP8pqde
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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
kB+VhpFBbjqjHY3wSOgVVMqgoRwtITLCsBHs95kFKWUReEVucup83ACqaQpB
/lwa/rM+oxL9qx5Glo0HlgtoqLpBNa9ifj18u1oWuOk7DX/qxHXRDIUQWZUS
GJhPw4Vn3g/s2yoEB4ObgRVFNDyVLN/33KQBNicdDVQtpaFo5UuhnmobjC5Q
D7z5k4a3y9+O/lnfDzkX5wf++kXDupeJRkzdUXhS9jdgy380XP+H8436bgoc
d1ADQv7S8FFugVGJIgm3xD0I+FNHQ9ZxqsBliQiOzTgFbG2kYcgCmo41wb/v
Z3cFhLbQMFaspvWztgg+zRcP+K+dhpvuKM/NFZLw1NZ2f41uGu4zm99rdpWE
ak/5/nf6aDhxZunfP4OzkHvSw3/bKA0LHugocaen4RnfxD9sgoZhaeeLAhdM
w2klWf/aaeI+iF7Vl141BRM9P27cn0fHrVV93X0mE5B35N2NOlE6PvxWMRRJ
5KHnmf43dojRsfVmiJoxwUf1W5tv1IvT8T/0279zdgTOrrrnpydHR/mr9hF/
5IZA88Ypv8eKdHy9RXtzuc8gzPzT8WtWoqMn7+6uoxWE/0xtvv5EjY4qu/zs
zF71w7mlnOutGnQ85bSt6vTCftDyen7dQJuO8dZW6VZ+ffBjt/H1dj06DvxT
sDf62QOxb6SvgwEda+w6aE6l3eAyf8A3Cul4f+67wDm/uoBU+sbXaD8dY67g
g6SxDtjuNOMTa0NHtZzcA0pxrdAm97mu7hgdr4dY63n/aYH4WgdT5ZN0bJj7
1n9SugUWHOespZyh40jbj7DTlCbIknK/Ne5Mx0Lxv99mFjSBZ6VMJ7jSkbEy
wSDcoRH+swhg/7hMxwi+5el7s/XwaKmakoQXgd/RL7WWuoSfLKqJOH6Njh6P
fiw85iaE0XsPRhKu09HoV8qPb0uF8NFk96kWfzo+SZ38eeVYPZye15mndpOO
q3QMkt7VN8Oq7DjNq7foSCucL7M3sgcKb5rFMu8Q83til82uG4YggwkR0n06
Uq0PeFysngCtyQ9uJg/pyDxr1rJTbhZaM49XPHxMR/vViX/l80j4ymeRfsVT
Oh590Hay21gELbcz362NpuPZVCNV8wMiOH/AdenpWAIfF4nnvYtFkPVljU/y
KzryhUcdFT+Q8LJ7/r+uBKK+qr8q5jok3LDl+n7tt3S8rJVd0UTk7aq2TV/9
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
t63gwP8AuQ/wkA==
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
beamVRQuTjFas9BzBHy5vtU13yis9Ppr9pbxL5bmLDvnagrFShUVRihm/46I
q++uodBqV6ilfToLF/2QPRzwk8KZVNORLRQLk5Wy2/l/M+ffwpPR82Phar9N
J67WMnoanve1nM3C/Hflg/J/KQz5aWPQep7Jr1JWAY//USij/MnZRpAPrYqP
RZY3UGi8x9jsw8opqBOcENrDpvDvE/9bcXqTcMQuOq6eQ+GT1U+uHLCZgKDx
tKSRZgrdnRWPhKWPwf3Nv/NWdzHztt9N6n70MKSXfPPI7abQ3K5W8UjNEKRu
rFTa0EvhTqJsdklpCO6uK03c3E9h8GvbjS6/BiApp8iKDDD+0yYpS2sPQOKa
PJFtQ8x5b563b7vTDzdWZIRZjDJ+tXdv8bBPH1xPvatXM0bhPOlH47daeXBV
7uaQ7QSFK2JS3/se4MGVxbHuLtOM3vp9gQdseyFK+ORu39kEL76wzNMb7ITI
GPd543MIuksXVAdJdkI4/6HyEAGCtcXTFw5iB5xl7dOJFiK4cNm9KJOMNggO
thgQFiaYon1ldWdDKwSOm+bEixCskzW4cEqhFU4P6ikkLSB4SPV0SXRhM/h6
af2VFycosixu3neBZvDuUbuesZCgQY7oj0CnJjjRpjA3V5JgZH7c7lXyXDjm
urRMYzFBFwfuvfYoDnhwJIKLpAnOSQ3uWTnKBncnUe3NSwnOIwoXRk8x+9E/
gT5KhuC1kxaFVnxsRp8Z2cZyBF/JVLuVP24E15/jhz/KE5QokYpOu9sIh6wG
5SwUCCo9ENr7YQkbnKu6f1cvJ3iz36d/9lMOOJm3JtiuIJg38FfovGYLOH5s
NKtTIvibzGTLBnXBfpM//C7KBGdR5fGhVv1g97aaallF0P6b8jCnYgRsDD4H
eKwh6CGcrSjOmwTr0neaPBWCejNmlzz4wPClR/X4qBLMnzjs1sXwu7u4JGtM
jaD6S/eMcoZfC618l5B1BBPK0h0f+rPQ/NljmVkaBMf2+o9yhFi4U/3Bz6gN
BM/GmnXoxDH59XFynLAW04/ahNwCCT40WZ24I34jwZ11KxzeaE6D8YOE2ZKb
CNqOVizw3zYFBimRZ+T1CFo1+/8UD5kAlD2rkbGZoJ2M29f29HHQv32maxUQ
zPazE99SNQa61zwOahgQPCH/PviZ3ijoiLkuKTIkeLon84NXwAhoXz5Qo7eV
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
xwWBuRaj0+cZPQt8wrs2tsH/ANDTmxY=
     "]]}},
  AspectRatio->0.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"R,S,F\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{528.875, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 9999.999795918367}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.646401204160153*^9, 3.646401247275033*^9}, {
   3.6464013547812634`*^9, 3.6464013717914553`*^9}, {3.646401585698496*^9, 
   3.64640169676338*^9}, 3.646401763527343*^9, {3.646401800940693*^9, 
   3.646401851275248*^9}, {3.6464018999240847`*^9, 3.646401949882011*^9}, {
   3.646406342749927*^9, 3.646406367989051*^9}, {3.6464082224573917`*^9, 
   3.646408233786303*^9}, {3.66413730778607*^9, 3.664137313424819*^9}, {
   3.664223840670623*^9, 3.664223857183565*^9}, {3.665244635347971*^9, 
   3.66524467976383*^9}, 3.665849186554428*^9, {3.66585097253258*^9, 
   3.665850993041423*^9}, 3.665851057925317*^9, {3.665851136535902*^9, 
   3.665851146272688*^9}, 3.6658512207365513`*^9, {3.666373319962858*^9, 
   3.6663733247241364`*^9}, {3.666374173624247*^9, 3.666374247664822*^9}, {
   3.66638104264953*^9, 3.666381046399084*^9}, 3.666381107402691*^9, 
   3.6663815787755632`*^9, {3.6663816289346333`*^9, 3.666381632220931*^9}, 
   3.666381666540522*^9, {3.666382269654374*^9, 3.6663823151108637`*^9}, {
   3.6663828215612907`*^9, 3.666382841008688*^9}, {3.666384491865329*^9, 
   3.666384504758279*^9}, 3.666453316047138*^9, {3.6664533525025187`*^9, 
   3.666453370690505*^9}, 3.666453485703986*^9, {3.666453566203392*^9, 
   3.666453600738018*^9}, {3.6664566183500547`*^9, 3.666456629705937*^9}, {
   3.6669790196117764`*^9, 3.666979041313938*^9}, 3.667059213598847*^9, {
   3.667233588702413*^9, 3.667233617111485*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Hsp2", " ", "=", 
       RowBox[{"HopfAnalytic", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Lambda]", "\[Rule]", "0.2"}], ",", 
          RowBox[{"\[Mu]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"m", "\[Rule]", "MR"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"\[Rho]", "/.", 
         RowBox[{"Hsp2", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", "0.2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "0", ",", "2"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "1"}], "]"}], ",", 
             RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}], ",", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "1"}], "]"}], ",", 
             RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", "5"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\[Sigma]\>\"", ",", "\"\<\[Alpha]\>\"", ",", 
           "\"\<\[Rho]\>\""}], "}"}]}], ",", 
        RowBox[{"Lighting", "->", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"\"\<Ambient\>\"", ",", " ", "White"}], "}"}], "}"}]}]}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"MR", ",", 
       RowBox[{"{", 
        RowBox[{"0.2", ",", "1"}], "}"}]}], "}"}]}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
        RowBox[{"x", ">", "y"}]}], "]"}]}], ","}], "*)"}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.646400879021022*^9, 3.646400917455304*^9}, {
   3.6464009697528353`*^9, 3.646400986103135*^9}, {3.646401137815827*^9, 
   3.6464011427707253`*^9}, {3.646401419763637*^9, 3.646401428023664*^9}, {
   3.646402201642568*^9, 3.646402202181402*^9}, 3.646404414417719*^9, {
   3.646404467448902*^9, 3.64640452131289*^9}, {3.646404553849976*^9, 
   3.6464045646835413`*^9}, {3.646404596680439*^9, 3.646404603883389*^9}, {
   3.6464050318147573`*^9, 3.646405055299224*^9}, {3.646405446345079*^9, 
   3.646405668732765*^9}, {3.646405724923647*^9, 3.646405828886814*^9}, {
   3.646405921423428*^9, 3.646405955535101*^9}, {3.64640606800887*^9, 
   3.646406075681841*^9}, {3.646406139068281*^9, 3.646406198963415*^9}, {
   3.646406503456519*^9, 3.646406525873679*^9}, {3.650041548705781*^9, 
   3.650041549167699*^9}, {3.6641362162260113`*^9, 3.664136233716751*^9}, 
   3.664136267526045*^9, {3.664136462706143*^9, 3.664136539588032*^9}, {
   3.664136595275827*^9, 3.664136646329547*^9}, 3.6641366976549673`*^9, {
   3.664136997978074*^9, 3.664137002847334*^9}, {3.6641370639665318`*^9, 
   3.664137094976321*^9}, {3.664137329137762*^9, 3.664137342374453*^9}, {
   3.6641375007477407`*^9, 3.6641375575813828`*^9}, {3.664137599239478*^9, 
   3.664137646329812*^9}, {3.664138369301044*^9, 3.664138388180533*^9}, 
   3.6641385771373568`*^9, {3.6641387020481853`*^9, 3.664138724762972*^9}, {
   3.6641388897918797`*^9, 3.664138931694538*^9}, 3.664139061907773*^9, {
   3.664223575206278*^9, 3.664223580194254*^9}, {3.666373361055841*^9, 
   3.666373400519874*^9}, {3.666373504553824*^9, 3.666373511513177*^9}, 
   3.666373549799115*^9, {3.666373596125733*^9, 3.666373605643848*^9}, 
   3.666373653155595*^9, {3.666373686905464*^9, 3.666373692494672*^9}, {
   3.6663737351809483`*^9, 3.666373736866796*^9}, 3.666373769955049*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \\!\\(1\\/0.`\\^\\(1/3\\)\\) \
encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6663737714298677`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \\!\\(1\\/0.`\\^\\(1/3\\)\\) \
encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.666373771454132*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \\!\\(1\\/0.`\\^\\(1/3\\)\\) \
encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6663737714940434`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Power :: infy\\), \
\\\"MessageName\\\"]\\) will be suppressed during this calculation.\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.66637377154322*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\\!\\(\\(\\(-0.0666666535714308`\\)\\) + ComplexInfinity + ComplexInfinity\\) \
encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.666373771593655*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\\!\\(\\(\\(-0.0666666535714308`\\)\\) + ComplexInfinity + ComplexInfinity\\) \
encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.666373771644224*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\\!\\(\\(\\(-0.0666666535714308`\\)\\) + ComplexInfinity + ComplexInfinity\\) \
encountered.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.666373771693255*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Infinity :: \
indet\\), \\\"MessageName\\\"]\\) will be suppressed during this calculation.\
\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.666373771744637*^9}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1mnlUj1vUx5MxofkmJKEypBJFSSeRRAi3KwlNkpKpSIZQVJTSoAlFmohK
aVA0apDmeZ4nzWSIopf3ffbZrd9arz/uXeuz9vo+z+/Tc87+Pfv8RA1P7T3K
zsbGtubPfyb/+b/ZTuUVP/zfk8c6EQlOkvbKRhkK2ff4HpOoU7NuTj9XTHnt
MqHkpe9fkguZQ+ObhMspP8nnczBxdirZJFhx8XJWFeW30gXFg0eyyUzz11/j
Leoof9a098XIo0JSlvLw9CeBJsq3fjDg2LesjOziSP8qcKSF8tOvvG0lf1WS
Nf/7r43y6LBab6uCWjL3UMhprekdlEfYZ0kv82skvxwEIy3qOil/7zc9RU+m
hbRG3+q9HdVN+efOXI4DvG0kp3Z0Wbh9D+WpT5Rn5n1uJ8+nnDTJ2t9HeaVR
yIvukk7iLtX8pHXlAOWruddt7fiTa6Wzt2V8fJBymeSog90uPSRqtOPFmvvv
SeQ7dT8xtQwS4rHz2GxB9GwmpewnppFBVr4d2LqzPJ56Bi7/WbFwXVUG9Qx8
7cIqqxn78qhn4KKzuHg3dBVTz8AvutxRqQ8qp56Bp/lKFYnqVVPPwJeai/+3
ga+eegauov1CzTK3iXoGHhZge5gjBT0DD71/oFLSBz3T/ISmmpRTHdQz8Nuz
brhUqHdRz8BPczctthf5SD0D316u51/5rYd8WKfF7+/3njzvrhlfqlFKfhnu
zeHjQc/AT1zSr7G8mkQ9Ay889Ytdc2UW9QzcTflRt096PvUMvFY9OqxEqJR6
Bt6VZCUxJa+CegYeP2N9hMe5GuoZ+OFotUOeCxuoZ+CVF6NbeYyaqWfg5SdC
Rc7Kt1LPwPXOa3H5cbRTz8Bv6FTdCqpHz8D3Cs8+HRiFnoHfPio9x98OPdPP
+0Qg1Fe7l3pemsS/JuGvjx82UfwTPAMvW7bicP6Zt9Qz8KrteVWibDnUM/Aa
BTM5y+hC6hn4g6NVl97wlFHPwGWlbSO73lRSz8BzGpRuDOnXUs/Aj3INWhtO
aqSegUclPKicVYyegVt7i06aHYiegacIFAv9tEDPwDdsCbYbU+qknoFvjuTd
sWJWN/UM3G6MK9+1Dj0DHxmtniEdgZ4LsyRil2q0Erf5Dv4CEzwDn6E6VWTa
QCr1DLw/jHOW1s1c6hm4682HwWfEi6ln4LVPdidotqJn4N179YrMnKuoZ+B1
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
sIPmA2d7WPaaRxnz4b2sref6NsOvmA/86lcvkXnDmA/c23RBQN1uzAc+ryRU
YNAC8+F9RCBGq3npdtxPgK9IEqws31lL84FvKNkh6HYF84EnLrx7udAf8+F7
uBX3Y+dJfpgP3FRz1TbJIMwH/sv3SKNOOOYDv7RQJfXXO8yHvvnggRbX81bM
B/587Gpz4xDmA9eJG5JxKMZ84E4JMfdT+zD/ph7/09sG4cSF+6KayqJMmu+m
Zr/ZySCR+K3qU39TX0rz9zP1bwYXZ2v+aqH5BlD/8UR8yTXcP7mTkrgdDXLJ
uP70qv1i2TQ/Xm2dU7dNIdFaGX7un+W4f05h6te5vxtou477ZyBT3xsS3v10
EPOvSfkm//3/sljR45H7c2n+Pqv/rB0Mqkmai8JzudW4f15k6kVDOCwDhzFf
nan/T+nfuLA9uL+NjJcOdNk0En85tfAEoTya3xm0TXtWZjO5GFk7w2E27p+f
mXqbC7Ffhffj/tbM1N/0FpY78BTzE7un8WwsaiN9S+fUr/LE/TmIs/OktnYH
WR9v752Yh/lxTH2h/PanFlGY/4Cpf7WwbIn3COZb7Qle4WDQTY5kyVmOVuP+
fNjK3img6yMp9Z9hZnka988zTP3sb/ptMb8xX4epf12bbZeqgvuPTNKmLUXD
fUTX8UVg5nfcn+c1LArqshkg2js8ZdMm4/62iqk/Nk9k0HYr7j/8TL380gqF
DjvMP+8+KDUrc4iMu/O41HzH/bl3cdOhuQ6fyLlv1gpiTphvxdRbr7AymeSE
+d1Mfcqw49OGVMwvV0tJlpk1TIQDKzO4mnB/1qh60aNUNEyuL3wkK8+G+08p
U+9lKbZE/N2E/sLUz0niENEewXzZny7btLW/EiLB1Vumg/tbmPNla4O538ig
Xdq0TgvMl2HqFylGHgofxfxgpl7o+NX91ZK4fu9GHqywCfhOBCKFuk68xvyp
KjumOBiMkH7LEdXEUsx3ZeofHq8wEZHG/YGdqTcx29RcdwjzBwxXGAZ0/SA6
C3THPHhx/zH6IuT+7NlP4icn6tMsjftPH1PfJJFsNv0I5usz9byLbpqkO2O+
puCPgQyZMTJ52PzylqOYnx7eLVw0PEZCV1Zm7HfA/O1Mvc908dAcZ8xPYeq/
8119VBeP+U8/5FzqsvlN2jfkrtgdg/nChxKeDSuNk4sFMj8/VmJ+OFNfq2TS
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
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.8], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmHX8UNUZxs97UUDgB/6QlA5RRCUUCztnKzhnD3HGLEQ3DJwwc04RcXZi
x+ypU7BQQBExsLEQBHPSPdDnu/fhw/54Ps977j333BNvnk6DBvc/oyqlLI5S
6ojXE9cXZkp+WLhFuFV4VLhduEN4RLjN7cf87E5hhL67W7yH+MLI73YTPym+
q+S7B4WbhJuFp4V7hfuEo9WvjbijeHNxO6G90EKT6yQepeeDhT9I3lL818ix
9hT/S3yPxxqu9hjx7uLHPS/aF7u9t3iq+EXhJeEt4QW3JwrPCM8KU4RxfjfJ
z/4tXB753X7iH/3uQ+GKSPkA8cfi14U3hEu8/t+I/ya8Inl/8Wbitl7nO8LL
Jd+9J4wXXhXmCz94XtP87DVhJ2ELoaews7mXsKmwYcl9/K/wnfCtcIT+15R3
4oaW2dMuwgZCM+FwPW8k7iCuQRZmqb2r0FvoIwyK5G7i3TkHYSvhFLUPZk7i
QeL+wgD6cX5CS+FE4TDhdyXP8FDht8Lx7kv71MhnPcWXRu73PuKNxM09FvtV
IzT2uPWE+sLGbrcSNjG3Fo6K5Pbi30e+6xL5nu/Wcz+4AfOL5HaR/6vrf7Cn
DUvu0XGR+72R+MjI/WvL3G1DrcWHCevynd+vU7Jdz32aWj+eE54XLovkfcVv
isda/55U+zjxIvETwkDJC8WPCceiI+iUcLXkIlt5N9JWG0l+RPJRkn8W/1M4
WvJc7EbYR/JP4oeEfSX/RzwOHUV3sKnIs1kififS5htqzBclXyl5tfgpnze+
42VhpORfxGOFKySv4gyFkySvEL8X6S9qNM5HtttayfdL3htdF78faQuN9fzD
SFvAht6K3Kv6en6v5D3Rb/HrwvXsrZ6/Kfl+zkzyZMkPsN+SJ0m+jjPwmE9J
Xl/y2+wL517lf5+Q3KTKfz2ETkh+VfI1bK3kCZKvlVxH8njJoyRHledziPX+
OT0/WbxSvIp9LWnDf1Z7mHg78d/F55dsn6322eJt8GniIcJZfneqcJpwlXCB
8BfhIr/nG/b4PI91mTBUOId+kf51V+/BjSV9Lv1O8bhnRtrkVuJLxH9ijsLl
HuNcnkU+21b8jHCC5GXiIZHz6iseLh7MeHzjsXbwmVzqed1gZmzOEx/3rrB9
Sd1DF/8hXFzy+9El94K1nhPJ/XwOI/zuLLXPEG8duS+nl2yP8FzYx6F+t73P
arjfD4v8x862mwv97o9qHyjeHF8hPqikXztGOKDkuwXYU0l/3Mj+tGNJH9tZ
3El8TKTPxD80EzaI9NHLhEXCnJIxFl9QW9Jv4IfxzzO8N+wRvgcfhO/Df+BH
6HdspO/FD18ZGc8OEl8VGUsOFn8pfrtk+/OScY5++HniTkf/kxjAvPGrxF3i
0nDbArGS+EncxG5H2HaIZXeVjGv0I/Ziy7zrI3u4gD2pMhYRk7qX9MPwGt+L
H8Znt/U/e3id+PquwtXq10HctEofy7POkfvRzf1aegza5A+M0TUyL8EH4rNq
vDb+g0/mH/jqviV9yB4lYxi8JqbBu5WMd/CmkfGJuIVP5Gx3FXYpa2MwMZm4
wLPukfGZZzvynf3tZuJ+4v1K6v0Aj4cPPd4+sId4W/a4ZHtrYS/P9cRIP0Oc
/dbrIg4SV7Fl7PM0+1vsmvjWqqyNky2tT8Q4zoaYuCb+0Y/4Rpzj3cBI+9xE
vH/J2EEswQ6OcRt7IQb19rzwgwOFI3hX0g+ear9Bzna4nzE/cgb69om0M+yN
sfp7PxhrgvUMeyW3e9p6dpvPFt+N7WLDxB5seJTbI0r6C9qflcznsIHpJeMr
7aGOWTtF+lf8LLEN/zLa3+Mz8ddrfC1MjDw/ch7kt5+KJ3vccx1rdon0XcQL
/Az+n7F3jPRz+DvenReZY+OrT4jUJfTnpMhzRx9Oj9xz9vkM+6Y+jjOH/99+
w0daB8izehFrIvOMAyPPbH+fITq5nc8XXeSs+1nP+lrv1tgG7ZMjdRIdRle3
kbyxn6GvjLWfx9ih5NwZg37UB/gPbJKYQGxgj4gzxARiwzifCXtILj7V50Ue
SC5NXk3+jG/Ev5Ej4NvwcS+4L9+TR032esd6PNoXuU1+hX/CZ1GnEBuJkeQN
5PaMhy+lfkG/9oqMp+QD1BrE0Qf9DedGjfRQWRvnWBt5CnvOvKknyN8nlIzb
F1m/hljnyAdOsZ6hX8Rc9ogYOtTj0j7bekMcJFYTJ2kTy4f5+yEee0TJnGl8
yVpjmO2Imog6ZpLnRAzFfoiPZ/q7NfEc5h1xlRjKXG+L9GkzI2sRYiBx6k77
vW8i42FtZH5LjFvfcY5Y2TiypkBu6r6tqoyPzSvHw8iYiNwkMldu4nGoU38q
mVeRU9WJlN8X5pWsefCL6/tbxmgQOQ/GrPV/kYnjq0vG8rqeW0d/W9//IlYT
s6mFW3i+nSQvFJYKav5v/Nnus1hYUrLd2GtmzKaWa732GsvflKy3+fb2yFjx
tcdr4D71vYaZHqfW86BPjfdzoceiTxW5D008/5Ul841HI3M28v+nI/NHcnvq
AnSIGuHxyByKmoL8H30lt382Mg8k93spsq4n/3840t9QO1BH4H+oKciBsW1y
/rG2GWqK5yPzSnLjFyJzVGqEJ61/1DWsZYXXQ32BTi/ymlgbNe06kWf3tc+c
g2ji861n3Vvos5vjc1nO2ZaMy+tGxu1ZPnvyjOaRckfrRUSOv9r/m2u9Q+fI
6ZtVOQ75Cc9/sR5Ss3Mv8IHwQKQf/sH6VdfnxZmzPnTsg8g8CnudGulPOlVZ
32F78yJrKHzB8sgaEPtcIG5dZX45MnIuzbwugE1Ro07yfCZ6Tsgfer6rbE/Y
EmvCR02zTWDX5Pz4mqXe77l+R/1I3PlRfGOk///C82lpW8ZeWno/x0TmS+2q
PHfiafsqdYmY2wEf4P1kX9HvFv72tchYjA/Dz5ArzBJPjIyh5JmjbJcbSh4d
mdO2kXxTZP7Z1jUmedL3kfow2+c/0euf4LWxxhklYwZx/ZOSdzsfiQ+JjKc8
6x8ZK8izvygZZ6b7G/w+d0Af2QaXWPfIz78SHxoZx/gP7aXWV3S1xrZd6+8W
ea4/uz/nQs7PPwfE2vPjbImB5PrkO/hDfGFjj7PYc/je8iyPy/j4jWIbm+fx
5nvM5e7Pdyvdn3FWeM74wHb+V3vzd5bDerPAejff+73M3/LfKZ4ve8d5kUd8
Gen3sBNsZMsq4zd2sUWVuSlnOtI631Jy7ypzMnSpV5V5FTq2WZX1GLqxaZX3
htwhbF5lHdXGdwXERe4NelR5V8j9w5TIOyjuEHpWmX+jw5tUeReJXXStMldD
rzaqMk/CLtDbMSXvDbpXWW9jv12qzPPQ4W5V5nbYeOcq76ewo42rzPOwceyi
udeIf+COiHuJNyLvTbn34A6E/Jj7jWsja6VPsY/IOmm6+LrIOukz8S2RedpX
tt/u3vObI2sonl8TWRd+Ir4rsg6a7W+p12aIr4+svz4X3xOZL34beWeL/2nl
+yjys4a+S6Ge5M4E++U+uI7vgsgnuJP5OPKOk3sh7p3IC7mfmRZ578rdEfdI
5IjcceE/Xyl5b8OdDLlmsR/o4/nfHVnTzYnMYch/ibO3RuaqrOWOyPp+pvv3
93rZw628n+xhX+/nDZG5LWvnPupQr5092dr7fF/kfeZ33p8BngP3ddSo3JXh
G7ljIHf6FRnWy20=
           "]], Polygon3DBox[CompressedData["
1:eJxFl3XYVkUQxXcvgkoYlIQIH3x0S6OEdAmCNCKCgIBICyiISigdIikprXSj
NAoYhCilhIqoqNjdv+PM8/jHefbse/funZ2dOTNvSpe+LfokIYSr4BpwKYbQ
jLEkYwEeNGU8zHwHeAb+HegDfwSshX8C7gn2zkJ4adAa3g08DL8bHIRvA2Pg
+cCt8OLgPvhUUBbekbEE37uNMRfzoqAD/AvQJtiey+GlQHP4A6AXvAnYBz8O
xvr3DsFPgXHRziHb7gc94e+DCvDyYDq8MdgDPwqehX8Dest28LLWRjvrcNAf
/hwop/20N/Y2YnyF+Rvun82gK7wvYxGel2Fsy/wh0Bt+O+gUzGeyvw5YAt8I
noJfm5ivtmpP5ifAOvgoxuI8a8Z4hPlutzcXyALPD9rJtyAbPBW0h38P+sIr
Mhbm/byMmYLdQVv4R/IZvAmYD7+ONdvhDeHF4M0ZTwa7Q/lzndvfx/dryXiB
+TEwEZ4HZAh2h23g94JzwWyeAM8ZLc5kcyt4bpAumM2txRM7+xbwJvMW4HSw
GBwPXwM6Kv4YC7E2DXiR+WLwGr+lZb4MvhQcinYOneeQx99bYCX8aT/f9YnF
tta8rViOdpa9Hk/l/D5beTzX9/tYBJ6E1/X95oAndLbEvq07Pcj8Y9A0mI/n
wRuADcFs1n2XB92Dxbji4wNQMViMPg//VD6Et9A78DmgquJfucC3vvX4rOD+
+IyxZbB3lsCXgXqKP8ZUnldjHM98GHgUXgNMg48EQ+DVwUSdBQyGX472beXc
YngO9sjOmMI8u8ejcue83+9FcEcwG2XrXWAufJX75wKoAq8MZkXzkXw1XLmR
mOaUdJ8t0F7RbBsoRNOP3PCMHr+fR7sbnXmp50NmeBqPry89/5SHBdn7SjQt
Ke3++IqxXbA1K+EldEfBbOwazYYa8G7xfz1Urp/xeJRe5YSn93hX/mWFp/V4
vgraB/vGKvidYLR8DwbBv46mNb3AangtME/aA0bA9/j8ccayfD/FfZ/Z870A
KBLMBunlVo+nfoxFWV/W80X+lP4Vjub7+uBBvevx1NDPe4XxEsgLciimould
LdBFPoym1zVBZ/iHOlOwO58LPxtNW/WOtPKM7jXYO9L62tFydb3nzwr3dw+/
H8WYYq07Y2nm9RhfYv6C++McqBQsR2Z4fIzStzx+q0SLbWm49LommB7M50Ph
xT0fKvn5le+qHReD6VdRv+8yfr5iiuFgZ9D5q0bLDdXAAfD8uoNgdy69PRqt
HoyU3xJbP4L5JM+nVO0ZLIZV/2b6/XXSXqzf5fnyGGMZ5uf9vgr781tANuWB
9vR4GiOt8PP9HC1XBoBN8PSsfzWYTbJNdUD1YITbn/B8ajANOMA8Mp8S7Lf9
zP+JZvtksBceEuNas495NtkUTROkDb9Hq3U9wHa/r8LBzqizSh9l64xg+jzJ
z6I9cvLsj2jv9gQ7oum51s4Eh5VfiflPfpT+5UvsfnXP0o+8ielXdc+XzInF
cjrlJfxPxrHMx8knrgHSAmmItPIn0EWx4f77EXQO9ttG+A/Reg/9tgE+JVqs
ZImmh38zTghmw+5o9UmxKRtfZ35bYvpbze9X/tO7Wf38f0WzTWt2uj50UKwE
60ekn+qN5IPZygUwKFgOSB8zssca+FrwDvNMiXHVrBMeD9KW1eAY8wyJcb1z
PFr9XQ5fEaz/KOM1Q2fa5T6t7jEhbbopsd5lEzgVrZ5K65WzR6L1SMqRVNeD
mxNbuxmcZn5jYlqgmvhetPqh3rCE60lKYnvV83z6NVpvKY2T1qleFgoWY9ID
6ZHeLSnNcD1Q7yb7Ve/U/xUM9o7q61m3Tb+pH8ydWD7nd9uVb7qbtCBLYvml
2FBPoF5P/Zp8pR5AvYX0Tr2Y9pgWTcOkIdJPaVuuxPRbOq5+V/2m7lYard5G
/bV6VfVY6zznlfuVPH+UH0PhQzy/fvH7Vxyo31T8Kvf7e7wqH7V2MNjm8dsv
mAash/8W7VnlaPVidLSeeq/fh+JRvc1szxflkHIpm/tD9VO1o1Gw+qb7+a+2
gS2eP7Kln+eL9GMBw3zXk2HRasIi158bEuvH1Zer31V87gymYcc8vncF++24
x7d64V0e74on2a493vV4OwDf7/GpeBXfB05G6wHVI27z+5M+6Kyz9M1oergw
mM3Su4Le06tfU+2Sfsp2rdnvNsv23Z5v0qhUj+k5fucpHiOqh9IsaZc0Ub2Q
+pm6wWqU9Ej9X214nWD9XDmvicph6bn6C/m+sXIuml7Lt/M8PxUTio2BHq/q
R6sHq3HqbfT/rWawGrco2v8t9QYN/Hy6H/WI0jD113kSW1vMY1v9pmyTzeq/
Lnusy2b1q/p/US3YN9X/VvZ4U81S/yO9VG2f6/qi+FOPvNHvR/8xVLP6eD4o
Rit7jCn/1fOq9+3t+SO9V66WYj6Z8V/2GKj+
           "]], 
          Polygon3DBox[CompressedData["
1:eJwVzy1Lw1EUgPE7QTAZjL4PURRFfCs2HYpoErtzCLqV/beqWKYfQExODBOD
bGWsyBDEZtNkXjKJRSxi2++Gh4f7cA6cmz4s7SU9IYQB9OI7FUIBc9j2rvOI
gWOex652xx0cYAIz2jX/o4wV5LU2j9o94XXcaM/8hxKWcaQ98ri5M97AvfbK
w1qOp7GqVblfu+AttLQPTmvnvIMn7Z3HtFPO4FZ74a94F2bjvvbAn/GG+Aes
aTUetLvPk1jQLvkXCZaQ01o8ZC7LU7FrV/yDIhaR1ZrcZ67Cm2hob9wFD7Ap
mw==
           "]]}],
        Lighting->{{"Ambient", 
           GrayLevel[1]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L0uQwEcxuHTlqrPGjVC4wLqCrgCXZSJRbq1AytXwGSsQYwMYtRBjAyN
0UfR+mgTERJCuggGfU50ePJ7/6dJ056J/EpuORIEwRI/hPuLZ34Z5ptXRnyY
1k2d1Gl27KwucmAXdY0Njt1buseZXdZT3om5L/SPNy65Ytbzql6Ts2/0lhp1
7pjz/F4fmLcftcEHXe5m+D+0peechN/nPtRdKnZJ11nlyF3QBfbtGZ1i287o
OC9E3cng/yV9yhCDpN0D2s+Y3ae9JOghzqjn3eHvI2XHNKlRfeq8+zaGGzHs

        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{398, 530, 532, 531, 535, 397, 537, 533, 536, 534, 399, 538, 
        556, 400, 472, 401, 539, 557, 402, 473, 403, 474, 404, 475, 405, 476, 
        406, 546, 477, 407, 478, 408, 540, 558, 409, 479, 410, 480, 411}], 
       Line3DBox[{413, 481, 412, 482, 414, 547, 483, 415, 484, 416, 541, 559, 
        417, 485, 418, 486, 419, 487, 420, 488, 421, 548, 489, 422, 490, 423, 
        549, 491, 424, 492, 425, 493, 426}], 
       Line3DBox[{428, 494, 427, 495, 429, 550, 496, 430, 497, 431, 551, 498, 
        432, 499, 433, 500, 434, 501, 435, 502, 436, 552, 503, 437, 504, 438, 
        553, 505, 439, 506, 440, 507, 441}], 
       Line3DBox[{443, 508, 442, 509, 444, 542, 560, 445, 510, 446, 543, 561, 
        447, 511, 448, 512, 449, 513, 450, 514, 451, 379, 452, 515, 453, 544, 
        562, 454, 516, 455, 517, 456}], 
       Line3DBox[{458, 518, 457, 519, 459, 554, 520, 460, 521, 461, 545, 563, 
        462, 522, 463, 523, 464, 524, 465, 525, 466, 555, 526, 467, 527, 468, 
        388, 469, 528, 470, 529, 471}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{281, 341, 282, 345, 289, 556, 349, 293, 353, 297, 357, 547, 
        301, 361, 305, 365, 550, 309, 369, 313, 373, 317, 560, 377, 321, 381, 
        325, 385, 554, 329, 389, 333, 393, 337}], 
       Line3DBox[{283, 342, 284, 346, 290, 557, 350, 294, 354, 298, 559, 358, 
        302, 362, 306, 366, 551, 310, 370, 314, 374, 318, 561, 378, 322, 382, 
        326, 563, 386, 330, 390, 334, 394, 338}], 
       Line3DBox[{8, 23, 38, 404, 53, 68, 419, 83, 98, 434, 113, 128, 143, 
        449, 158, 173, 464, 188, 203, 218}], 
       Line3DBox[{285, 343, 286, 347, 291, 351, 546, 295, 355, 299, 359, 548, 
        303, 363, 307, 367, 552, 311, 371, 315, 375, 319, 379, 323, 383, 327, 
        387, 555, 331, 391, 335, 395, 339}], 
       Line3DBox[{287, 344, 288, 348, 292, 558, 352, 296, 356, 300, 360, 549, 
        304, 364, 308, 368, 553, 312, 372, 316, 376, 320, 562, 380, 324, 384, 
        328, 388, 332, 392, 336, 396, 340}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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

     "]], GraphicsComplex3DBox[CompressedData["
1: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
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.8], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw11Xe0z3Ucx/HPx55lXJtrr4xb9uzeXJGZyLXldE6nOIhzRIikTaKysndG
RlQoe1QqVPaorKzsrEr0fJ332x+P8/7+7v19f9/Per++JZ99sW3fdCGE5UiP
1jGEP6m1qUeoD2EayvO5P7UU9Si1EqZjP8pgEvahNCZiL0piAu7qPvyNFO7f
Rq1IzYpCXFelXqW2xU0c1v8xFYdQAVPwI/LjPfyKKpiBTciCYeiHgngGRfjd
xzUO6gFqWUzGV2iDG7inueEfHEQ5fIzHuGe75k9NxgX/nYbRvleCWgc/cV2U
eodaAGM0Xj4P1FpQm2AX10n3v4sP8DMS8SH+QzHcRiu+d55ai7qZmgtvYY+e
ifFoyv92Ux/272TFq3iCz8epj1Cb4yTX1akNfP7FqfWj7VkitV60PStGbYRv
tK/UVHzLdWVqY3yntdZaYqfvV0uc47omtQVOcV2D2gwnuK5G7U3NhK5YqXH7
/m5EZgzFSxovnsMxzQmzcRmpWIG/NDd8jtOog09wBnWxEJfQKNg5vqj9wzKc
RT0swnU0wxcYhPp4HhuQA6/jD9TGgmDnNAHvBjsL+TAq2DrpHI7GVuTBO9iC
3Hg72PrpPOisbsKDeBO/6yxgFq6gMT7zNXkAb+B7FMFYvIwUvIBrvoar/LnZ
fcx9fPzdsAN5fcwaTza8hvXIgBFYF6zXh/vcM2IkfvA5al5fQ7nwio8nweeu
PkjGUvT1uXfHb6iKmX6vzqT6cQiaoxcGB+vHnsHOeKrv11PB+jGzjzO7j7lu
tN5Q5mhehfG+j1/z0pkP/K8y5d9g+aA+Un/9guL4KFi2tMSX2odomZboPaSM
Uk+pR0v493f6verNY6iF+cgZLZfUL+pf5d5Ef5ayRRmYK1o2qte0JjUwF7l9
nMqNQ75Wyq6OSPM10PorH8YFy0/lkrJIeZjka6vsVb+oR5TP6pdZwc5VTcwL
lo3VMUfrFO0sKSuUIco3ZaCyQX2h3tGZb4jFwfpYfaF+UR+rv+73mvb902B9
r15Tf6kfH8WSYO8NnWf1rPouJdg5yREt/5WT6k2dYeWBelZ9rfOss90Kq9EB
7YK9D9QjOj/qWWWbel+9qUxojTXBskJ9rXxQjz+Jtb6uTwc7W8p8vSOUOVmi
naUkzza9L8b48/TcJmjv49Dfuvh1C9+nNP/NdNF6Vu+I9MgZ7L2WL9peKA91
Xye/Ny+fqwXL5zTf+6jnK6ODZWlCtDOj3M4TbR+VpfmjnUO9UzJEyxNldaFo
66/3dcZo7wvldqZoWaTcvhWsl/W+0wMHqFB7+Nz7+fy6+PwLRDsPegd19vlG
r519TTv5PVqn/wGcbej6
           "]], Polygon3DBox[CompressedData["
1:eJwtlmWwVlUUhvdGQAkDA0SQkBBR+iKi0iChoMPoT3UExzFhxhgTCwNjxMJA
pDHAQsEO7O5u7G7FjudxrR/PnHXv93377LPW+777dJ4yffK0RqWUZdAY9oNN
oSUcAX/AtrAN/OP/aylbc/0bBlN3hjHUK2EYdasa3/8XhlL3hrbUF8AY6j6w
FfVs2I36IK47Qj84BtbBZD+DW2Hf3EtTOBxOhPVhL7gbDoM9YQKcAGfCRrAB
rPG7NZ5nGnSlPovrxtAMHoSZ0AKawP1wNmwCzeEhOAM2zHs+AKflZ/bqPjg0
720PjoeDYTjsAsfCjNyLPb4HTsl7rwf3Zl/sz2bwZPbF/mwOT8EsaJV7fBja
1Vj/OOjuLGA76rmwM3VfaEd9IYyl7gA9qa9yT9QdYXvqebCrn9Xol30b4Wc1
+mOfRlJ3gh2or4Yh1O1raGEO7OS9a/THPg33uzX6Zx9HUfeqsX+fYzT1byX0
0wb+gougPbSGZ6BLDT2oix6uDV2pX8v9bwRdqF/N51WTR8LUElptUWO9F3J/
i7n2h17wLiyCviV68A5cXmL9jvCS2uA33bi+nv1ZwLV3iR6/BSfl7JrlPH8p
ocW94Ve1w2+6c30j+9UNDqT+s4Qf5udeesCbsBD6lJjR23BZiefrAC/ClSXW
6wyvwBUl9tcJXoY7YSKMg59gKTTkmu/DCvdhL+BTWO5zwSD4BG6EYfYSPoe7
YBKMh5/VYo3Pvy7h7zu47qG24EdYnd8dDd/DdbmWv/kMlsCA7OF7cHIJ7+gh
9W/uDMyZrIXbcu2R8C2symcbBd+VyASzYQR8U0LXPfN5nc+8nG3f7OfcnF3v
7PfpJbLETNHv5on+1AP6e0bOVg+sKeFX96qmzQv9rxfVtPnQmJ5swfXREv5p
WkPbj5fQf/Mas3quRN6pT2f5fAl/nlPC63pe/59bYj09rP+b1PDGYyX8eF6J
v9X40+69hnafLZGv5t2W1E+U8Nv5Jfaj5/TXuuyvM/wBGtW4/yMl/HtxifX0
hPpbkL1tyPnNz146U/1kLpgP5rd+MhfMB88A9XpqiWy1Z+blNSW0qCbV37Uw
GIaW0OfCnJ2aUL+ta2Tpx7A79SUl+qkH9OulJfqpR/TDzJytmW9eLsq9mSlr
7XWN+30I451dDb1+BBM8K2rs7wMYR319ifsPL+GPG3KvrqG+29bQ5pcwsYZ+
1aue1B9m9CElzgez2wzwbDyqRDbcUsI7ekh9r8zveqbop5tLrO+a+qFNDW98
4Qxr5Ir5cjSUGpnjTPSAWbQ61/KM1M83lfi9GtA/q/Leet78MEOn5v7cpxmo
p/SY2Wimzsmeq+X+NbSwJPvZUGN2y3JeA2poZ2n2t1+NPF6c/R1Uo5/2dZLZ
X0MbK7KfA2vk1fJ8Xs8APa+n/z8bYP8Smlf7ngl63nz1rPAc1Et6Sr945kyH
A0qcRb/DlBJniGeJeec8vsr93M51nxLvJPpFT81KfXk/Pe5ZZx7o/ZH5jmFe
6F3X8NmG5dp61DNfv+vdcXlG2UO15zP6rENy1vbU3jakdu2hvbTHatceL0t9
6xV7tiI1qjbHZg/a57w8r3wXMfN8fzKTZmePzCrf6eyJHm6ZelVjetx3OzPO
dwXz0ewzMzz7zU+zxDNiZWra5/0Pqkj/QQ==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwl0EcuBXEAx/F5WhCi8/RO8PTORrmBEyARO2LjDtpCiXIBZaEcQtsoG2Wr
bJQDkJD4TCw+md/3ZebN5F85OTs2ExcEQRGJNEaC4Mx1kVzidBn39ha1ZOg2
buwNKkjV5TzY29SRqSv5tA8ZoljHuLCXyQ/fqyt4tHeoJ0tHmLLbiRHoBk7N
BXKI102c20vkkaBLuLVXKSVNt3Jtr1NOsu7i1T5gIHxeVzNvTzMYfqPu5MXe
pz88G93Mpb1CAUm6g2d7jz6ydQtX9hplpOhu3uwjholG/v8nyjiz/FDl9znX
Sb7Dd+t2nuxdesNziPzf92t/MRGeoe7h3T5mJPxGXcqdvUkN6bqXD/uEUQr1
HzXdMb4=
           "]]}],
        Lighting->{{"Ambient", 
           GrayLevel[1]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJxN0LtOQkEUQNELIsZCGhpsSAyoNDQ2NDY0NKJGxMQ3CIhPQEBUiDGGj/Lx
ZbSs21Gs7DOnmGRmo9GrdCNBEFQ5J5xPOWKFNZYsk7rOqjmtGRLmnObZIelc
0F1S5qKWOOaCPc444Ycyv+zzxwH/HPLEhEfGPLDlzg+955073sjZt3XEbfgG
51dtsWkeapMBDfps299ojzov1Mjad/WaDlc8c0mcKct8E+Mr/B8+iTJb+Ms5
iHwcgg==
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{259, 297, 320, 258, 298, 321, 260, 299, 322, 261, 300, 323, 
        262, 301, 324, 263, 292}], 
       Line3DBox[{265, 302, 325, 264, 303, 326, 266, 304, 327, 267, 312, 284, 
        268, 313, 290, 295}], 
       Line3DBox[{270, 314, 285, 269, 315, 286, 271, 316, 287, 272, 317, 288, 
        273, 318, 293}], 
       Line3DBox[{275, 305, 328, 274, 306, 329, 276, 307, 330, 277, 308, 331, 
        278, 291, 296}], 
       Line3DBox[{280, 309, 332, 279, 310, 333, 281, 311, 334, 282, 319, 289, 
        283, 294}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{124, 187, 125, 192, 133, 321, 197, 138, 202, 143, 326, 206, 
        147, 210, 151, 214, 315, 155, 218, 159, 222, 163, 329, 226, 167, 230, 
        171, 333, 234, 175, 238, 179, 242, 183}], 
       Line3DBox[{126, 188, 127, 193, 134, 322, 198, 139, 203, 144, 327, 207, 
        148, 211, 152, 215, 316, 156, 219, 160, 223, 164, 330, 227, 168, 231, 
        172, 334, 235, 176, 239, 180, 243, 184}], 
       Line3DBox[{128, 189, 129, 194, 135, 323, 199, 140, 204, 145, 208, 312, 
        149, 212, 153, 216, 317, 157, 220, 161, 224, 165, 331, 228, 169, 232, 
        173, 236, 319, 177, 240, 181, 244, 185}], 
       Line3DBox[{130, 190, 131, 195, 136, 324, 200, 141, 252, 248, 253, 313, 
        249, 254, 250, 255, 318, 251, 256, 257}], 
       Line3DBox[{182, 241, 246, 178, 237, 174, 233, 332, 170, 229, 166, 225, 
        328, 162, 221, 158, 217, 154, 314, 213, 150, 209, 146, 205, 325, 142, 
        201, 137, 196, 320, 132, 191, 123, 186, 245, 247}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
Py0WCco=
     "]]},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Sigma]\"", TraditionalForm], 
    FormBox["\"\[Alpha]\"", TraditionalForm], 
    FormBox["\"\[Rho]\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{476.4765625, Automatic},
  Lighting->{{"Ambient", 
     GrayLevel[1]}},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.2, 1}, {0, 2}, {0, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.221063039763951, -1.7430548741891603`, 1.865110902589982},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6464055563773117`*^9, 3.6464056737718773`*^9}, {
   3.64640573702568*^9, 3.646405801096657*^9}, 3.646405833992259*^9, {
   3.646405931055196*^9, 3.646405961098241*^9}, {3.646406073004846*^9, 
   3.646406081294437*^9}, {3.6464061559672213`*^9, 3.646406204481382*^9}, {
   3.646406512949548*^9, 3.646406531545368*^9}, {3.650041542826109*^9, 
   3.650041553634326*^9}, {3.664136240561203*^9, 3.664136270443584*^9}, {
   3.664136463197757*^9, 3.6641365404309*^9}, 3.66413660869162*^9, 
   3.664136680433628*^9, 3.66413672377855*^9, 3.664137007905097*^9, 
   3.66413714610507*^9, 3.664137422683305*^9, 3.664137595163026*^9, 
   3.664137775062071*^9, 3.6641383790227423`*^9, 3.664138521192786*^9, 
   3.664138715084319*^9, 3.664138879946274*^9, 3.6641392151707287`*^9, 
   3.664223730761664*^9, 3.666373417871673*^9, 3.666373512381504*^9, {
   3.666373599714779*^9, 3.6663736129616833`*^9}, 3.666373658058425*^9, 
   3.666373697920157*^9, 3.666373742197365*^9, 3.666373774453936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hsp3", " ", "=", " ", 
   RowBox[{"HopfAnalytic", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"\[Rho]", "/.", 
    RowBox[{"Hsp3", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.66413987406355*^9, 3.664139939531455*^9}, 
   3.664139986255323*^9, {3.66414001812741*^9, 3.664140034529365*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
fB+ftX3fU3/tPrm3OeWqomI0fgcT7iy/GTLlHkmQuDObJy+cuO2YbdPo6Eae
p8obqNh8ION1JioadUaT7Tf1OtRtrhG+m8RQcZYXURZO5uEWiibZQo0tv68/
IeLj+7NXR91igzf+vfNPFFj+6Rf72w+yxrqzr03qLHw9NZrMu+W4ZVXvK2K+
OaXen3WVPRj/lLyemUyK+W7vaey8QOS4NH9HbXxBHPTOStndTCV3bOed1fX0
IkpnHTQH418T6+nZFlx/yqNdF4+8eZY72T95t+04u0R20M+jYnaGadhuOJ3p
61AjiWzW4BLV1+PTif0qW2ddTx8iEHnz2Ba596QtNTPPNicTy3//1LOFtYcT
2C3h1nYBRzNI0A1brfvlPiRj/pTiUQPxxGWb5EuFeKYd83z1a3ecZgJ7w9mQ
PQETmXqUOj304Qs3Nrt4zop/FKx/kN6pgmLmWT4kkpPP3dT5nj2L87YjRiCX
XOwOuesy3pcU9fsKldR+JO7tkx8orP1JXuks+JjyxIcInXGeJtH3iUyYJK1j
GJVHPGrni5tv/FMfHfMGq+Z9JgU5l7QMh34R1Y3zQ11ue5NTF+wXzl6UQkxZ
GbUxV/NJ/6iQk7rCPqRkScv94L7PxLi1UZiLwyFBJ4MlzTd6k4aPp8rZgylk
JXuWA2dVIbn4/UC9TIIXuWv3MikmLJYd80/2a9vA36TcKEj3frkncTHhrPKL
i2FH2Nf+jplSRHq7Mrc1OnoRwx1TPNw7X7Odu1p/6cwuJlsd+CJcbnuSKWLs
Q2ToG+m/zns5vLWY3Nmwf0djpwfZbGmw0nRtOhFR2vtDZ2wpiS5Nt2jsdCdx
3i215U8ySNqEnVNTtpQQO/79D11ue5Ck9Ou2G+Wj2ROWfN1n5lRKLl5Pf+Ry
2528+P05L4Urk3C5Sj9rIGXY7mlK6KnkRmeS8kf841L2lpPue/u6ZRIuEI7k
k0W+xk/Ybrcax6fcKiPdL7576HpeJH1i18W2jXvOHlRMWSTzvpykmuxbct/q
Arlqcch4nlwk+0t2j1u4bwVJNeR66XLbjagX+vPNS8kmgSk6ruHRlaT7hPaK
+1bnyXmLPj7eHznE6cW9nWa/K8itgaE+GZYbOT/fpXMC70O2gP3cprPcVSRV
XdtfV/g80Xqt/ajy1z32ep930imcKuI2Z/C1y3hX8mHbhYWj34WwRdYtCW3g
+TNOaEpRNs9yIW8qkhWvt/4g1zU+nwmfXk26t1spmWedIwm8rw9dV/pBFkyR
OhW+vIa4ymvd0PV0IdFvz0000v5JnhdJfdRRrSWN+3bUFjScIYtjfkWZWFxm
b7b7XX52Qx1htyif59Y9RV6Vxk8bOyaftC6Tqjq7r5b8fKv6+YrZGTJhjMz4
ySq+7EgbqY1mnnXkwbKOnbHhJ0nla2e3LF8ndmVqZ2CDUz0xvKyUfcXsBNFU
0bMRzzcie/2k3us8rifHv7O7CxqciHLu3awg81+kUE3OvkA7mv5MIguXG1wS
GeeK7XOctmzm63Mp5LSukVelzBF2vWWNkpFONNm/lu9NwMZMsuqSSZDy6eME
uOUchW0F276R7w5+W+KtdmP7z1rnM6BAsolivWDK8kJb5Dm1SePtKnLJuV3X
fX9OdSW6V815uOdEEz33C2cMnX6R+2u27fT19Ua+3k3gOyfjJ/G7aeZZpOiC
+d/xxiUowLKARJ99H5Gz3h15xHSDEgXR32Svl2jzF80A/L4IWvBO40ovIfct
qhbVf7iGXPf46dcKzsXEwu9UiNMuX6Kyw3PVFa1oEu//djLXx1LS7JiuK7TG
H7ne093ZtvLlRGnLE0Wrs4H4nbLv/+jG2VVJdrrmfDxgcwu5QWSXO0e04k95
jY57eYX5fn1LntMcs7mKrL9nJvvo6jXk940UdAwfV5POrKo7x21uk/HKMVcV
1aNJfqBbVUx7LRn7QSpZo+gW8i0lh7cG3K0hLq8e1caY3UAedY1VEVNZRxaH
5XRFvAjC76NEVXmggn4DyYsbP/ZFwU3kB29HKRq6N5H0w9MUNYtCkC94fnpN
gGYj+b3OuOmT+l38nlrsKfylo9dMlNteXNmUdBt5RrvnAbPqZvJE9vGCfSuC
8TtbP37BMhnxVvLw0NF01XDmOZfZy6amWLSQQjf/NyGLQjF91urduToXWsll
sver8qQg5OMcQ73CZ7URvkiFsSf2h+L3es7dDbvNjNvJw3GPate+YH4vz4PU
8Sn/tBHj/U9YQsHM991gTk26zvd2Yj75m+ME8RDkll2x/zQ4d5DKLaP8k3tD
8bt/ZpKNa3hwJ3H5Z8rJcbFMeke/9XIprR3klWOJyrw59zB97PhDqTpjuv60
c6ub3lSEII90yviik9RF9Obt2BWjyDy/IEtXMqW6m0xRkAycvC4cefWxH1Ip
C7vJ5cXVzXIvmX6IXMYiEzOLHiJ4cLrW5rH3sb/R2VNVdVa8l6zsffh1ex7T
D1HavE5DRruPWGtcF742Owz5tu3moiluvUTPReWL2iCT3uP1xw1m//QRw10T
vzzIvod889MYh3DjfmKt5Px2yTymP2OXu3eN2ckBohV/nrU4iXl+rPTMwIZv
/WS0lWRGXx2Tvj/IcLVZ6wBxe6HWNKE8DPkdze9XGoIHyZfwyGxr6XvIUz3n
/jqbNERyNUym5H4NR67a8zygQW6IhHye1P5c8x6WKxgPWvM8/pj93Ivt7LNj
X9z2W8x46p7Pt9pNOdgOwLjM4tWrsabe59gwLrMblTnvvpUnCe48kqBmk8iG
cRn0H5beHSM8WTcB50FY4jmbGzt9SDB/2Vk+h3g2zHfIRB2UMM/yJpFpv91z
bn3BeY1DU+elpKh7EbNR0h5fTF+zYf6iVCNDznyjB+nZ19r01CQD5ylS93zP
SlG/SOzWpvCesMzC+YjUhTenmmedJ3zaEx7fc4tgw7yDm9KNGeYbzxEjufuu
F7x+4PxCw6rLKVfMTpNxW0xXfnych/MIvJ7eNrHhx4mdy4JFsfVMOw/zAhP1
uQ/tbLMj+prJha//tOcQ93u1yOrSxxXW2G7DvIDR58TEPZZMOw9xPzGfwCK5
aZex3Yb5ArHFPeEq/3hjewtxv+eS9yKlky9juwrzAgYNZxJOet3A9hPifpcP
9Ch1ql7D9hDmBTzcNnzMKWLaSYj7bW3MEZoty4wjYF6AwzPrybucYCxXEPer
bjw3mu800+7BvECFHo9XsmQYtj8Q99sqYLkutOQuthswL3DZSVOkaHcwcoj7
5UUtiJxayXCcFzjlwhEtYdoZiPtFH1T7IJnOtDMwL7BwqrWLWhCTHuJ+3Iqe
0+Jiw7GewryAB1+lztixTP2FuN8o15hOrw6Gw7zA7d9rxnN2RGB9hLjf1ZPy
R5flMPUa4idavwIsrZYz9RriJFV74sc8XXWfqPzcwsudFoVxlYgTHxe+PR7G
hvjSwXuBr1zGnycaz5M1361NZEO8KMhTIMRlvA+RW3eOy8E9DuM/MF5YsOeQ
gkInmw3zkt9yBYwbHX3Ip6fVOs8z3rFh/hHiJ8ev11jP1H/DhnlGZWW+ZhmW
J1HNPLpgo/UrNswnGhult8uw3ImSfOLEI6aZOG94R3Sfj67wBXLXJfEle382
zg92H/ga43LblTxTfBJFzubiPKBEiWWgrrAL2SloryZ09yfO9x2v9R2r5OJM
pngeuJmlsIcN9Qjm70xlQv3aHjhj/w3m6YK7znMu7HTA9g3m3T4pBy59fzYA
6xfMu82yf3+e+wbTD4H5tQk8zcT09w2sFzCPtt7ZZm6m9U0s/zBfxvI9sWWO
8h0s/zAvNpRReFG/ginPMP+lNvF7Ea82U25hnqv/Y3cVjwDzPYL5LNnRR/eY
vmM4zFvp95j1rrvDfBdgfmrZvJ/nG3vDSKhWMKf8hwvGJVivHM37L1TQcnCK
fCyROqs49xtRkjTKfT+lmoTnHQ25vcyL8E9y+/Xa/xORkI26ITOuhCyvF8oq
/+FGsm259hRkfSHmqUNPNz0rIz2G9cvH/0+8GuKlulY7yfVwSyI1jmP29EoW
xlE/3eyOlPuf+Szg1ROPpY37w4d/MvNf6vZl68f84e6zVsss/B8+L61xvtaS
q+Tx1gBlk/3vmPTcq3fo/uEe926PZv0Pb3f/rD/2f9YnAE/0v8/68D9+gPs8
1TAM/5+4JfBLukd9o/94+/3AvXTqH2/AbSSMJjr+8RZfPkk16o834Hf3eoe8
+ePNY5LW15I/3oD/l7f/8vBf+f8vP//l+b/8/JfP//Lw//r3/pfn//L5X+UH
5jEhP5uXPw5IOfSdXH9ctJOL6wvyOxLtT2p588jQ3/9+Iz9F93tmFc7pGxoq
QV4W+zDde0EDCaf9DeCftn/5PiW6iTjeDGoZGqpg5klzUnPeS7WQlTR+CDxV
uVhq1ZLWP/0LoeqhIWYfqAzf6JrTh9pIPW3fcJ1b90r/tsB2Ei91pGhoqIE0
sz0VlVyOkYGKGRmeLz2QQ/ruw7nFquwOnM/Ffoj9eLEPmT/QA/Addabxa36V
kEM0Hgt856veq6KNlWTUtw8TuLhykDs23ehwXlpHXtPvBfDOsN2/d2o0EbNl
14W5uAqQF1q4vp9v04KegS+n+0DBM/D7xtKLX3xsR8/Ap0k7+MmYdKJn4PsT
3SsmFnWhZ+DyB1VuRG3rQc/AJUpvy6/53ouegSu/uVU/ZkE/+gS+8JLtc6Hg
AfQJ/bRdvtxuciUF6BN4p1p51pHnlegT17PVTHZzlGhAn8DN5i1U+6bVgj6B
n8p+mfTkUhv6BC5ChL1mvu9An8B30P2h4BP4uKwH3nIve9AncK+kobgfHn3o
E/d1loxrv7p2AH0C/8ZaYFfNP4Q+gS/S7dp6cCsXC3wCn3ro2ddzytws8Al8
dc1b0YI2bqyn0I/103kpvFSmBH0Cj123+lb3n/E9+AS+a+ur8TZ6LegTuN6d
+99/bW5Hn8DVeq93/pLoQp/A5VtCH//y6kGfwAezh/eNgk/gzcvNLjznHUSf
wA+WeL9tEuZigU/gMzNHGXoIcrPAJ/C2gx0/9Pu5WeATuMAz69gtNTzoE/iL
FQnlaem86BP4kCin78hzPvSJ6yFVNnpIHy1Dn8ArnF/dSS9sRJ/AB38qx7vH
tqFP4Am1gioNc7vQJ/D7/mYXxi/pRZ/ALWsbu07wDaBP4Gl0Pyn4BL5x26zJ
J3q4WOATuD1xfTduPA/6BK6+ruafo1q86BP4w5ZG4YML+dAn7pN9lRR1dhE/
+gQe7vvyIEdXAH0CF0ku3HV4piD6hHFQ0FVvvs77FegTeLLSjKTZS1vQJ3Dt
pfwKX8U60SdwvyFus0XVPegTeOaS4mQT1gD6BB7fMXHJ06lcLPAJfD7dZwo+
gYtsvdX79DsP+gSuuGlHWKAgH/oEHsZ/e/IVbX70CfxC0L6obxsE0CfwBpNV
q3r3CqJP4Pm3TG8dOiqEPoE/eD6qnuUkjD5hnLhWKsZQN6YKfQLfJOP3+vhQ
K/oEvnqUk/2Gpd3oE3jhxTurI4/3o0/ge9aLrT0nysUCn8AN09RVtR5zo0/g
J+n+U/AJ/GPE2DYFLz70CVwzIHhWSB4/+gTu1Hs4JHiMIPrEfabXi0KvGwqh
T+Afxt19s99eGH0CX5SXZ3vLVwR9AtfidO3cGiaKPmEcHapYK6D2uAZ9Ai88
XZbc/LAdfQJvOOydfM+yF30CT+XJfldeN4g+gd83squ22seNPoG/1TnW6Ded
F30Cf0b3pYJP4At1CiwcZgmgT+BBls2fFK8Kok/gKufMgkorhNAncHmxIgUL
FRH0CXy2sI3HKwtR9An8jWrjeXdfMfQJ3PlA81OlF+LoE+IMQmtfGtd51qFP
4CcODNTpLe1En8AjX0WsWHqoH30C55etMR1zn4sFPoFPO+XfmB3Dgz5xf+v5
3jR5Pz70ic+h+1XBJ3DtyXuun/giiD6BX71n3bJMXxh9AteXSqp7GSqCPoGr
clakxnaIok/gcZP0S+7qiaNP4OT0mh8znSTQJ/7edaqTMv6RRJ8Qh/GXOOml
bNyAPoF7TD1wujejC30C5+y1OXz44CD6BG7s8vmS+ldu9AlccaHP9q4+XvQJ
vMTTz2lWAz/6BP6C7mMFn8C9r22/OLRBGH0CXxKvG9eZL4I+gYcLr0ibs1YM
fQK3ernJv+FPuQKfwL/uMzC4ISiJPnEf7qXkmEvKUugT973GbXsj+EUKfUKc
qmCS9t0nMk3oE/eBthyOnbK5B30CV9t4/vI6DS4W+AQukCE6+d6f/gb4xOe4
HkiyncePPoHPKup/eG+JIPoEfonubwWfwO2OfWZPyhBBn8A16zxcHW3E0Cfw
pMawTUkN4ugT+IXHTvtOWEiiT+Cv3r2sn2AphT6BT2Q9HeUtLo0+gbf2nz1h
GiWNPiGOZ9G2dUaWRTP6BB52t+zonD/jBfAJfP9jG4OfU7jRJ/Dy5HUeAdx8
6BP47N+dcsdtBdAn8K5PJy9mXhJCn8BZdN8r+AReuqA199gyMfQJfK3KrvrT
jeLoE/jDFW9uz3GVRJ/Ar5SJxd47J4U+gS/PDPiwdIE0+gRe3xWROqqe8Yn5
aVfZ33ZDBn1CnLNfcuwES+0W9An8Zdw6lg2rH30C50p8YOInwYM+gSve+tHz
axQ/+gR+fM/imVJ3BNEncL9DS4Wzc4XRJ/DrdD8s+AT+UdX70+rn4ugT+MTO
Fef275dEn8Bnylq/PXlRCn0C19ncvrFxjTT6xP28ogmxouIy6BM4u2bW6MEk
GfQJPLwxgO+l4yj0CXHgI5Ff/GMHGZ/AI64Iqr5+PIA+gRuY1M2X6GZ8Ak/q
/KivNVUAfQI/Lbctge+TEPoE/oG9utxztCj6BG5E98mCT+DRZbpqkbKS6BP4
m72v1GcekkKfwMNqC2Jvr5BGn8AlA+JvvBktgz6B++cXGozlMD6BW3l4OHQE
jsJ87oB9TyPiOTzOh8S4/3j9zPWz7bF6HY7jltF5Mb3fczft2ViH4+IL08Ir
Dv27zvrRDUeXP+nhvcC8zz9G0Z/8Dufie1kUvcK0IOYb0dg5hh3IX4zjoAga
T1g8Iu7h5Hfkzb/zZv4qb0zCRJi4x0r6/K/WIa8npLZjfrTo8+3Cbd6P2duB
4/RMGjcL3/nIcV5ZB47TD696RK78O183caepwvJOjHvI0Dj51osCYl/9OjHu
EV0qpmQUkERyJv5wvf6hE/9emLeKDLgS8vkjB//e4Z955Pn71esnrarAcriX
rmf7xup6mL6mFr/jOl2S2f/OB1p/cCYVKo3YzxSg8fkLXBnOS/9pxnHQjyWL
DV7bZpMdtyZPrxpg4kiTaDzBfETco3nnk/p/5xWvBooo2Uxk4h4JNP9e1odm
hRn1os/LNP9X596d9m1zH/q0oPm3P33J/tKf9gp8atH8J+RplF6QHkCfXDT/
X5vn8QWkDqDPTJp/tmRakpjdIPqEeYeUF9eCfa4Xo0/3eB/Df+dVJq3xPecR
V4M+D9F1gOvl83KT+ZrR59MvRgJ2nCJy7lDdlvrjrejzDJ03LPTWuXfHpR19
rpU9deLf+Zx3dTkh10kn+vxK4wn9I+Ie0fLtl/6dd51/85Ld8nMD6PMOzf/2
PT7JZGAQfbrR/Lc/tBewU+XCen2Q5n/sUbFvHslcWK8f0vzfcx/o52zmxnrt
BPmPiLrT8IOJIxnS/P9euTqkZw0PtpMw77nZYkxvCy8T91g6Q3X3v/NOKTtt
SmYlNKDPmXT95Ee+2hz7W63oc/hnOVk66uK53S4d6LOPzgddvXdrskgdE0cq
O2L249/5LvuxltU53L3o053GE1JHxD3sz/n/8++8tIJBJlf/eybusZXmP13K
SX7uHW5sJ1k0/yd023rX7+NBn8o0/1zZuU8Hp/KiTyma/w069RXrvvOiz26a
f+Gzj6WrbPnQZzHNv5FbRNJoHn70CfPCHfMeZPYSJu4xdOnzqX/n5aRi1epm
xTejzyq67rTyycf8S1wd6DN9roXOv/PtMx1c5s1e240+X9N5tC7NpgdfJfvQ
ZzCnu+nf+cAti3VFHY4ycaSlNJ4wb0TcQ61W4+O/8/Z+ap3Ns24wcQ9Zmn+Z
MUo5u/150Wc/zX/62JQrdsf50Gc5zf93y3Mz563mR59pNP8njDZP7ZMWQJ/R
NP+PDi9gO6UycaQ7NP/uMvNWjTvOxJFg3nzSS63rS0yYuEdct9X1f/clsCQu
xGafY+Ie9+h63Roli1EHlnWhT++ggXX/rkfQqd2/S6G1F30epfOPjl8NLs3h
HUSfwz/rieJ256/qxkwcafhnE3EeEfeo3phW8O86/W3kvc39LUzcI4Pm//v7
Iul6aybuEUvzP/XTi+qOvQLoM4TmPyRFe07JRkH06UHzX6AQvFVGUwh92tP8
b9WftWn/ABNH2krzXzWJP38/m4kjraDrCt56sLhyNzBxjzgt7rwY2xbCjk8r
GD2LiXvAOmfLtaZLFO160Gf4+W/RtpxmUu90otPMcQB9wrztta3++q+smTiS
z4+b/gqGzUTy1j0F00ImjrSDxhOejoh7DP9sIQ7We/euGuJn4nI0/37vD7p4
qDBxj7c0/8fr2h3tFjFxDw2a/9JyCYPNf8b14DOM5j84Qu3kFw0R9ClH898j
k86VJiXKxDlp/ovvBqj1VDBxpPt03UV/y7tjs+cycY+xFelWnJg28jy4KVMm
owN9wvpwHu67osrn+9Anz7w7iwMU2ojm3FPbPUuG0CfMd8cZVq/RTGTiSLVe
1pMMA1pJ2cV0m5xNTBzpHY0n8I2Ie2gF8HooGLYTwXSR8XMCmbhHOM2/6SYz
/k8/hdCnPM1/0Q2J1WVDwujTh+Y/5Vrs/UmyTNyDi+b/VqtaguYYMfTpQPN/
4NGnvbqi4uizmub/rtQ8t+oWJo7ES9elfIvLM9nMz8Q9jv/NVweJMtVIebWL
iXvAunqDhw/blroPoE+L+v3fY2w7yKuVBgrqE5i4B6wTSMrM/PJVnIl7rCS6
j2057URpx5P+b++YONI4OF9rRNzDzyBL1jCgk4yOe2RsNJ2Je/DQ/BvG/Hr4
25GJezjS/K/k8rOveiGKPmtp/tlbK9pU8sTQ5w6a/zSvxVme9UwcKYvm/6zB
Re8VLUwcyYDmvyzGzkmjmokj7aLrdlzn66zT+NSIPnPX2J5RMOwmy8bcMVGu
7kafsB/hw+/lZMXpIfQZHzLfjBPTRRz4LM9MJEzcA9ZXGDjrVPmu50OfEW38
8wIUuoget8rnq+ME0KcTjSf4jYh71PeGhNpyuonMoNrhuDAm7mFB839rZ1wm
S5iJe+TQ/MtN2rVysjET91hJ8+/HfWO/ia8E+nxH83/YONOz4wUTR9Ki+T+2
YXqG2m4mjhRO8398S1zI7EomjsSm65qWTTkrd2EhE/eYzaMnahjQS15uHlMg
vYeJe8A+Dq/17XyPopg40oS/+eohDR4fHEu28aJPWJey29ZzX68XE0fie5iT
FGPbQ6okr6yqsGPiSD9oPIGMiHsYPTukEaDQR2YKm8+eI8/EPeJp/i38G5oS
LjNxD22af792gT2XGiXQZwTNP8f5zJj6cUzcYxzNf/m04gvV0UwcyY/m32vm
6sBTBkzcg4fmv1SPe1xEBhNHmkjXfRmGB7Rtk/ifcXqMSKAtp5+cPGnhHJ/f
hz5h/8tSa8ktXveYOJKz8E8HBcN+ImfnPuOkPRNHgvU8MmOy6vXjmTiSpfm9
DZyYPsKtlnRnTBwTR5oD54aNiHs83K0fF2M7QGKTljwTuMDEPSbQ/B/W+7gv
W4KJe1ym+be8dMlsrz4T9+Cj+VcdnHXyRQ3j04nmX/xRpluvFxNHqqf5V5sX
ffnydCbuYUHzz/a1Wnc6mokjwbo4ScPbdVkcxmfj/nyFAIUh0tqguXzeCibu
YUn3De103BHU6MfEPX6+v89tGDBIxK/urHztwsSRVtF1UJHTVlYZ1TFxJPbf
fA0QN5W5G/W4RNDn5f+Ie/DJi6/kxAyR9yoGZUtqJdCnE83/m4mOKhuWMHGP
Bpr/1flHk8S5mbjHLpr/GYlrVR5HMXGkXJr/XZn1CxrMmLiHEc3/7H4Ne+0+
GRb42RaWZRVn+5iIvA5f9lQlFf0U0nU+8+l5X8AbKF9KOXhbQJ+jY7WQN0Q2
l1kHQuMh1hzzi27LCvD7fhDiJyJOVVr1Jdj/lKPxFp3+h37PNSpx/Dguc3id
0hp6rgj4CaC/95t+aWzuyQocj3+i+fxIzwEDzv92mNdTDt5k6HP2zzQ/cl2v
BnkSzX+uQ3v89cVNOH53o/mfWyNttL2zBcfvU2j+9TY8SrWzbMfxO6wz7Ew1
WcnJycDyeYHGWzwEJWI//VOA6WH9YajslmWVInnIYX1v14u8B0trCpHD+kMt
PcHHk91LkMP6w3jpmPmrCsuQw/rDJQ/kG3WFKpGPpf3AxLmmFboy1ciP0/5M
xYzAC/I8tchz6Xf56oaSqXcLmHjXbPp9yV25IWzJ/Qbk/rSdjFb2aHiygzl3
oonW90drB1nHLzQjh/WHUw4q7cnZwsybF9L41SN67hbwihHncUF5g3VrAw9K
81aZF2L5PE3960+90941jlm/tJzGzebOajxcoVGN5ROeY7r/9LRedjE+fxJ9
v1ejXtub/PEGfCONy61IV9I7/qsex6fwnHf0/C54fjyNpy2snbj4nn8NpneE
+whofBLSu9J44NZruhUGn5oxbgDPD499dP7Tt3KsR8AnNUxZZPu9EusRno/H
P9bteVo11hfgnBH1BfhUHt3BB0n1WC+AT695SVayG7FeAA/ghD6OMm9GHk/b
T9Xgu36+AaOwnRei7aT3j6vBqnNlkUP81mbHmxsu62VZ8N5hPZs9PbcK3iPw
Pfu8yq+fK8X3AtyrzHHGGfMK9An86tJK1izZaqynQYNv+tUNA0jCgVVcpaOf
sOH5vyi3CO458WXrUzY8/y1dV7mfntcEvBfOa6Icfq89fU72Qo/VA0bfkTvT
dulcdsetXSsKsDx8oz6f0vID73390PBzeMN1ZV+UZyOfRp/z8GzLRPf8EiwP
t2h+OLP/73Z1Oc3PpG8i3lXBH/C9W9Ln61eVP9CW/I7vHZ7jRM9TAg7tdifl
8B7NxqfsFpa6RraXbRYuT8tHHkbzqaXvYy3RWY/+8Xyq9Q+O/y5PwvoOfB49
NwbfC+WO5yJcrYoy8O8FrjviOwK84NtkmQVzS7H8Aw+m572AB+C9FgWtBpEV
+H7xXIgR7xe474IxbG/Nn/gegWfQczDgfQH/6jXR8OTzQvSJ+RzhE88F2t/h
um0+E9+4Q79fETnL9WJ1spBL0O/UnhaLY6wxP5g4PC3/B2k9wnaVljcy4rsv
QJ9TLD5JR0y1BDmkF1q1aAv3lHz8vcAnPI3Qz6tMx/Sj813qCrR8yYLNuzd9
usFmg2fjwyGuDVvPEucNJj+Futno5/iSTo8dEh5EfrKNxtcbzPd0cr3V7W0L
PAj3HQmDnIOJbMg/nBugR88NgPKQRvcBDawZ3gcE5aFYw2zUvEluZPQXAZMx
vg/YUB5YdF//Z9nhff24bpDug2h/MrwPAt77xJ76SYFLvYnWxkPSY2Z/wPce
TM9/kHg8fP4DvN9TdJ/CTbpPAc4PEaOeR953A/NKCW/M54do5uP5LcBfzjtV
syukFM9vAR6VLFcsfbwKz68Azuedb+n3vg7PbwGufW60o3FkE55fAVxhZRnn
0LMWPL8CuPyXwG3Hj7Th+S3AZYpeByz/01+A8yuAC8ZekDL40onntwB3O/Pw
V71FN55fATw86KeIRHMPnt8C/NeKAB3p43143gjw/Sv19kp39eN5oTAPddU7
MtdTphi9AT+09+yO6sQq9Aa80c3KMfpDA3oD7ut/Qez0yRb0Bnyl3Bv18z/b
0BvwH4n3HzULdaI34BbGud7N47rRG/DLkitfXZftRW/AD778Vfiytw+9AX+o
uWZ7TMYAegNu2zHQq3VzCL0B93uu3in2mAvPYwHuIC3qccaNG8sbzCtFbGqY
njK2DL0BT7QKlHi0uB69Afccd8I4PawFvQFf2LQrnhPWjt6Ah3yzXXhmcxd6
A645NVLnfkYPegO+8nZS7BnFfvQGPOfk9LIes0H0BnydeedPqUVceN4ycNFZ
E3SmLeHG85aBt3n3vUvR58HzloGnpdSrsObwojfgd9cXdTtP50NvME/k97n0
0Yb8CvQGvOCy/CkhzWb0Bvw2W/lVsVI7egN+fJv6oK9rF3oDfv5d76swl170
BlxszfiVLDKA3oDLlvZwH0ofQm/Ay1/FrG2YyI3nVANXUNeuzFvOg96AG2W0
PRGw5EVvwKeoaH/a6sCH3oBvFDOWJGf40Rvw37oX7+e7CKA3mPcx8Xhm+nxv
NXoD7l32OenDuFb0BlyUx2m/nUsnegP+NbPNPUSrF70B3+46hv3FYQC9ATez
1EkXnceF53sDfxS61kb1NnOvDfDG9AKF2hrmXhvg617wmR9U5kNvwA97XPO5
Y8qP3oDzfhyzLfSsAHoDHt+rkjXxDnOvDXAL1TlWps+Ze21gHqdkefA+5++1
2O7BPE7JiHtbIP01fftVufXMfQeQfvGI+1wgfW5fzCXLt93IIb3xiHteIH2B
9vbB72/6kUP6vSPuf4H0PzJcP92bzNxvAul7RtwLA+lDvx8IOPGG4ZD+5Ij7
YiC9RMLPsrC5DIf0O0fcIwPpTd8knJC7zXBInzrifhlI3zOwkte5kR85pH8y
4t4ZSN/WPz141GyGQ/o9I+6jgfSqnI3lRgcYDumFRtxTA+kDndSV2gKFkUP6
3yPur4H0d3YvTXF6L4Ic0h8Yca8NzFvJqRb1T17J3GsD/MivF7mfjJl7bYCz
ZxVPfVLJlAfgLeNcuha/Y9478HsFgo2ct8y9NsBrlsxUH+3B3GsDXNpmRTJ7
FnOvDfC3i8armycw99oAX6k8xdBnPnOvDXArmYLgxaHMvTbA44YkP2/vFUWf
wI/znNGUWMHcawPc8K18Aa8nc68NzEP1Xa/KNXnJ3GsDfFNr2nqJTqZ+AVf8
2XpauXQQvQHn++o0x7SAG70BH9geK5fbyYvegD9viRf9zeFHb8BXqM1S97sl
iN6AC4huUpimx9xrA3z6r0fHY5JF0BvwB+2aqX76zL02wF2Nj6QlR4ijN+At
QWdDY7iZe22A1z3RyrmhzNxrA/NKFQcej/KPbUFvwEve8qRd9epFb8C7Bdhx
c62Ze22Ah83u2hPdztwHBFx1dvZEUVXmXhvg63+0NLcpMvfaALeVmvH5czdz
HxBw7YQtWa6RIugNeNHBdxKxK5h7bYCflgs70/ddHL0BD+hbdz50OXOvDXrw
elk+2oS51wb4ti3TvZfzM/fawDyRdOS2oK+vmfuAgO+VkE37Ppq51wb5oHpZ
iClzrw1wxY/H7XYKMPfaAC+Z5dH9eAtzrw3wKUsd3obsE0JvwL2i1iTlrhFB
b8CPeu0N4B7F3GsDXOLX80S1eHH0BvzX+fG6CzZLojfgNwa0qrYdZO61AT4h
wvi3wgzmXhvgQSZiz105jDeY9zG2vSlW/pz5PgJfxeG7XBs4gN6Ah/bYh0oa
MPfaAC/5sYFvtgxzrw1wh8ueXJHOgugN+ItXIQWtocx9QMCva1wPKbjF3AcE
/HCQvXqevTh6Az5mqrWm5UxJ9IZ/Fz/3ldx9zL02wH2f7HnyVou51wb4BdGB
rSktjDfgcWdkNOUjmfuAYB5HZJ+v76Vw5j4g4Do3lsT8lh1Cb8B55TYsGKfB
3GsDXFNx4+NieeZeG+Dnr2jaZd9k7gMCvsV5is7nXOY+IODS5QtnpRUz9wEB
78+XFBT6zNwHBPy4/gqxuSuZe22Acy82eKE7lbnXBvibRZw892bGG3AT+Wu1
oa+Z+4CAazSLT3h8nLkPCOKiryYJx1ldYe4DAt4iVPNp0XLmXhvgoTu6SvRl
mHttgOtOaPLtGyeI3oDH3Uxa8yWKuQ8IuE9gEl8urxh6Ay6zTdj1wBQJ9Aac
54GA9WxR5l4b4B+iLtaN6mK8AZ/idtU77gfjDfimWe89WJHMfUDAjS0X7tc+
wdwHBJx3dfvYBn1Z1um/cfBEAnGS+S8OT5xhnE46/q7vTEW+yH6aSfiMPBLz
d51iJvLv5MV+nwm/yZG/6+1+IG+0Cy+PDS8lGn/Xjf1CvuF0aeyGwAqSTeNR
wLPoOuFZf9edlCNPvSJXf6CwgVz6u36iEvneVysHV7KaScPfdQDVyHnart9M
92khq/7OZ9chjyw2a5qd20r++Tsv24D807qFh5TGtROBv3HzJuTZq/xtNM07
8HxUiIdk2+vbyTuU4PmowB9OrOOZcLESz+EBnlK0xXtRYy3eOwD8fNlXm962
RjxXB3gGXYcM5+oAj/2pLSxt30nXZ1Qz6fvH86wV6abrDGqRv5X41My+1UPn
y5k4j12cT3rRtD48Jxa4Z/CyWZn3+um62AyMY/TVSYcMpNXR9Z25yKfz27FI
cDNdp5iP/IXG7f4W8TbiROOBwG/Sdb8//q7DqEa+TNzV6qXmAJnzdz1BLfJN
T5oOregfJAF/58XrkZvbcH3auoOLNTw/zcRbPE/u8Fw7n5s1k55rCvGEMQ2D
FxX02+i6yXzkMRM6Zd1lOvF8cuDj6bpZOHcU+OiEhvGdydwsOHcU+NOfk0wi
2DwsS3p+L/AwWbeayBe8rOF1mXk4Tn94PtFT7FU3Xc/BxAE20XWkw+sS6pn0
Df+snVnIxxqeX29k0o8TjpEu52fBOS0wno2k6yRX0XOYge+Q+C4XXS7Iihgx
ns2h49lJI8atenTc+nXE+HQTHZ+6jxiHWtFx6NIR481uOt7cMWKcuIOOE9+N
GA+m0PHguBHjvkg67nMaMb6zouO7HyPGcYJ0HDdnxHitiI7X2DCfQsdrNXTd
4+UR47X9dLx2graTMB55v7R+aqNDPWmh7STwY2ofAzuOdNL13JnIe6K2lgSw
+um6ZGa8pilw9uHN41wsNdpOAhf2ejz58RkelhZtD4HXH3j0kt9fkOVH20Pg
3rc8B56KCbPqaXsIPC13Vp6NowjLiLaHwA0UdqToZIqyHtL2ELj5lzvpJpPF
WXy0PQTeNWqxio+lBCuRtocwvthsepkzmq+LrlPPRJ6zTsw4xXmArrfORV7f
vm5j3kpulixtD4G3Px77QcGRl8VD2z3gWuXPLD7uE2FZ0HYP+P0q1a0C5aKs
eNruAZ/APny8cZ04awJt94BXdZ105n4qwTpB2z3gBpbzJ8lzSbHO03YP+v/K
O4vaxf0GCaHtHvDWxlXmWUI8rH7a7gF//oHHRHE7HyuHtm/A4yQt/TaxxFna
tH0Dbiz3LLLlnQTrMm3fgHtP05q/YrQUq4G2b8DbvPcqPPgkxZpB2zfob7ce
st08+g0Pq4y2b8Dn+cgHbZjLz4qg7RjwfK2A0JniUiw+2o4BH9s0oTLgqxRr
F23HgO9oHn1a4rw06yttx6C/KneNa/nAED/LibZX2G+faLzto7M0K5e2V8Cr
dpWpzJkvwzKi7RL032yWLnbOrZZh7aDzPvD91aTrWHz/rqMtRv4xZM+Xeu4a
Uvd3PWgpcpLjmeKYUEcM/65rZPoPLcohGZsONZIEWt+Ba9N1JnCuF3wHTVI7
ROWMC8jFv+sb3uD35azlCh12KqyfiMN2fg69h65iBF9C+Rn6HGi3BeMHbhcf
+UGW/V0n8R65otBZ6cf5v//06+m9D7R8PqT3tlylz4Hy8HXrUums6mK6HymO
GZ/S++ZaRvA1lDvQ58B7SX4m83mUZynZSPMD/LP82UNLk+sw/gne5py13ffl
NdzfFodcw7R32cvlydjfBr5gcmWPZn4e3mOC/b2ECyEOork4fgGusHnlhYx/
fmN8Brj1Rc05pq2lGOcE/uPtqy/5ZRV43xO8x+V03Qj0zyH9WvNzN8Vjq/G+
J0jP43XOaaFFM8b5IX2eluusOcfrMM4PXCe9/oSjUiPOjwC/nOW+975VM84r
AS8/cmuX9IsWnFfC9LNmXLPqacV5JeBDUyL3rtZvx/k44JueL1Nc59KB/iH/
nxKT8o0/Me8Fyi2PujGPs1Iuciifi0bcnwjlUDfg1swFWsz9idB/2OQTZi2k
8xs5fDctDy1jbeFh7k+E7+abEfe+wXek93SVwX1/5t43KOfcT3wfliQw9ypC
OXefrz1/XxlzHxyU57kj7lWEcvuUd1VKniBz7xu0M0GiytYmYsy9bzie+nbz
opZwLV03w4yPLKeELVJWYu53w3GH3DiLe9uYewmBn3AvtnHcX4Ln5wOvdlo4
4HioHM/PB36TT9Kba0MV0af1Drgqz4lXqXop5Mvf9UzRyLm8594WbDlM3Gj9
BT772fbbPrs+kI80Pbz3ixddVKdVhpJvlMP7ZZUtOTM49glddxWD75eP3mOl
MYKvpjyOPgfe+8MZG7oVJ78kfjQ/wFNvzQ3dce8XyR1RHsJpeeDQ50B5CE9x
slZzjiJO9DnAq/ukA42CiojciPawyXC4PYyiz4FyIlEZpL26MYYUUA7lIe3B
ozdjb73G50B5+GY2fM+UzggeSe+fgudDechLdObdYfmGBNJ8AneMW+qsX1yG
98LAe5Et/ZGxVjsOObyX9vLDst4mzD1lOM874r4heF/TfWZ/Fz7N3CsE72Xu
iHvHwL+Ca3Pc/qPM/UHgX3XEPUHg2d3QYYlrDXNPEHi2GXFfGHhOuzVU0inE
3O8D9TFixP0+4L9F8cUVvhqGg2ezEfd8gc+zSh+faAZyCOfvfs6P6NO1/sX6
sb8zyfy/+0I/Iee+EaAVuSCH3KDrWIBb0fU5m/7uY0xDvkxUwvJXXj558Xc/
5HfkYuL/TPj5nkM8aD8QuFKm48DZzYWk8u/+PeY75a3uOu/8+mIyryb3k4p9
ANNvSZ8ze7IfB8+9hPfbQu+VgHMmwZsovccBztWEcvLPHaueDcdc8LxKeC9R
I85rhffieXmb0aO19/D8TCgno+n5mT1T9jv2qjH1N1Mu7ahBLXMONpQTqabh
c2XhfEt4X/NHnG8J72vgoeeiqKowYu8Tee2TBtNejdZcYa8c5M4+9Tx0frkK
U9/LTu87mhgchOd/Qjlv2DBl22/ZQPy9UH5GXc4nXDmhpOneFO38d8fwe2c1
W/yUw9ImMvaGQUXPxQ3IYZ2PfWWBTuSri5gf4E3hu6xl/ud9Af8d/6w98H+e
//+bvvbvvr7fmH7etEztRNtqPG8Z0qd75Sjlm7XQ/XUlyBNK+c/8HN1G9Oh3
AcrDjF035b+p59F9jEXI9c5V7VuwuoO8+7ufrQS5jHDS23f7usi4v/uyypBr
kySBJOseum88Gcsn59CqE3tlq+l+yELkBwOnCJ2I6Mb74IAbWUY6ccT68J4X
4Dv8bqypXT+A98EBT529RLHzxBDdl/4J37v9mZNr0hRq6f7q78g1inuOtKa0
0H2Yhci90xd+SQ7so/sJmXUaLy6f0Jy5bJDuiytD3ln4UjrVkos1vL+rArlq
b5He+CvcrOF9SlXIv84OjNOK4WEJ0HEB1KPlpjuWXQ6qo/u9vyG32v3q1C2j
NrpvORv5CdX5TbdOd9H9ogXI7wXVnkgng3h/KH5/dzSfI9e5WHCuL3C5Tnve
T23cLDjXF3iicvRZKX1eFpzrC3zayZSSeic+FpzrC7ylU6lW4gE/6wdtV6Ed
+BZ6qmTc9Xq6Xz0N+eZ3Xd5NAe103zWzbmGz4hv1qKU9dP/wT+SieaNva2kP
0H2bzLqCRemrWxvquFm1dLwGnOO/ckePFS9rJR2vAR+9wuRT22c+1vB+sCrk
lxa0pW4YK8Aa3tfEzPvv+zP+X2AuyBren8PM7y8bPWcZ9xUhVhWtj9D+3IiZ
PcN7Ax/LiK6Th3a1me7HTKf1FPiL5TZ9kfv4WQa0ngL3mfpzwjZNQZY2rafQ
DldWFMQpW9SQAPo9Av6U7kN8TesvcAfLm4PutgKst7T+4jxm9y19kXVCLHla
f4E/iGTtrRIXYVnS+gvfkS3nixac8esiB2h/Ffhbui8vmNZr4LK1QrY/rARZ
GrReA9cK7NmoaiHM8qH1GjjnaGzk2rmirFpar4F/jljvKNkgxppF6zW024oS
Fqu9ff70C2i9Bv7xx2FTK0UuliRdvwq8lu5rc6f1HfjB9KHUgbVCrDBa34Hr
uzWFalmJsLhofQcupFEncm6dGGsHre/AH58+n5UxToL1jtZ34IampVmv0iRZ
3LS+w/fu9JZXOv7bu8hxWt+Bxy09MkbvFBeri9Z34FcEnnEtauJlRdFxKHBJ
uo/sEG0HgG/vnx06XV2YJUfbAeCtBkER681FWQ60HQA+irNHm71dnJVF2wHg
jvHW3530JFlatB3A/q1Qmnj5WSmWH20HgN/imdi2y1ialUnbAfiOT1qXHNfB
00WMaDsAfGIvR6L9IxermLYDwGdtjPjJfZyPdYe2A5j+q5v1oL0gyxT2ZVDu
Svd5edH2AXip+AYnL0MxVjVtH7Bfbdu7SnaXBMuAtg/Aq6c/9vNTkWKF0/YB
eBN7qcDPUdIsHto+AH/tvSZMrVWaZUHbB+DxHR8rryTLsMJo/uF7XXTsWtpn
/TLygD4feIVti2SbRzPhp8/HeS4thVDD3Baymz4f+PlHqgsuTWyj+1gSsB3+
RPcTudJ4MrRXrI683OOLq8k2mh7eVzzd1+NO00P+f6sYsgt2t+F9hdB/2NN/
aoFyTRmePw/86fvE0Y1h1USW1jv8u+j680MjxrlWdJwL67SBFzsedzcJL8P1
5MAzRpzzA/zipCGppecbcH04cLVHdQ0zMppwvwDwo1pJm0tEWnC/APCfCTpx
N1Rbcb038Fj7J7YPV7ThOnb4e2t81WVzQ4vx7wLOLx49KUy3AtfPA2/7pNSW
OLcG84/9tBHnAgEf//TosaR5nZh/4CUVNQKdQV2Yf+BByTF7fgx0Y/6BL3gY
H7rJuBf3IwCfwv187qx/mH2s0H8r2p+4s2eAOecH+FShE4af85vwfQHn3p/4
f7o696Ca0zCOZyXJSo5Z00jO6qImOlmXmaPaNGfbJnSxIavCULRJRLQpy0Ek
lVtjcdLNtK6VLnZE2O6tzdqwRG2OlnJLKTldVrX/vN/nmfn9+5kz7+953/ye
9/297/t8ZERP6qJ6CvDo3oC5xhbcL/ATEj8P+AJF/+WWTvbz0D3n5ua7kXGD
1C/wqg8t61oM9Kj+CDxpnn6MuobrmrE+jIxucvSpZ68OeO+InNAC/48UP7iv
WtP+6Tz7qKXnd4iTfh+43aLsF/begNd9NcZIueszihNcffr+8tTFXGeN9aGq
1jHgX+9eige8oXztOP2n/TQ+0nM9PJfuA+dMj3K8zn4Y8HMlRzsdMrmOG3lj
l8nuSZ4N7EECvyTxooAn6+/o/qF0JNWr4vvOV+J9BV8o8b6CN0q8r3TuJvG+
gnsI7yvyA3i5xO8KrpD4XcF/lPhdwQ0lflfwMonfFdxZ4ndFvn0lzvvA8XsH
4X3FuGHd+FPKfssBNXtO6Jzu9U7rOGv2u4IPv+L/u0MW+13pHO3OZM8uZ/Zy
gGcVztR1d7NXh+6FHlFY1q9kbwn4yexDrSW57C0BX6Cys09rZ28JeOzHQPl+
S/a1glecHd8u82ZfK/hE720tyZvG0Dhg3dul7HaI0rGfBNyvMevCnD72k4DP
y8/20AWyl5XODcPygrqC2csKrolTh3jPZn8y+OBvH6c9mMM+VfDtSr3it3Hs
FQFvflKX6VLDXhFwr6RtBvsG2SsCrv3L1+nL6WOpLhLr7Tf1posPl7InBDyg
yt3Hfg17Qmg9b+CQ0hzHnhDwsFGKgpvr2f9M54wdro0aY/aXgp+cbxJSvsKY
4qd7jIUJO2ZljaX4wa9YRXTODDehvIr1+ZEUc6VyNfs3wC/beOx/nMb+DfB3
q84fjzrFPmpwZzsLvbpX7MEA/153tlWXyh4M8Jzoane5yzh6LtbbIy6ZNVzL
5/xG51D9+e2by9h3Da7xCqj9Yg17IcAX2Waknxglo3awXnpfUxAf+5y9RuDP
7MMKnepklJcwz4Yt9dlg4/ZBvP9amqceijoj/B5c4xyTOlvbQ+sE8EUO712N
zvTROoTujeSmr7wq53pkcIWox0H74IbJt14t1f5H7YOb7lthuuXRAM3X4IN/
t40cdn2Inkv1Mkl2vRPPtNF7Cn7xyenWdlUXxQNuJOpcEA/4nXvbN69WD1E8
4JP7dofKHrCHH9zm/DovTQN7+MF3XmsqPvSYPXKYp26K9TDiB1eY9LQavemg
+GkfQ6WrTQzspvcRvCA190D1+x7qF7i/qENBv8CDfg59l7tpGOVb8EXxQZVN
J9iHDz4y/J9wlyL24YM72RVPvF/BPnxwj41Wvja17HnDvNNh7ts3oZ49b+BN
U8ID3u3hOn1w+adGeZE/++3Bq7xiCrWu7CUDt4gfP606i31u4JmivgPjAD63
PMYowWA4jQP42+B0bayK8zB4Se+IWNcIzmPgC0M1KbJjnDfAX7qH9Odc4Pea
6ik2VOk2FLNHBfPOS1GPAI78nCfu2yN+8DdT9a27g3mdg3xYKPZb0A64j7h/
jnbAzYu83GaVGtI4gKsN07RVKiNqH/nNvHXaKt989iCBl4r9FjwXXC7ub+O5
4EU5vS/Xy9hfBG6z67DcNns0jT/4ySLb235TeF5GPrzXl6V50cM+ajp/MXkc
svgYr7fB28R+C+IEzxf3pREn5dsnWx2vB46mOMHdXZyumQ2wZwn8UWJ0ZX08
e4HAj3cmu7jqsR8J+fmC+M5Fv8BX6mKjlHP5Owj8YcKNP2esYZ8PuH7z1q49
C9nnQ/eWxT4M+gu+RNxzJq+U4EndUR2fZ7IHCTzPoX69xtuY+gtemBYbubmV
/c/gTyMyTl38lb094PKrN9plEew1wnf9mFsZrmZu7OEBt5w+wbhvK/ucwZdt
XBp6VsEeHvAalX66lZI9POAmlW4JuRXs4QHfK/HwgCeK+8wYH/CyyD9uT21i
rxH4kN/zu5Gn2GsEHmyo7zeUzl4j8C0dBw+sCGEPD/h3XlYv/GzYwwPeuyVf
ZfpMRnFiH8BT3OvAeGJetv2wd/7hhw3EMW9WGO2JVCRqiWOeUn5b67KklT0w
VGck9ofBkR++bvY/OLWkjTjeU7uyimjlnHbi+Pd/Lm/tQGU2+1sQf8Hyba+j
59+h70q6VyPuQeHviHXLNxIvCrilqCsnD63gntbVy2eZsT8E7c+Q+HbwHeQl
/t8QcORn+2XH96p3sicB7QSJ89bxkv2lF2J/6X82GxgY
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
J+f8Y6irne47jufbQT4Z2zW3r/tJ/jz59lfh70q2R2geD/b/a9UXS54TWlPX
Lvc8oeOWwbGo1jjyQ3fCVbDtc88NmhfUl4/Bvqw4hPPmaGwGrwX+kr+IjjsV
f/6heYHr9qJszBxTKrb8s+SY/2/5KfmGwuuOf0qOo//Wd6UcD++TO049AVs/
d5xaIfhZFFurf41UDFC4vwyGv9Ucynf5FL4Y+zX1z8EHYF8q+x1vxK7i+Hm4
gcYz5Wm4vsYz5Rl4X/W/YP9WU/4m9zpCcbhiqrfT959S9vfTmuttrrlXcxn2
DcpdOke+njIL3ke+Rr4Mrleyz1Y8prWFxtANcBlbK/fzL6TcVPb7aj21mv+9
AB8oX6M5Bm5Ucjys9cgKjm8PXitpDtLcXDX1rxnwBHhz4bE4Hv6t8HgdB/9a
2K90hV8tPC4nq10Kj9er4L/T2vBSeG1h/3os/EphP9Rd8QO8Bp4NN5QfLLmf
HKRxXvaY0tiS/7heQ6HkcX8dXCrZJ3VT3JJiLa1DP4HPil6vHqZ5GT4bXgOf
iW3NOU8UrmsLz1L8nHtNqPWgYgCtIa7G9sw9py/meAbHe+dea5yUe52jNY5i
A9nJ2JNzr0N0vfqi+qTWJz1yxxLvZ+6X9RO3CI5B2gSPPY3BdSXHJkPTWmg2
9x2We43/Ytnrfa37NU40Xt5Lv3Nc+i3du0e6/5B0H/3GY1yzZ+71Xafcaw/F
/c9w3CT3GlZ+Sv5Ka1r5FPkWrcGkNxyVO86TJtExdzyt9feRKb5SbNUhxVdd
cvdL9cnayY7n/p1zx+WKyX8u+fe1/thY8rpA64Ojc69bdPw01xyUew14cbqW
U/+L2eQvJ2gdmtuH6viA4P+PKDz+LkljUOtt+Qv5Co1NrQE0JtWGvXOvV+XX
e6U+IH9/BmVpZh/fM/UB/b6eQ+sKtXOf5JPVd07MrSnI959FWaa+m1sDkv6z
c27tRrqN/Ku0CcXYGov903iUfz03dywuPzowd5yttroo91pR3+OUNEfoO0lX
0hpPa+J+lOWpDU9P7ag2PDW1o9r5tDRf6BuMz70W0reZkPyp/N7I3LqW4v+R
aY6QjjIiPXOb1G81R0xI3/Yljp9P63St16WFdE5t/XLZuoU0M507Lp0/PrUF
t/tPVxude62h+UZ+8gfu3woelZt17ph0/nz1k7QWUf3Y1NY1E6t9Nb+dk+6p
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
Eb2PR+Naepr2U2kv8/8Bvv5ZNw==
          "]], Polygon3DBox[CompressedData["
1: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
uJv4LQdeWf5QJcbPKtdoY5ixS86qj9BXbM79zuN+hxnD5ZrgC8FHyzn1reBL
wT+0PmP9ds4+3E1MNhabY32DXYENaH2WY/j9KmPAsX2oPsTYo5+jb7wqMdlY
rI/807nMvo1aH/RHNz5M3yXP+dUt/YNan/Y433fOKn2XGL/ZHt8NPzMmj1HF
B+l7zBG3457PVZnDI+R6tK9j/5bd+NDbu8kRzA2MMeZgSxur6uRmE1WJgcY+
Y8AvrU8d2Pq0A0r43Fic92Uv93BMOha99xCOWaJKLGLTububnMNcQ85yAuf/
0on/3LVkzn7AgXt2Mpf1WXLle+r4MjWD/rQv6URLeLyONqVG9WmTHH2SOpqI
ubvjTd+4Qx099FhszDo5/Vv0vVSSW45H+2u5RBPfu2MdPVIf9SHPs1cnvmtD
8Kgqc+7kJpxW371lHa67CfZIlTl0VhO9Sz12f/oH6b+wh6vMyTOaXGNF2gfU
ufZG2Ogqc/w0+o7rRVtTY3sffGSTWL5TnXx8ZDecT66nJnoo+77j/MM45hGO
vbUkTppTDqd9UwmveKGT762PUmtSc9J3XVcSl8xpL5Ib0f89/YeDH6X/wjpa
kJrQfeAh9I9RR9N5U39WEkef78TfPd4NJ5YLyxnk8/KGjzrh64erS3G9x/T5
8sEmeewnneQfr9XRvtTAfpbflPAKc+ARJZrXTPRf14kWZk4oF1u9Tq5oDikX
XK1ObmkOaWxfo05u6TdyrA2v8+18R//1FXXe3RxK7n9tndxqd7Z3VdGk1abN
Ec3FbqiTO+qj36gS8/Td+vTXwTt04uvNOf03t7S5qDmi3/bWOrmj33Aw+N46
39aY9HaVmGWsMmc0N7yuTi5pjHirSsw2djimzV3vqzPWT2L7Gv3b+4xNYtqb
VWK4sc6Y/k6VmGasNwc2V7y+Tm7snLGWoM92LsnB5O7L1eFmcj659/J1uKA5
pdx61Tq5phqE3GnNOtqEc2BkFQ3YuSEnnIT2CnW44qb+gyox6pwmHFduuW4d
7iuHVdvYpA63lROpFWxYhyvJgdQGNqrDjTbHntC/su+CJnNGLcs551xyjlt7
cI469+Vcag0b1+FicrIZwQPqcLX+Je8nx5fr1+C7wB/X0WOnLtEH5by+jxqg
esMJ7fxVI/y71R/ea6KZqp0eCX5V/oRNSntFrrdCLxq0WrSa7ldNNF21XTXp
r8FP+AxN9KCTS/xhn3Y+6h/VrPu2/uObJhrhz61e8Br4eGOSsRD8QRMNf9wW
f+uzNJlf18uJSqtBt/OtAY9VkvsZA4wFY5ZoZ+/p80o0fbV9NfcfmuSY67Qc
1dxTTfKXVq9QH1HTVdtVU323iX6inmEMMBaoYfdaPqu/H7dE2/kcO7xE01Tb
VHP8qImmX1r95RP9V0kusAbXHE37Tf9ZHc3+7yYcfVAbc+Xuati7VMnX1LaH
tHqg19A/ynfU/swn1GfOL2mvzjkP0d6pRMdUoxpMe4eSXNsc4mjae2P30q7Z
dxbtXkn7DfbtpT5QEhvn5XqjaO9REtfVLE8ydvWio6mn7Qz+qBcdTD1sx/b/
WI9T8zyj/T/W+9RMT1cLwCp5SPt/1SCf514/daKvXFbCXedm30jaY2idaKz3
lGi6arvWUD7m+41Xor2p6RxRMidmaP23c2VtjpGmqrGb729RMrYcY/pyx/yp
VeaQc2HsktxZzUTtZJySXN6c2tzaMXsi+KE6Y3kT+s/sJMbr/zYtGcuOaWPp
xiWxf4zWv25UMlf6tPyib4n2oGagduD4UntQk1Cb8P3MR9Qk1CbUDNSg/SZq
CVeUaAXr0f8o7VNKtGf3jWj/v//GOeBcUM/yW8v/bmjHi/9SPnmN9yrJd9Q8
1D7Ut6y9OEYdq2qOao9qLT/02meq8w98Vs/5qY6eNn6rr3xfZ874bpuVcCU5
ldzKGt/ELb8y3lojs1ZmDe/HJjW8fi3f+qmNz/1bvmX8/bcGVqdG1iltjaxO
Tanbvo/Poiaslj5BiVb4tf64pOZk7ckaV1VSY7TWaI3w+yYavHUnv4H63suO
vybf2G+tHjRmk3pAP/DmjuFOOKHcUL3KGoBzYOZefJzj43n6T+pFn+o1qR9M
VOKz9d2j2vFjDcdajjW9v5rU7KzdDQX/3sSfWPew/mG9zxqrtdbh9P/ZpOZn
7W8Y+I8mWry6i1q8mvx+frNONCbHk8/gszi+1m3i4/X16nnyud1K8mQ59Im0
b+H6D7bxdZj8r4238lV5+Qe9aKbyr4NKakzWmqyRnt/yMffZNl4+S3v8OjXf
75rUDK15rAyenfbifnPsSvuwm9n3QJUa7uXga8B3VKlZnwm+s5d82fxIvnk3
+JOWTz7RpMYov1QPV8+WvzzR5vfypxvov7dKzfdC8E3g+6vUhC8FXwu+s+Vn
Z8tne+Frq4PPlZ+C76tSU75YPtkL/5QfyI/U09Xj5Xxyv9vpf7XlT/eC73d+
Val5vgL+VGfWJP8f3aTm3W1SQ7cW7piaqh0vjrWFaP9SxwfqC61JX1cl57JW
Pazk3w5g3yO0P5E/1Mm3/9UXwFWdGt6HTXJsc+3FjEm0P+xlDYV6qnq08eEP
8Jz6zCbx4fc6evVOTdZojN9yDtdumAOZC6lPr99kTcg4LUcb0PKByfxvncT/
u+j/mPvvA368SU1M3d85vW1JDbdqUrO1tusaiaM4frJO1k5YAzytyhoKa4Pm
kOaSI/X/nH81+PYqOfnpTfKP11t+fX/Lf6yZWTOeo5f3sU74sT6zZIw71kd1
orcfUpJbPNSJHntoSS1gdCf6sDX3b9v8Sa5uzn5plTUb5vKuifimzZdeaKI/
Xtjqd+aCagiXVVlzorZwbolWOCP7Hiz5ntYdPzSmlIwH17m43uV/JePHOqT1
yN3BX4D3pv/NTviBnEBuYM3p9vb7Wie0XrhniaavVqNmo9avD9QXjtn+P//P
z3Viiv534pJnGav9/37/r+tg+ZyazOVV9Ee1GjUT9Vr1Z7UU1wBZT5KDy8Vd
w3J+FT3XtS2n9BK7jeHq4a55Ob3KmiHXwlg/Uf83pzC3cA3R0VX0c9cWqQ+r
/5oDmAu45knuLQc317ijl/zG/Oq+1j/9VYejydVc02B9ZvpO9GXXAJ1Rpf7l
2qB9OOatTmo6d5WsqbmqikY0uJ1ff9bheHI916DcUEUzcm2Ka1BurKJhuTZF
TUu9Vs3BfMk1LDe1+ZNrW1zzcnObb5j/uGbl+ioakWtZXOOknm29zPzSfNP6
mWuQhjSJd9aALwf/txeN6soqa4jUrs4pGSvq+1eWdg1KnTUq/zTxGfry0XV8
iT7WXODqOr5XX2PuLieRB+rznNvn1/GFxvTb2XxQJ9bL0c1NHqjD3c1pzE0e
rJPreM/bwO/XeZYJS/61/9zazxutf5SDGzuNt+YqI+vkTs5ffdF8dWKXPkff
80mdXMSYrxbgN/HbOAaMJRfUGRv6JH31lXV8lTHGXOuqOrHH+Gr+ak3K2C9H
uUPfWoe7yEHuBH9Uh5tY7327E//t/DPm30j7zTpcwBzi1k44gO8zd4mWI2eR
uyxR4sv9tnLtD0rWPuhj9DXvlcwd55hz7d0S3+2ccm4Zc/T9t9eJRXK+JZo8
k1xQTnKLvrYOV3mnZKw7R52r5hc+uz5F3/J2yVx0Tjg3zEHNne6ok5uaI8rt
76yTO+oTzV1vruMr5fzmdo/UyQXMseSKj9bJveQ4N4HfqsN95EA3g9+uw42M
ScYucxhjlTmbXO/hOrnckozjPtjr7DunG59rbnhTHV9szmhud1edXNIcdzj4
2Tq5r/7P2GWNUG7oHHIu7UH/QPB3JbFFjiJX+acklstR5Cqj21h+eZ1YP3GT
XNP1GK4v6NekVmwN3PUFcmZznVfrcGk5q3PvxTpc9sWS2Na35WKvlKwVMWYb
u/8q4Rr6NMfvtE1qp0vpY2j/UTI/nadygzta7nFmi82x5d4v1cm9X27njz5Y
XyyHl4u/XIfbyxHkAsu09/+wJNYZw4xlH5XEMmOAseDvEu2w03Kfj0tigz5P
32dOIHd/pU6u8EUJt9HH6evOa8LDXOek3vdlie/Tp+pbvynxlfpIfeWPJdxU
zif3+7WEW8px5bpqIHLpZ+poI/JjtU45gdxAjmmsHlrnf/5Qwg3lhHJDOZnc
7Lk62se3JdxWziH3+L6Eu8op5Za+t+9vTedd9v1Swj3lvHLfn0q4qRxTrvlZ
SSzRp+vb1SzMnR6ro2V8VRJLjCHGkk9LfLkxyFj0Scn80Mfr678uiTXGFGPL
zyVcVg4sF/6thPvL+eX+akZDwU/X0ZLk8GodL9Th9nP3ogWYw5rLyvnkZovU
4YLdXvy/HF1/uVyJdqjGuWvrf8w9rfffSd8iJbUga4LWBpct4WpyNrXQhUvq
W9YcrT2uUqK/WjOxdrJqif5qDcBawKQleq41fWv7y5donWqYapnXc+8Njb08
787gpUtqddbYrF+tXsLl/+X04P0c096Lffdw7holeqprPKxnrmRO1Ykmqja6
Wsmx1gCsBSwD3q6TmqD1M7n8453EXH3qQiX1Q2ug1kJdI3hxlTWHrh30np5/
Xp1nWbFEe1XjVetVXzm0mxzQXHCDEj3XNUrqsc4ZtXLf2bk0Z0lu5/9WWx0I
HtLJGib16MlK9G7XKLhWYeWS3Ev/Zu1ybfDBnawpsp65YYmeYoFYPfqxJu8/
Qp4GnoL+aTupiVt/XaeEK8uZrSW45th14q4Xdy3yuiX6tjUJ9fUB4CM6qSmo
ry9YUt+0hmstd1BJvq1mqj4+eYl+bE3e+u/6Jfq4a6jUv5cqqaVaw7SWuWaJ
fu0aKuvXr5WMZzml3PL1Em4ph5RLmvPpb0+skwu6Bvzalm+5NnzJktqoNU9r
n+ZMxmM1NnOp8dpcwzWK+3LMWyW5jBxXrut6J+uE+nzzmpebvP9tnD+4l/x5
y05qdNbLNGtn5tT2md+bC8jp5fZzYet1UoOyXjRJSX3DNS2ubXG9lnUgNdk+
tOctqUVZc7L2JD907YWao9rj/CVjSc1d7d2Y6PpT82Vj5a91tDr5xT5Vcj+1
wr+wyZusWXHtimNWPVB90lzE+uIttBctqT1aI7ZW7Dt364wxv8VUJfq6a0is
H0xZwvXl/NYX1iqpr7iGzXq9OYT/b9E68axPie+Rw8vlVyiplVgTsTayQIl2
oIZgLWCektqbNTZrbfOV1Bqs2Vm704e8UmWO6lveKImP5hDmEs6BH6r8Q+fG
eiXatBq19aH/B3z7Xs4=
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncDWUbB/DjOZ4Hb2SpSGUPRbSqKEULRaQk+542pVSWoteukGwhZMmS
rMm+R6V90SYtpJD3JSQqW/S9PnP++Dn39Z1r5pyZZ+a+R5kOj93dJSuVSn0u
2VLXPy+lU6kvYHv1ityp1G1sHPuKdWSrWAM2lf3IOrON7C7JE8fxmSNVc1Kp
W/SN0veZvja2LeWlWX32PCvB7melWD32HLuAdWJlWQM2lJViD7JyrCEbxkqz
h9gg9rvxC+y4bQ+py8gdxkNYSdse0FeeNWYjWXnWhV0pt+dKpabJ13Kxuo6+
Mfo262unb3mcC+vBlrI6bAQ7x/l9yQpKoehX36pvtPHn+trqWxbHZ+PZ1+w+
tprVZxPYFnY/W8vuYFPYD+xhtoHVYy+zb1gntoZdynqyZawuG8lqsufYKWnC
5rGGbJp6m75H2Nvse3Y7e4lVZB3ZzWwk+5S1ZkvYPWwB28t6ss9YDTYovtd5
zla/LteyAWwJm6GeKVtZHTbAvgNllG0/siZsmnqqNGA/sWZshrqa7+hq3+vY
YPYOu4fNYTew59kmdi+bz2qxoex91owtZLXZMPYBa87eYNvYvexVdiV7jF3I
7mYj2IXsUbadNWXT2VXs8bjOcpN7YoKslFLqAvqu1neW8f/1/TeOZZzXOK/P
fLGfc8uTnTwLTzleTbZKfVxesO+H7CNZru9GNoS9p26qf4HeM9hVrLDxHtZb
XVbvLnaprEglD2t1GRj3pG2z9L4mv8kMmz/laeNLbDvmcxH7geU2rsIuk1rR
zzbYNsax7pRX1dv9lkfZO7ZfEc+/c58qm+Ui9c/62uqbq+96fT3Zd+w2NoZV
YB1YYzab7WJPsg/jOfe9O1jl+N3sH5ZfXzV1EeP/sWfjbyZvsN/s+wzbbFsj
Np39xLqwd9nA+H3GnflJqeT4TfQtNN6n7+mY2/RsYTXYIFacNWFjWS7nVNL4
gG3t1XfJLONf9HXV975tRdi17Gg6+ZvGPHc3e029U98T7AN2OXuGzfMbxqhf
iuvHerH5bKx6nFzN+rE32VT1NNnB2rA5jned4/Vg17D+bLG+V9XTY75ivdkC
Nl79slRjfdkiNlk9JfMM1mWj4/mTW227iY1gn6hb+Y7F+n5gjdgkVpU9zK5i
z7KF9pmgnhj3FEvrme96tZbF6hzbV8Z9Ji/a91t9Rfl16h56C7CmrIy+nayq
LGenWRt9H6vzxlzE9rJsfcvVh+17RN7KSc4vzvNw5je1zkmuYVzLPzLXohX7
2vhK425Zyd80/rYHpTvbyO7yHcPts589xd5id7JhbDe7P/4e7KZ4puN+YN3i
2WCNYm1hrdk7LCXDfexkbdkn6nwylu2LNcrv2a2+TFayXHr2yCPx7GYl92vc
t/n1vctySVbMAerRfJT8nrmXWrAz5f14PuQV++62vRD7UH22TGF72Bz71Hbu
RX3HUp/j1f/Rt1FPfhmvb0fML+xtdQF5mf2cuVfjnj2UuV9b6iksnxkXTydz
Sswti2xv4diXxlob66b6hIzVs4P9FddUXdC+H8Q8KZPZr/Y9xWeoD+j7O66p
eq88HvczWygz7fcPe4XtUT+lb519S7JbWX92Lmsf8y/rwlaxemxwzB/s0bju
7HY2KPN8xXP2V+Z5ap+TrFOxXh3NzKEd43yNi8T8E+fBOsVcIPnV10gH57ss
O1nL7kknz1U8X2NjPWSFjKvHGq9veXYyH8e8fCyzbt6nb1K8q8R7RqxvPhfE
e0DcH8az5E6Zq54sR4wrx5rnc6H6F+mQTtbPWEcnOV5p+YVViXXZbz/l+9bo
u8Hn+Zn3sdXq3+RJPevt15ANzcwnMa/8nVnDO+Qka9Rw4636vo13u5zkb9SV
rVWviXWKnWST2K/q3dKd7WNPsHWxvvuOIY7djC1lh1gf9g1rzpaxP1hftoW1
Y9+zYrEGs6OsBVurPqZvMPsxM7fFHPdnZg5t53vPyU7uibg38tv2dNw/PifJ
kczc2FZfK+P1xif0Pa9/u+0vsqPGJ1mWuqu6pazTd5w9Z9u2zLO6KZ2858X7
3jB1AXkv1umYP/Xt0ncW26w+X2axA+xix2ulnuB4VVh3VjGeo3gmWeV4T2CD
2SHjieyEbZ3Vl8hDxq/FvRXnqK8yezCOz65l/VhpWe8+mSS3yOWxzkhn42Gy
UcrEO5w8YTxatsX9pd7leJ1i/XC82nH/s4viOsT8wC5h3dhOdh97g9WK9xJW
ibWPOYhdwXrlTu7TjunkeY7nurFrUkQ+Z+fJTH379VWQj/2GF6WLVA+zb3M9
4+xXSd+T7FxWkz3NCrLm7Dx2I+vFCrOWrLzv2MOukNUxTespJtere+o7kzXT
d6G+X9nlMXewLD1V5GH1bH012AB9JdgtrB8rxtqxC9jNrC8rytrGNZDv/f7p
Ul+qqYvHM6jvGX2F9LWI9Vwesf0F2STl4hnVVyudzDkx97RiTdkitp/1Yl+w
4dnJnBlzZy71Y7EeO4/F+v5hQ2z7MrOGrsisJ7GuDFYXl2+Ny8a7ib4jcf3Y
VnW5eDdhf8baHeuoupS8zg6xYuwbdel4N2F/5E6e/YnpZH6IeWKFntyyhJ1S
D9X3lb75+ho7z9myXyZmJ/9n+kpfSSkR7w3qs+UL4wviPrfvwZjv4/8H6kqy
JJ7PuPZsm/qiWKvZ8fgbse3qi2UxOxHXNP6/oa6YTt574/03H9ugPiPuLfZT
3Fdsi7qMzGWH2dK4n2O+lXyxHqn7xDpl+zkxn8T35yTv/fH+f3a8h8R3xTu/
rDLOLSNs2xpzrL7TjjVPWsqb6rz6VuvJlpH6vtOXxeap//Kd/dnHrIfen43z
xHuLbRX09GX7WNGYA+O8428b6346+f9v/D94oDrF56ST96h4n+qTk9jr6WS+
jnl7dTwHeh+Ia6e+WUsfx83F57I/WT/2ETutbyY7yHqzTexfO8wZrw==
          "]], 
         Polygon3DBox[{{1493, 825, 644, 643, 1040, 1403}, {1328, 889, 1021, 
          1579, 1169, 1170}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1487, 606, 1490}, {612, 5, 610}, {1487, 5, 1103}, {
          604, 1, 601}, {609, 375, 613}, {611, 375, 609}, {607, 217, 603}, {
          1491, 626, 1486}, {603, 217, 605}}], 
         Polygon3DBox[{{605, 217, 316, 608}, {1490, 610, 5, 1487}, {608, 316, 
          1, 604}, {1486, 375, 611, 1491}, {613, 375, 5, 612}}], 
         Polygon3DBox[{{1103, 217, 607, 606, 1487}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{601, 1, 316, 217, 1103, 5, 375, 1486, 626, 1491, 611, 609, 
       613, 612, 610, 1490, 606, 607, 603, 605, 608, 604, 601}], 
      Line3DBox[CompressedData["
1:eJwl1EVQVWEchvErit06dmEABnZ3K4rt0o0uHN3oxnGjC0dd2KIzjt2NnQi2
gtjd3d2J7e8bF8993n9wz7lnvkPMkJH9R+SIRCK1fUxClNyW5+GmPIy3o7XB
Dp6LXSipPhEdieyUS8n3uTs/4FV4hKrqh1yNH3MiP+HVeIbD/r663lO5Bj/n
WH7BB83W8Cv00HvJcfyae/Ip8zfyWrxDvN5brsnvOcM8Sf4gr8Mn1FJ/5Nr8
mTPt9JK/yOvxDXXUX/mYWYKcLffm75yCn6irPmn+Q64n/+I+/Js34C+OmNfX
+yM3CA8VfZEDG/Vy8lE7DTkKjZAL/RCNQ2ab7OWRGyM3miAv+uO0eT7ebKcA
N0V+NENBZJkP4ELYYqcIN0dhtEBRHLczkIthq50S3BLF0QpDw+9167E5zTmO
t3E8b+eavINr8c5whrgOdskJvJvrcirX4z1cn9O4AadzQ97L5XJ5fjzRNffx
+HAWEe0et6izzVfwK57Dd3kSX+AxnMEjOJUHcwqvx0A5mbvxBG7JozmBh3MV
HsTFwzVd623Yc12tyDh+w6N4rOfhViMxfE+9EnfRTd3b8h15Nm6hit5tXhHe
IXQ276p3Q56Fa6isvs7Lw/k2v8pd9K5wMi6hkjrR7LK8DBfDd+ld4Jk4h4rq
7nbOy0txFp30zvAMnArfa14hnBl5CU6iY3h/eTp6mWdx+XAmeHE4/+igTjLL
lKfhKMrpZfCicMbRXt3TzmF5anhvUTacX16IA+F+zNvp7ZenYC/KqPfxgvAM
zdO5rV4aT0YqSqu7mu2R52M32kT9/z/1D9CLm5E=
       "]], 
      Line3DBox[{602, 19, 1485, 598, 597, 600, 599, 389, 1470, 261, 404, 533, 
       403, 314, 433, 405, 216, 359, 614, 615, 616, 617, 618, 619, 620, 1488, 
       621, 622, 623, 624, 625, 1489, 602}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1116, 1307, 1601, 1115, 1306, 1600, 1114, 1305, 1599, 1113, 
       1304, 1598, 1112, 1303, 1597, 1111, 1302, 1596, 1110, 1680, 1494, 1109,
        1774, 1493, 1403, 1775, 1108, 1301, 1401, 1773, 1107, 1300, 1595, 
       1583, 1106, 1299, 1594, 1582, 1105, 1298, 1593, 1382, 1104, 823, 1411, 
       289, 546}], 
      Line3DBox[{1129, 1315, 1610, 1128, 1314, 1609, 1127, 1313, 1608, 1126, 
       1312, 1607, 1125, 1311, 1606, 1124, 1683, 1498, 1123, 1682, 1497, 1122,
        1681, 1496, 1605, 1121, 1310, 1604, 1120, 1309, 1603, 1119, 1308, 
       1602, 1118, 834, 1117, 1764, 1495, 1412, 1383, 1450, 1433, 1473}], 
      Line3DBox[{1142, 1321, 1617, 1141, 1320, 1616, 1140, 1319, 1615, 1139, 
       1318, 1614, 1138, 1688, 1503, 1137, 1687, 1502, 1136, 1686, 1501, 1135,
        1685, 1500, 1613, 1134, 1317, 1612, 1133, 1316, 1611, 1132, 849, 1131,
        1684, 1499, 1130, 1765, 1385, 1413, 1384, 1451, 1471}], 
      Line3DBox[{1155, 1325, 1622, 1154, 1324, 1621, 1153, 1323, 1620, 1152, 
       1695, 1510, 1151, 1694, 1509, 1150, 1693, 1508, 1149, 1692, 1507, 1148,
        1691, 1506, 1619, 1147, 1322, 1618, 1146, 864, 1145, 1690, 1505, 1144,
        1689, 1504, 1143, 1766, 1387, 1414, 1386, 1452, 1434, 1483}], 
      Line3DBox[{1168, 1327, 1625, 1167, 1326, 1624, 1166, 1705, 1519, 1165, 
       1704, 1518, 1164, 1703, 1517, 1163, 1702, 1516, 1162, 1701, 1515, 1161,
        1700, 1514, 1623, 1160, 879, 1159, 1699, 1513, 1158, 1698, 1512, 1157,
        1697, 1511, 1156, 1578, 1696, 1415, 1436, 1453, 1435, 1476}], 
      Line3DBox[{1193, 1339, 1637, 1191, 1717, 1529, 1189, 1716, 1528, 1187, 
       1715, 1527, 1185, 1714, 1526, 1183, 1713, 1525, 1181, 1712, 1524, 1179,
        1711, 894, 1177, 1710, 1523, 1175, 1709, 1522, 1173, 1708, 1521, 1171,
        1707, 1520, 1169, 1579, 1706, 1416, 1438, 1454, 1437, 1477}], 
      Line3DBox[{1207, 1351, 1649, 1206, 1350, 1648, 1205, 1349, 1647, 1204, 
       1348, 1646, 1203, 1347, 1645, 1202, 1346, 1644, 1201, 910, 1200, 1718, 
       1530, 1643, 1199, 1345, 1642, 1198, 1344, 1641, 1197, 1343, 1640, 1196,
        1342, 1639, 1195, 1341, 1778, 1418, 1441, 1456, 1440, 1482}], 
      Line3DBox[{1220, 1360, 1659, 1219, 1359, 1658, 1218, 1358, 1657, 1217, 
       1357, 1656, 1216, 1356, 1655, 1215, 925, 1214, 1720, 1533, 1213, 1719, 
       1532, 1654, 1212, 1355, 1653, 1211, 1354, 1652, 1210, 1353, 1651, 1209,
        1352, 1650, 1208, 1767, 1531, 1419, 1388, 1457, 1442, 1474}], 
      Line3DBox[{1233, 1367, 1667, 1232, 1366, 1666, 1231, 1365, 1665, 1230, 
       1364, 1664, 1229, 940, 1228, 1724, 1538, 1227, 1723, 1537, 1226, 1722, 
       1536, 1663, 1225, 1363, 1662, 1224, 1362, 1661, 1223, 1361, 1660, 1222,
        1721, 1535, 1221, 1768, 1534, 1420, 1389, 1458, 1443, 1475}], 
      Line3DBox[{1246, 1372, 1673, 1245, 1371, 1672, 1244, 1370, 1671, 1243, 
       955, 1242, 1730, 1544, 1241, 1729, 1543, 1240, 1728, 1542, 1239, 1727, 
       1541, 1670, 1238, 1369, 1669, 1237, 1368, 1668, 1236, 1726, 1540, 1235,
        1725, 1539, 1234, 1769, 1391, 1421, 1390, 1459, 1472}], 
      Line3DBox[{1259, 1375, 1677, 1258, 1374, 1676, 1257, 970, 1256, 1738, 
       1552, 1255, 1737, 1551, 1254, 1736, 1550, 1253, 1735, 1549, 1252, 1734,
        1548, 1675, 1251, 1373, 1674, 1250, 1733, 1547, 1249, 1732, 1546, 
       1248, 1731, 1545, 1247, 1770, 1393, 1422, 1392, 1460, 1444, 1484}], 
      Line3DBox[{1272, 1376, 1679, 1271, 985, 1270, 1749, 1562, 1269, 1748, 
       1561, 1268, 1747, 1560, 1267, 1746, 1559, 1266, 1745, 1558, 1265, 1744,
        1557, 1678, 1264, 1743, 1556, 1263, 1742, 1555, 1262, 1741, 1554, 
       1261, 1740, 1553, 1260, 1580, 1739, 1423, 1446, 1461, 1445, 1479}], 
      Line3DBox[{1285, 1425, 1048, 1284, 1762, 1573, 1283, 1761, 1572, 1282, 
       1760, 1571, 1281, 1759, 1570, 1280, 1758, 1569, 1279, 1757, 1568, 1278,
        1756, 1755, 1567, 1277, 1754, 1566, 1276, 1753, 1565, 1275, 1752, 
       1564, 1274, 1751, 1563, 1273, 1581, 1750, 1424, 1448, 1462, 1447, 
       1480}], Line3DBox[{1410, 1297, 1381, 1776, 1409, 1296, 1592, 1577, 
       1408, 1295, 1591, 1576, 1407, 1294, 1590, 1575, 1406, 1293, 1589, 1380,
        1405, 1292, 1588, 1379, 1404, 1291, 1587, 1378, 1402, 1763, 1492, 
       1429, 1377, 1772, 1400, 1290, 1428, 1586, 1574, 1399, 1289, 1427, 1584,
        1780, 1469, 1398, 1288, 1468, 1426, 1585, 1467, 1466, 1396, 1287, 
       1465, 1779, 1397, 1464, 1463, 1394, 1286, 1771, 1430, 1395, 1432, 1449,
        1431, 1481}], Line3DBox[{1488, 1470}], 
      Line3DBox[{1478, 1455, 1439, 1417, 1777, 1328, 1170, 1626, 1329, 1172, 
       1627, 1330, 1174, 1628, 1331, 1176, 1629, 1332, 1178, 1630, 895, 1180, 
       1631, 1333, 1182, 1632, 1334, 1184, 1633, 1335, 1186, 1634, 1336, 1188,
        1635, 1337, 1190, 1636, 1338, 1192, 1638, 1340, 1194}], 
      Line3DBox[{1489, 1485}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{636, 1069, 1083, 1070, 1047, 1776, 1014, 637, 832, 1601, 651,
        846, 1610, 665, 860, 1617, 679, 874, 1622, 693, 888, 1625, 707, 902, 
       1637, 1638, 721, 916, 1649, 735, 930, 1659, 749, 944, 1667, 763, 958, 
       1673, 777, 972, 1677, 791, 986, 1679, 805, 1048, 1049, 1050}], 
      Line3DBox[{806, 987, 1028, 1750, 792, 973, 1027, 1739, 778, 959, 1770, 
       1026, 764, 945, 1769, 1025, 750, 931, 1768, 1024, 736, 917, 1767, 1023,
        722, 1778, 903, 1022, 708, 1777, 889, 1021, 1706, 694, 875, 1020, 
       1696, 680, 861, 1766, 1019, 666, 847, 1765, 1018, 652, 833, 1764, 1017,
        638, 823, 1015, 627, 1771, 259, 320, 263, 318}], 
      Line3DBox[{807, 988, 1751, 793, 974, 1740, 779, 960, 1731, 765, 946, 
       1725, 751, 932, 1721, 737, 1650, 918, 723, 1639, 904, 709, 1626, 890, 
       1707, 695, 876, 1697, 681, 862, 1689, 667, 848, 1684, 653, 834, 639, 
       1593, 824, 1016, 628, 1085, 1779, 1084, 1090, 1000, 1071, 1055, 1094}],
       Line3DBox[{808, 989, 1752, 794, 975, 1741, 780, 961, 1732, 766, 947, 
       1726, 752, 1660, 933, 738, 1651, 919, 724, 1640, 905, 710, 1627, 891, 
       1708, 696, 877, 1698, 682, 863, 1690, 668, 849, 654, 1602, 835, 640, 
       1594, 1030, 1029, 1051, 1086, 1585, 1002, 1087, 1001, 1072, 1095}], 
      Line3DBox[{809, 990, 1753, 795, 976, 1742, 781, 962, 1733, 767, 1668, 
       948, 753, 1661, 934, 739, 1652, 920, 725, 1641, 906, 711, 1628, 892, 
       1709, 697, 878, 1699, 683, 864, 669, 1611, 850, 655, 1603, 836, 641, 
       1595, 1033, 1032, 1052, 1780, 1088, 1004, 1089, 1003, 1073, 1056, 
       1091}], Line3DBox[{810, 991, 1754, 796, 977, 1743, 782, 1674, 963, 768,
        1669, 949, 754, 1662, 935, 740, 1653, 921, 726, 1642, 907, 712, 1629, 
       893, 1710, 698, 879, 684, 1618, 865, 670, 1612, 851, 656, 1604, 837, 
       642, 1036, 1773, 1035, 1053, 1586, 1005, 1031, 1058, 1078, 1057, 
       1099}], Line3DBox[{812, 993, 1756, 798, 979, 1744, 784, 965, 1734, 770,
        951, 1727, 756, 937, 1722, 742, 923, 1719, 728, 909, 1718, 714, 895, 
       1711, 700, 881, 1700, 686, 867, 1691, 672, 853, 1685, 658, 839, 1681, 
       644, 825, 1774, 1039, 629, 819, 1763, 1037, 1061, 1080, 1101}], 
      Line3DBox[{813, 994, 1757, 799, 980, 1745, 785, 966, 1735, 771, 952, 
       1728, 757, 938, 1723, 743, 924, 1720, 729, 910, 715, 1631, 896, 1712, 
       701, 882, 1701, 687, 868, 1692, 673, 854, 1686, 659, 840, 1682, 645, 
       826, 1680, 630, 1587, 820, 1041, 1063, 1081, 1062, 1093}], 
      Line3DBox[{814, 995, 1758, 800, 981, 1746, 786, 967, 1736, 772, 953, 
       1729, 758, 939, 1724, 744, 925, 730, 1644, 911, 716, 1632, 897, 1713, 
       702, 883, 1702, 688, 869, 1693, 674, 855, 1687, 660, 841, 1683, 646, 
       1596, 827, 631, 1588, 821, 1042, 1007, 1074, 1064, 1096}], 
      Line3DBox[{815, 996, 1759, 801, 982, 1747, 787, 968, 1737, 773, 954, 
       1730, 759, 940, 745, 1655, 926, 731, 1645, 912, 717, 1633, 898, 1714, 
       703, 884, 1703, 689, 870, 1694, 675, 856, 1688, 661, 1606, 842, 647, 
       1597, 828, 632, 1589, 822, 1043, 1008, 1075, 1065, 1097}], 
      Line3DBox[{816, 997, 1760, 802, 983, 1748, 788, 969, 1738, 774, 955, 
       760, 1664, 941, 746, 1656, 927, 732, 1646, 913, 718, 1634, 899, 1715, 
       704, 885, 1704, 690, 871, 1695, 676, 1614, 857, 662, 1607, 843, 648, 
       1598, 829, 633, 1590, 1010, 1044, 1009, 1076, 1098}], 
      Line3DBox[{817, 998, 1761, 803, 984, 1749, 789, 970, 775, 1671, 956, 
       761, 1665, 942, 747, 1657, 928, 733, 1647, 914, 719, 1635, 900, 1716, 
       705, 886, 1705, 691, 1620, 872, 677, 1615, 858, 663, 1608, 844, 649, 
       1599, 830, 634, 1591, 1012, 1045, 1011, 1077, 1066, 1092}], 
      Line3DBox[{818, 999, 1762, 804, 985, 790, 1676, 971, 776, 1672, 957, 
       762, 1666, 943, 748, 1658, 929, 734, 1648, 915, 720, 1636, 901, 1717, 
       706, 1624, 887, 692, 1621, 873, 678, 1616, 859, 664, 1609, 845, 650, 
       1600, 831, 635, 1592, 1013, 1046, 1068, 1082, 1067, 1102}], 
      Line3DBox[{1100, 1059, 1079, 1060, 1034, 1772, 1006, 1054, 1038, 1775, 
       1040, 643, 838, 1605, 657, 852, 1613, 671, 866, 1619, 685, 880, 1623, 
       699, 894, 1630, 713, 908, 1643, 727, 922, 1654, 741, 936, 1663, 755, 
       950, 1670, 769, 964, 1675, 783, 978, 1678, 797, 1755, 992, 
       811}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzku/k3lf/3Pm6WkkKRpCRSSqFSCbsMqUiGRFEZyliohIoyhISQEpmHzGTK
zDbP83GQIfPMOcpQivrcvuv103ut51/w9Ztr7bXP/Xjce1/7ug57r6GVxl06
GhqaRSYaGnqa//qZB9qYjfWT1RUAaX+SGByo4J+WqOzHlAtj/azGXFqRSP/9
WLHzEhVLRBR66XbFwojcZv4i3Tfwe43hNc8/KnD5a0HAzEH4r/wDwpzCfGbT
2GFWnXY/qBdV/h54dFCrC9RNXDSmRkdR6Y7ho/qVUbRhWD4kdrEb9h91W8zV
G0IOo7nyjKuTWFakmH2rpxNuBQ/oP6P/hjvJbE0VotPY2NmcNXqZDDuv9XBb
pPWgj19vo77GDDYIqOwxWCSB3osUb8rxbtyt+bc/kWsWqduS3Kva2iGYVeGe
tEonRvm2OGpGz+IXUpmeQ38b3NgavVxU04HK/K8zTm6cw/3UPBUTtjbI2rBL
/qYXCfVVVs6fujGHOz7ud6K72QpRocXXQl+2o1fgDzaf4DmU87M5N+veAg27
XNKa4tqQXiowlNQ4h+f9stg9nzaDTqn2v5XJVpzartWz5+ccbuShTZ3zaQKn
0/92hCq0Ykvy/Ij/TgouyYR3ZBc2QvYjSsbwJBVUnze2JJ7MgovsjvvCt96R
nfN5dY2RPIdSMmZGqznNyG1QdeT51TZwN0o3r8mdRvdLbzbJLvWihW/hE6t7
ZPCY0IjfOjGBCaV0XxI3DePguOHEs9edMBVZdYn73RhaLND4e5SN4iSTRX9E
YCfY6xwRyEgfwTsQ9tP60ziqyY04vj3VCbvgbTEKDePOYUljMcZJlON0aXuf
SQaq15PDpwYGscF38y5atikM4vn+rp6fDMduL3HrhQzgB+uVs5d7p9BpcuiM
h28HBFkxvDrV0I+qVyNzTJ5PY1tfdZAQQwc8H/WO6JbuQ/vKGrfPdDMYfjnX
vdKJBOdoHFg0R3pQ4LNeVZ/VDN6oHXv9h5EEge01PR3ZX7HTwnbpasMMdkY9
fJkYQLzf+Em2hsRuZI1KFP65Yxaj/StJ1w+2g/QFG+nlBgo25536pblciYla
WVVFxQ3gOvU3S4I8i7rNTL7uBR24q2zquq5dOzQ70fQfrZ7Gh3Tm++t1+jAv
ru9sTVgHLAdP0J4dmMQzXFXWwn8HsanwJBWCybBx6ZbwZbEJfKRVsrt49wiu
CgR5HlshQ4jtTsrxvDGMnKFs3loxiqvhdlsyGDrhkF37hgLrUeRc6I33YxtH
4YMJqDVEhg2i3yZqNEYwJvL1q/08E0jrlvVuLYYMFwJ3dfVpD+P88YATsDCB
8cEf46J0yMCeOKJl+nQIU6WemhglTOImEzvLy0xk2Hry+af6L4M4elYvtvvs
FD41L7Y5mdEBOuc03kgyDWKb0kvZlPIpPHTBimZKtwO2Wsm/4G37hvfTI3r0
Jabx02kG0wnmDsC0n5WfJak4XPo3NiMJ0dn+7+NX12qgMn3yD3vXHMrvY8/P
s29FCfG+LRdOtkJknqS3iRJxn91pIsPXupDzypSWUnU7SB7mHzhbPI1eNWTN
LSV9+ONUlTY3dMBrXi/a85en8G6AzaZQ10FU4V3szN5GhggPnwuBaxMYrpIl
OyY9jHRR9xnuuZMhbuZXiULzOD6u+/B556cRZF+QO7o/nwwHdrGNMhePofee
5bFTLaO4ph/Vd6OCDOYWwkEd1aN45IuvOlcdUe86eWuiWWRQv6o79GZyBCcq
Og9NhY5j7KhbdoU/GY763VhQ3zOCYiZjItc0JtCXdqhQ6C4Zrr9qLXtlOoxD
rhcmRajEc8lcLzIUJ4OhWve772VDWMHQWPPNbhLHaCKoMisdoC3fldlsRUWu
wsjPrAb5qPX67cZO+Uow/iW6S8qUgnFsITG1+g1YlE93o+BfI1iInn7z7PAc
8vzL0rswRMKYH4aydCfbQONj6+/SiRm8vkNQI+F7N/IoMyvr/miHnlMko+RU
ot/XHqhk7OhHI+4pybgtHVAfnEWv4D6FS3U28WYKg5gVWv6+t6oDFKu3sArb
TKJwQUR4RfYQSl+aM2mSJIP17Kqomd0EnudTzdGfHUblYiGlffZkUP5qNL/y
Zhzj9s3KhiyPIN+veTqxIDLY5W/fqZ4/hsYhSS57+kYRFL5TUyPJUAm2dysX
R9H9pU5qRMwYmm3Y7XWTiJc8P8CeAaN4488RoWsa4+j2tViX4SUZ+EskFHyD
RjBamEfdaHYctxyyCmAzIUN18obLLm+p2GrXLqsl+AUj/IN0l3+XQd9h71z5
CgqGmdxaS7GtQVVx1fZvl+vhWMZsv27ZHOaKdByR023D0Z7dp76QWiC9fcjw
aPosdmgLTAhs78SHX7Mvf69tg5NfGvdrRM1g90/dOg/WHnQX/1HrwEGCpHNX
SuZDp9FPnedJk3E/fvHm83q/TAKuhXu0fnFT6H+tIuLG3kF8eui04NeADsi/
/GT+Fk7ir3vXYg8R82opzq3E8W8HJNOR4CbBt71dxeWn7g+jkNAto4sKZJjc
ak+7wDeBNT5f0sm6Iyg8/MRkwJIMJ1u3nj1nOI4nrfN/14kS97lVeUTQjQxF
LMMWl7PGcE1wzSx9YhSjLx28t8ebDE+CLb/v2DqGRu+W98n4jKHBYoukuwcZ
6EzGX99PpKKbz8OQXzsyUXowlEn5eCm85b0/W0tDxaLUj9XOvpWoJXz1Fvfe
WnjzI3329QEKXnRReSw+0Iwe0j/F0mKaQCv63e+bsnOoWlqSmdJDQgv9oDCs
aIWc9wI7vqnPop/8K+uDkV1Ir1C38eeBdkg+qXm02XwGab/rVfb29WDGWm3m
3sMkeLb3NVC8p7HnXXuJX2I/tjpoF3JMkSDGnBI0mT+F5aUOh7g2D+LDlC10
rx52wMECXptLPyZR9MGR7yf2DGGAZvmMG7kD2OQ4vZgkJ5G6eGzQmH0YGdsD
hLR4yfChQ+1l0csJJKZdfsLkMNoVpe8pvEQG3f1b5Yf6xzF/19p1xsQR5Eqh
m0NTMoiolSt1nh1H76AzETVao9gY/JtX7AkZuDZdGXDIp2KqZ3rA1rDPmHju
jDrzm2K4FX8qPvUwFasu534Q1CjHC113Fti0qsGn1iMy6BEFP+cGiwd8bUCL
g8ZlUNMA1Rp3n4XEz2FfhbYQJ0c70rfdUpcpbgHOteF9cZ2z+CKXJTY3nozB
FLmpo1pt4CSScX6eeRZZfv699bGyGzv2GrWF3G8Huk8r9kdgBkV3V73RcuxF
9fPTJvrnSGCt9lT/NDEviyK/Xykd7sfS1wMvpoZI8Pyc+Yaxqin0uygif4h2
EH22aj62J/h85jP7m4dcU5i6k+nVo4VBvC9wVWgih5i/9AtbWqwm8cdq7fnA
xiGUOE99j787YNLxVW9u2wTqcJ29L+A3TPDW9ReUQwTfulR2tJyZQL754nzG
cyMoOaK65bQqGUy/KHyGKioaNPX1Sm5KwWwnD8XdxwuBIfxN6JXLVJS5OJzJ
/roUKYGCYl5tlfBdpMtPIYWCZdWrZrGmdXhKR1xr4HA9dIwvTon8mkOoHdKW
D21Fq5lX2+4dbIYRG/YVP5k5fMqaeDqSsQM/ONDF0wW2giXNm0Ih11ncsMfq
Dx19F4rnvb6zpbgNlEIyQ+waZ7DtsJvP4qevmJGbXGEa1Q5X0qWSTXlnUMpf
hp5lrRcffXqrdk2TBD75gdlz1oQujUkoZdr2DX/KSSUbfyOBzYEz2x81TeGK
Y4Ho/cUBvJ25ZYJBuQPudx7K3iZO4K5b3VbaB7H4qPFBu4gOMB/MkCsJmcS1
S3mDjz8MYWb5XhmXwQ7IOEVXLbt5EmU1nLZdujSMsj1nPcnsZNDp5d99sJmK
DMo33nocTcTQpLoDZ6Ty4ZhUbchNYyp6lyv61h4uwe3tAVO9bhVwfZ7b4Xo3
Bd+IJh8YvlODjGH3hDRqasHtXIDhq5MU7A05ytNf24x/b2vbXqlohJMSInFX
feew7JnmXvNP7cj3vCYivr0FXhcks/8Ym8VkRvKR0pdk7HpqctV6Zxs88/If
KJWdRbF30YwJ7N04eH677MTGduChF9QJCZlBs7ozCms6PZjclB/CWN8OvQeU
fF3WptGh8dnEibt9eN5KOq3QkASJDsExK3em8fbsMKle9hvqMiwXbu4nQVTw
mfOn2qcw+pvUmZjZAVxwkH3wV7YD+Jn3JygpTqH6kmiaZMEgbgqvyt/v0wGO
HoVntpVMoncOa431/SH80nZVdmdDB1zU1PXkIVMxs7POD7vjUOK2Ir3Q61zI
62XdzfuUivELrkY/ygtxk/2U4X7jcrh+YyryyR8KkhU0iqKzqrCEulAQ5F0D
lyIGjF6YU7CSpO2rk9eIdH/+CQa6NgATvd6zmLY5tNh/erOnfRtKpPw2aw5u
BuZ8w4lUyTl8VxeTnH+mAzeLSZz+9rIV9scMhLSGzqLbx32K+7M68bBtxYkT
z9tgXP+FXyfjLPbwBMprTnej2+rm9wZK7ZC+ieli+cMZlKAp2/B5ugfnong3
1U23wxaT9sq9o9MEv93+OFzYhxu74w5wWpPA2Hboo/SNaczO0Zo6cucbyiQ+
dKIn7lOXQzLsCJnQS1JexwonB1DuUIsls2QHvNtOLv15dQrD7JjnJ+MIXg22
on//vAM6WE2qInqo2LfJVKRvLBarjeci92/LgedNEQx/PalYiGY+tPn5uHxq
sbbcrAycVMJ3M++g4ojKtSZFuUr8PKg3veVxNejdv+Qi946CFiPjlHs/6tGK
/SKNwp162LPFQ+DGBgqee5rCbWzTihvD4o5ccyR8zTPxF3lP5jBUld7blo+E
qCTpb7TcAo53yVfvzMxinIDbdT0nMnKftQSmP61Q6RwfxHV7Fs9zk2c847uw
l7Q0P9zQBoYKpXFN5BnUD+9XCAn5ijEfvc5nE/q8v8HTmFdtBtUNdje+NerF
ePNK4xbCF7iwfeVTa57GoxvcUISxHzc8MN5X8owEPRn8WwPUppGsGNnA6/YN
rQ7NT1US90lfVbM43zmFjYnOGloTAzjCZ+opfbQDxP0EYnYOUPFPuHL1LMRg
iGFRQVNjNkwlxWnRfqBixhuVtzS/c/HXB6fOk69LIVjsj2DUUSr+zXivfJe+
Am0fPlhoeloFTN7Ot5lyKXj9bNhXDoL3bDla7Z7p1wGHVkX9IUkKlvj9Wzon
0ILWcwdiQ540wj3SqUqRzDlMCS8V3STQjrt/aUo8/tUMRZuvjA+LzuF1Mmvf
6wcdaLVscKDKqRUM5SXqficR/va+Bfsxz04UO6ki+lK7DSKvqM2aicwiU9G3
xkXrblz8o/l4haUdmNVdD5SnzCBnrcHApaM9GO8ywSse0Q4iGaM/tSVmMMnn
92Xnul60NNWtddpFAvlDOTrXC6dxf8+D+iX5fnwt5CfL7E6ClrRxrV6lafSY
r0lTjv6GDyajn9IOkKDwb7BKwzAVhb9e/+jSGYWtY78LvJKzQE57+RIpiopv
VK03ptvmIEMci52wG8LKJpqDFvJUrHWiad49V4aBtZZJR4Ir4QrdY5JuBwXR
YH6Jla0W72V10p23qQU1x7dRG25S8J58QL6zfxNKcGqsOXo1QNfDyHMKw3Po
ZeVkqy/fhrWrSwmZm5uhIkv5YoPxHL5OZXwd70TChpCr18rZWqGgTq1SYnYW
331UEbfyJCO70MPIf1OtwDJlc9T80Syqnb7Bw3u3C3lULauzo9rgXwCXCO3a
DMZnGvDn8HzFrZ0S3SnS7eC8+XHAZc8ZfCDufVQ8pQfj6Pqa2Urbga/ZZa/z
jhlsbl66Hs7fh28/l3B3HSVBtbIGX07SNEYVXLcweNqPNvKLZQd8Cc1IFWBj
CJ7GzHNVzE6cPfg0OHguQLIbLKpAMYthEPn/PvH5UDOJ0kMGMj8ru8Egc5P5
scEubBDYZFdcMYOCW4xGuzeQIY2qzFqUQcJgqdzqcibiPr5P9702bIe4q33m
EvvbcPIm3+rvrDlsWODkvkfw2OqNL72xhP4Lf2l2fe9uCvo6ihRXXWoGVuM7
OU1mjehs2kqhv0vBoiMaEX3HGiEulUQd9q3HbPonjy9+oODc7hibEd96kEm3
sCveXYerosYRfkUUPNTi4sUhWwcl9rUzN3/W4PTXjeTDXynIKkGbMnmgFhQT
/k0OMtbg1lzhX8VUCnYqylUVnauBgZUx5TnpalTfZ+TznZaKP4qO2px5Xg3T
Z6u1TgVU4QlzTobxrVQ8f+JH7nRnFUwU1z5NaaFgQWGU5NbicjxfN3laZVMT
9DpXcFI/TqOyJluhVGMvHnOPqvst2glcUxUcqvepeKRWlL9w8Avmih2k5DgS
fbpw4YXbJyp+8Gn+rXAtDUNDdh3LMSoDUfbfETvKqHjfavn3veU4PJ7RUXPB
pRhm96SLsrVRcbdGFI25VjTxPLZ8F+rygSQ8tu1CLxUjOM2tpnXCUZt5jHZw
LQeOMoDPZaIvbrG6PwyuDsZQlVKT903ZsDI5wHp7gop+NJSfmpqBaGRYJt+z
IQu29SqMHpqhIvpsj02NDkArlwuNQm8zIHWLjSEvhYo3pr3/tDzzRxHlTdJb
r6XDVeEpRst5KiodzmqrfeSLit3GfV5v0uBu9K6fl38QemzLj4odr7yxw8DO
5X1eCtAzPuvoWqBiwzm7iFL215i1JCV2bVcyHFXikTudToWdnIeK3yuXAYMj
Z6jXoaj//H4vo9d/T1hOA3bG/g62vzGL7GE9QZbSPfBu6JHjacoIbne17kw4
Q/hyS7vknR49kCp1QkZ5ZA6z/3bL+u1uRP8+5kuWG4h+EU/TZz7cix9OzZ0w
ip1GFQGl4R1VnfD75XlxvhsTqLw9bUFaYBgtC/yT3z0j+kL5lGrFczJq/Lig
buw8iwI7/5CSAgn++fnX6MPwOPY58FrS7hjB23Y3ui+odMG1kr6VpAvtOEsz
cvKf6RyyVbTODt5uA9aztwXesY6iNeO+nzIHx3F5gtFdYbgTkg0ozvYnW1Hs
WNrur5Q59PV4KfnarwXqQ8k7qsaH0HtQcZl/9yT637XU0trWCWJFPFfJ3k1Y
qpBZ2KFAQW8OacfzR5rg/Yaui0sygyj+W5th96MpPM1yjKWT8N3Dez9Uid5v
wJuOsY+EnCjYOGhrPKrVAPkhnaaOjXX4tVBfSCqZggxvxU+c+1YHD1kVPRRc
a7FxIq2xvIGCp+jFRRZSamF4WD67074G/X2k8rjHKDiayE5SSa+B42+f4Vpo
NUY77V5VXaEg77Zyada+anA6QascPVqFNUn+aVUsVPz52F7WSrgazj5/uPGX
Yywa2SY0cRD1MnFexC8w4xPIPa15PKtUhdwVMqOm3FTMffJSaaN3FbQIzbbs
k6QizT5hBVtCd734IBC08KEW+P46trL5UvHj8TRvwaUMFFlhPHDoaAWUXa4a
NfxCxZxV90daokmo6st+RJawu5Vb9GdY6ql4hWHbhxDTWEwNEekociqEnoIV
us+dVFQuUDLpDItEYf3GK8IqeWCuFRCxg5jLQq3MarSjISj6TlrvG/kL+D4M
ecc8RujDIW2PJeoH/PHM4PDsQBbsZ8o1M56iotPwCeaO8XdoV8p9ap9iJggr
G4cWzFLxcJvNvRSntzj6oz80by4dAsW+KGlRqcj9WPgdrZ8fIp2NvXbAZyAP
zCibfyeeU8Dj1e05H4xS11kMCEmFjfL0sIvoI/vwcpVV8EIBZ37pnyPJUPhE
/q/LIhUpE89YbH+/QvFfy38c9JOALkzatDJzGsPsFcN49fvx4NCuvPzXJBAo
pXeQGppG04rMpNjWPrQlSasbGZDglSGvxwx1GE9rd+zKnxvHfbJmOhjdBfON
6VaSnIN4XY1fUEJ/CpdeHgw339IJTxf8BDec7MPgii2PyS3TaH0yvJka3AE9
NgJPu3S/oq3yAO3j4hmMvfObN02PBCfu2McNPZ3GCIHzXfMbv2HG1722Kzkk
uKUfpVanM42bonrSHBR7UXX250P+v11gtoob+n5QYevLuIa1gBQoVMgx+mDl
Cmypy22xM1SQF1srEWDMhGlx9RvlYqaAghd9PzrMompv3yepERKKOh38ma1O
BhVpZkMxvW9II9P3obV5En/Gf2ryyOgB4H8+c2U/FUfvbz9RYFmEcdtJluLR
dWDGJnqcrakDK+8MU9Y2zWKu6siLpsJO4Gcq/jdq24p5xkJRTepz6PErxoUz
gQTNJpI5m9YaMGR5qZpzbQ7Zmb02W5u0ge67s9pvG2rxc5ggjzYx1yqCaVoU
zVrgpMvrE5v9q/HiH2bZiCSij7qNTntVNQLv0YARfkoljndxHLXqpeDlkyfH
PJPrYdCaSn/+cwWaRdF8ufyPgv5MOjldy7UQ2ZXcxpxTjmI7vvW77iTmFLP+
vu43NcAxtVh6kFqGUOrkn0boxI06adsvGVbDO3XNyeHLZUhzkj/l2VkqehZI
Ps26UwVJHybIN+pKcXTHUfFNqlR0SXma0eZdCTbLloKgW4pZOdzVgtcJ/+36
UiGcVAGPGZRSu9YQgzo5aq4ZUpFxSEcy+VgFHFLO0as3QExiZjvMYk7Filej
W74klAOnhakGXX8J8v4et/G0piJ54MfPa0fL4fzS4xO6FiXIFrfdmsOWiv3i
JG5yZRmwXTHV8mcpQXuRYKs2wm+pNvzrXTIug4bjeYIbvxTjCbe/vVPPqVjT
CU/GOMugL6eDO8WiGD+q8+XauVCRi3Ekmr++FGI2MNeUHSrGCx7ku/5uVGyp
ZL9151UprAp0KowuFCGf08e1C6+o+CqAxS/qciksbvWqnC4vwlGrm1Kpr4lz
9W3VXthRCmybX6h++1CEdZtEJOu9qZg3Rm45QkK4LbZ7QxPxu2ZS/EGVrHSM
Tnky4ZpRAeyDdeTULEJ//mx/fOlIPKYZx8glW5dCHAPNt+oaKm5XFevycY1C
raFA3Y6oIvi1KnFinkTFRztYTK4MhCCHmkr7s/f5cCPWxpelj8jz6iiH9q9A
TO/SYVCVz4WE78mm9UNU1GF46h9vHoBXmblW1yy+QLbbJWeOcSoebxri0i/0
Q0rXkaXK6SzYcrHB9DbBS0H53y/Xn/dBZ/5uxtCETHh3YaZvlZj7gpqKfv5z
nqjUKPZMLjADjtfdPrI+9zNFPn75Lu6BHWUnag8mpsPrk4cDewi+yndSHpCa
e4m+Nf7XnLI+Q/dU6011gq9qHzFTLjO4ouR1TdI3hTSIVow29SX43UgtKC3a
yBm5GWwb/6ylwEK9i1YkwWPzyeq8ASsvUGVUSVW9OxlqmjU6vAkekxXvUKz3
dMS9O6p4sTkJaN0SXHWXqDi+9NhU0uQZsgWf2HCkPxEe2Su9ZF+mYtvrXIfu
l0/QoPAF7RWaREijyH/LJHDdHennzLrtUJfCHHHvRAJoepfXyP2kosAVQ67k
67Yo+S+J9+LTeOj8c6mrgsBLn23evUT7GGWrrwgxNsXBi7v2B079ouIX3euy
pIZHyNLD0s16OA78FJdtowhce7gtoS7zIbpacAuzBH6CO69rJWhXqBh8IPQ5
d9YD9IrtSulg+QR0L9/76hB4QC9fysc6a3TNGa5+6B4L3zY/9ksgcBoDRsvr
E1Z4spU7asOmWKjy2sz+g8BzisVZeG5Z4tyzkbiuwBio+FbU7eJIhQbxcH3d
99Vw/fJd5V2agXDJvS7Y5i0FA040qTNLV+H0M69ynwst/6mj4tf6ojbPUWF8
JXx4//EMOJH51phn8iWo+Kv9Ej/VDYbJ50vreObwRHfXJQ3uaijebLeVXXkU
GTP2VLY4jqLeAY1wLOwFV94/p853j2PsMY19FVuHsW7vzrMprj2gv31FTcKU
irxbD6aYCH5B29F/MQN7q0GubdX4/cV2ZGOlqfNpnMUhtfqyBxyEj7iw79EH
6XrcvfNZwBLhU6//TH8a9qIVcigGP93Tq/DaxvSz9FUUbPIZHf2R2ABzd8uk
dA5V4C/eC+TGzVQ8+uSthb1ULTg3n73z6GMZxjOKK3ifouIzMzuy/Lcq6L7n
Rm3zLUW5ljrs0yTq7oPNvrLDlSBC12EYkoLI4mPvf8OYinJZMlcbZsqhck+D
Pn10CV58967c7BExb93Za/V/lYHagmlUXX8xFvvX+s87UHGlICdDVLoM7l/q
fx15qRidqxj62F9S0Z9Sb6uZUArs9OecQnqKcO+TwtyXnlTcGfes7J1EKZQY
Zy0OxVDxQNHuc/IPkvE9S7pm8rcy4K/P3sePVExR2j57eC0G7bvv5X32LYG8
6RO5Hs0EXxuwMz/aHoF7vpgWVv4tgNniQQG9bkIn/RYZrT8RjKMnpBvnrudB
/XLX2D5Ct6hKebgmbnmPTNGXhOiVc6DN8JLwtlEq7t1tY/J81R8DViM8L0Vn
wzvO1fp2whccS4y11gVfrE7JDR2Ty4Jb9+3elk5TcetOeP3I1Qt1xFj5j+/M
hMrm9FCeOeJ5nB3qm5+/Qt4kn3vveTNgyVL0MCPBD885nAqj6Nyx7e7IQQHZ
dODJ2fQ9jPAL+wI+f0+guKJErtuukuU0eL2TIWWZ4A1VPZuA+UMuGDc19GEi
NBXE2xSm1nVOHFesSWGiEw7ZD0bpmKSAxeU7aTsJftjyne/Bttzn6H0xZ1lZ
LRm+hWl6/yTwd/nTPgVWDriWc9L6qGYSPClI0cwneOMRw8ZtWZZPcUFbufTa
vUQYcrd7c4fgh+8n3HY9SLBHjj+sAZVBCfC43rRjlcArpFNI1Zx2qH+Vi0LX
GQ8VCS+Z3Ah++CEvwXQ58THecl+gYRKIB4mkpSf/CPyeNGfRX0MbfPO7RI7r
WRxo09pxWxL88MZkIG/2zCOE8V0tOPAJOupyHrYTeNphC8k/Rx/i4RW35CrV
TxBG19MrSvT7KedRTjzzANvv9jVy18RCxa7Fe84EfuKcmpG2njWGuJ4716AU
Cw5sxtuaCTx90eXpp91WeOaMH5WzNQZuPhoL3fabin9Hiu6e/nQfvVx1YuF2
DOgYemw7ukyFesGvv7UTEqAu8A/LBpIz0LYtnmuTdEeJQ0fKPnLNYYD/zBbB
pB4oCrfQu3mwGXfk1VfuJfx73/W8nZcftgOTxfOMr4E1eItk9lTSi4KbJkUW
Femb4ZSi8TVrhUocY9rXlkShIAY/4VWqrgPBxrk0ycvl6MBXGFIoREW2OQih
/VEN5Ou+l+w3lOEr+WTGMCUqtp9+5+OxWAmDEroUnkOl2HDjqePCTYJ3+Q+M
VDtVgKyd3ErVLsSCAyKeFoSfzoXnEnTm5bCpYT49/lQJKnHPV72yp+JZqx3P
rd+Vwcmmf9qcvsX4CmWCSp2I+aDsIkSdK4XL+zepjLEVY+x2drtf7lS86FWz
ImFeCmbD7lnZKUXYevj7YoUX4cvJcpvjaErB4XOPlVt5N54gGclpOszhGve/
PYeeRUO2xLtB6oMi/OKnvJT4hore53NZWx0Rlu4ziKWmTaOQmJuH3f1+pAp+
vLXiTfpPHr4Xb3ubvGccmw+HOX5WGcG3yQdUXR5/hZyZTVKZeUP47WqKOEVj
AiVVJdPdK77Cavutwj/sI/il09jMxW0ctz9ODFTBbhh5Ead7vnsQz46pc7m4
TWJ96wkd2YAuuCEOGtsMvmKayC9JKYUZVLp0nCrTT4aupbrJxmvfsJTkxh/S
O4UN+Tt7pAw7If666IR+US8Kzm/ifdo0jZ/qD5SQLpKhrW4+Q92zA8sSpYuf
181ip9K0QdpSO1xfEfTmsfwEBRJ3liOIOa/HaRteNB4DZ+AFRfVlEYbxNB0p
8yH0TvQVNpN4BH25r89FA6bxo9bsfGdZP0pXbQzfEEOCoMsXjFL0i5D73riH
G+HnanLuZShdQ7g1GbgwUDWN5b3X3p3f348ONX9+5tuTQH7BlF6+lgph96V5
uluKYcSpfdGkVBH+TW+zTdLpx6uDToV7uqbw97QteS92wd9vGc0VQZ04HRnP
+vLQLJpUvzx4QKkDjHUPTHG3jcDJwq5rB9YmcXf9Dcnb89kgkXDae+JdL7R4
ro6GFM5iv9CdL+FLOdDAMG9+MbYQuV7SCltbUnFwuW7fn08VkLXE8ozTtw+L
jAgi95tFWz6egaNm6aByLvD7n+efMW/kT5BLJRWl6AzZf9kWQHBKB2cKcwqa
yJSNKnUQukNDOEnNKAcYG6pecY+H4D1Hy+6hQaKeeY0/KBz+An7307QjHsbh
1EW2qGLCd55UtjDBvRnQqnwvfgtbD4go+3EOHJlD5bm9zB+XEuHXazH+X4mf
sNhFtp1K+E5V2jM0b28nQyCd6vf9n3pBdfQDK237LEZxf9Tca5wAX4/9uzHz
iAr8Su5Chf41MDB4d8p/TAM45harnn+mgtRnIRWv8TKgfWi9kk+jCPOKQSZ3
r1NAWnbHhVmRDiBZDktsJEfBb/W1M3a2VGAqPRt3T6AG3OcqP4ZkBIPWN+fX
msRc458rDemXS0OaR/FNBWpFcLIkN28gcAhqfphMh12bxj176LO3XiqHqldd
f9669INFVgptnvgs4nCE190/BdDnNGoT1peJA2P3N+k/JOYvA2dUdHEVcC8Z
W+f+ycRjC1aSqaFUdHPl0L/2uAzsYUvsjc5U/LhJEbCY0KFKY+fs+ouAx1mr
ynZHFI4d7Z84RdSttinzUKl8AuwKfr6vwT4RPS/o37PvIfR1gILf9Hg2lJsv
6XZIfoWQCr8iX705LNtYK//WPRk28/ac/Vf0Fd6fPLXB7OwcCv51rQ6yTIIK
kT6PCqsQHOTWrB4g5uE5JSuxAxtSYT5nsvzlkyiMYtnh/I6YV60DC2cCwmIh
74Se0ojyACb0yR/iHpzBAo68kaLD8SC19DcnlNDtRvPSR/s3BaFSGdOpIkoG
6C1Hjy//I/SwsMG8TP8ZZDfhObBhyAS6HwcUSRHzy5J5h9qR2aco+YHvjE1V
Aih8ysw6Q8wdXyvBk7ffPED9gM5ChyNx8Npj0eoXked9fYXbjufieG6P7dvD
o3fBPMOH04iYI2ocYe/3TDzGyOOaL66VRsOeInnWNSJ+13CDp9LF/WgnVtJz
+7ouvLAtllslcMcQGdOC5/sw1VexlNJ1Cw63WFqvx/fVK74tvMSPvOczeL65
XYfcf3/1bqxScc112Mz9qQVyPqY1KdENBwpJySmJwEXu3mtw7DXEU4b5/G18
YaDjr6e1nj9cTL7y5TIXeqh5fXX5eAvCzrJU8qxRUTJ5sXvp2m2001FUqT8U
AuX/uIO7Yueg6sMe9p07u8FoxJ5NW/EePFHxYGrYTcFzjAXS7kk1+Fltvjh+
eztcVrBeGSLyfFzWbGeR+wASPEGtt4+owRXXd+7r93yP65m30tY78G11Nkfb
Rw9s6Gkp9O1U9LlUc7j9eTSOValpej/Oh0KGAw8Or2Rjcdg77u97qMhs57Pj
UHsDlOgI2vXdygKmU1J1q8ep2LnBKy44tP4/58IPxcdaCbmjmHA5kLH5/CSe
4aOz2x+fCfS9PseKIRVDeW/ovyd8tGrPqxmfzGqwmIzI++BLhsunu2IHVubQ
5OVaWuLFPJi1OtlLEzaH/DO1rca83Tj8M3/VXO4TbF10pAk5QQLlV68x15aC
/ka1el/a0qDr1sRmY1cyVors/hi2jYKsM72veDEVSnlclnyUg5F5kTmVhuiX
pfyDlkO7kiFY1rPWPD8Hg27e444NJHQZzwWZfIYy4JEbNnD9nIaqOk/4tmVT
cVie56T6cYSGd6mr9O9TUcBcLnKukIq9AseuDd4rhv6yLCdP4xTUXYsGyWoq
flY2J1WRCkBn4GTPK0I3zO8XLpPnaELZHF9RZfdI8LWNY3cLSsUNRcOZe2qp
eIFy4Y3MbD6s6P1pDPIORU4TAe2HhH5sqmM6FvckAUwFA55c1CNjYGGZgDo/
4S9ctONtHRLg46usA0wGoej18L1BAxFfzRPFdII9ATafzvyzlzUJXQ/euvGk
k5jvgyU5tcdzIIqrZZTdKgGTXWQXfxD8wJbYY2TN/AWWkudPNysnooqysXNq
P6H/SxgW2jOzYEfxLrOQvWS0lxt567GXgpcPKFpZLKbD3x76IxaVGUjOFd/7
i8hvTr9XLcE8E24lfKbonU3AuZTNhR8If9+yNXzeyzgT2ItJnFT+dqgPVeD7
FU7BY7EMrAcN06FzdYZVW2YEL4bmrqa4TyHzNHlCmSUBOp+f6YkrIOHu4y9p
ovQpuPdv0caU4M+QuPtYpu3UJ/xGMfuwQOh90nUhqYmz6XAjWSsw8EMcOp35
S6dI8E3gkaoV58w0eBh3+Ko6Xzgm5DKcO0XoaH0u5XObXD+Bp4jVMa2vw7jn
xzP34rYpvEBmLbmyLR40aTZs6PZrhbvU/SvXvlIwxeGZasl0GjC0W3C1DUSh
pfDNbecIPrxw8JGRhGkyXLRh/FrzIA5lb5+vVJkh+Kzs4NhiRAr08BXS2lR9
wtWLnCU0hM8wdVUdmjiRDBUbxTrPOw2BRLebAl/pNF64db3nj2Y8yHrdx6L2
GPT6rbV1B+EzLu2sZmL/kwA1Ln26vs7D+LDz9zUv9mk8XmnLkKMfB0/P9W0T
PhKJLhHbWsyIcxXRb6/abBAL8pUq1S28kbix50zDcwLPzUuyiFWNhVtTIUGV
dJ9wd8td/jtE/vvS8fYPPsSDj8YWEclxKo6VWFMcXfyQ5CS96+FAFhzozbir
TdxjpHfxpyxXH0x6GrvVMykTslv30S4SfHJxaLaqcFUSpR7ufzP5xgIkH4yb
/SBwFJq2d75yEBVWXF1/PbgPCRNBndKEP4oILz/MGkz4o6qCkfhbaaDO/fj4
Oh/ysZEyN/CdxMMTu1h2RN0CfQ258t8Erv9lMHHkzmnM0Iw4GM9iCIGhZnl1
RH3XfByj0os+xr4rFzZsbk+GqQQWh/vEOcsHb6lWVNmgTdc8U+pAIty1z76y
PhdYk76mZISeRgv3ym0aC3fBzSfj9zofDhpUbrE6fgql2Dfd2tlpAqo+T5he
EnMnluPFnQfCzvgqcPXt37NEHaqxKDsT/qhBQvTvo1An3PegYXXXfBxYNv/l
/UnkEeC2KjnHLIl3DTyYCjNMQIme8d3656qNX7pxz/0YLlztOSSfcBdK/86o
3Vz3U8EWEpxSjlipmZu02PAJPguffy5M+CDzz5EyWm9s8P6i75Wmylhov8Zy
+A+RR9cp4N7gVzGcza8/H/DIANo+NGb/JfBigUxhNu9D2M5z5WflN3X4mNmZ
XUvkCXld+ldloyoOG5ZTk6gx0FTxcGKFiC/UYAq1dDiCIicKZSYSjKApwTXU
kJiPP5sjArY+uouNd1nOfZuIhpItL5jW40OTuslMGw6hf27MkvaWu8B5YCZ+
/XOzD09w9JodwN6vArCgrAGJ/TNTy0Qee7tyXqsuQzzansbLNRUFnE0NZevx
HO4lusGXhHD7Xn82hxh1GGvb6iL9h9DTN3j4TGJNoT5e7VGXURSkunObrp+3
bGUyOG10P5rU/Van4TIA84Krn54Q8QJJUxQ2UTNU6CDdO/g9EmZifoWvz2XL
F7xcZYz78Az3yt3Lfjrg9V6+vY2IP3yBLrVmVg9Jyg6FJlcjQef8kx/rdUVH
F81/p30firRemU+YN4C8TJfGBSJeStU224NJD5tk3snmskeCtdZz//XnXxmp
MhD5sgfDSSoPIzdqwgbqqBUvMd9VmqSdY2OM4Wf0y/u01hEwdKhSZ72eL80r
9mi950eXr2+qBl1ugXtT+qvLRPzLpWM/fuTpYOtje3lKXjiIZ23g1yNwsv/5
mAOL2pjtTr/FyyEc8k09XqzneRenlN9cy4sRTUudjKM3QaY0mfPfet/t2Nfs
q7ATtReeXl72VwVauTby+rnqx856aZ3chbu0znuTDxgCq5hleAyRfz/b5qi3
97UwImT2hY1KGFyxlpwpI/C/IqT7fU9uoHRA84mS8lCYPyL9JY/Ab5xYyr83
cRWnDjNoHJoPha3xIhvXPzcleXrMirQdb+efKJGVuQIX2c/SrN//PfbXx+Ua
uXCmLK2EmqwLh50/eY0SecL8ecSuMZpD5pENV6/Qh0J008u09fd7mvESQ/V2
biRHZ+4kh+jDC/vBqk2Ebtk+FuxVyqSBk/5KQzpPQmDmsVvENgIPSvYtlHqv
jg0tAZtU1ELATDnkyPrznJ56VpuQxI6Pk+Sd5HpVYL/MUxZBIl4i07Pr4El1
PC5iXPSDOQSGRE7yDRLxvfzP2iO3W8NI6Is+plwrwKAG49d+VLAaz7IkbawC
P+N7mjO9V+HqnbhD6319/f1QnI/pdVCMFFp+w30H2Hm2vOcW70MfwWodhU+z
qMG9/ehTswxwePB8eCdbNpYbW+ZXPKUitb9S/mV6JbRVWCdwmvbBr0mGZ4bR
s0hbUPg23jEBdJ+M0Vz9nYfW4XmT0glU9LhxMe1lYyGkebHWvnAIxF3UR5Ks
BJ/tus3FnbkUD/6ClVwDvImoUz+Z+qmPirTHuG1MDmXDDt0iD47oeLwsq8JV
OELM8Yx96ryJGXDRzIhmqasXP7xwuxJB+NwZvos81RoxwNRzkj43NQO5Bf5u
kiF8Wenu6RcfJpLh2ViQ5Zs7n/BwzTWTEgoVn3CfuuNpmgh8dF9cA5y7Qf9E
7MZKzzlcUxFZeJ0QDY6th+SXiPsRl5+8cFBNHL9kBc8x85vDXNODkfX3YnL5
8FC+9H5U3iBnYXZOAkqv8mvuJnxCY+Dyi8Trjui9w/4Vi0YyaDPesFzPk+c4
ZDbyQBpn9xe+da4wg7vpdtrreRqc+kM5DY8jo7kcs8aQEliH+MvfIHi4G1fu
cis9xifZzA/P3IoHvfeDx9frcN+azU21BXHcPxnt2qJ3A+Y8LFu+E3y7FY2m
bTotcWBHoteVA59gtb1XcYDgyd8CsgpVZDM8bsIXM1wYAyKiUbDedzIci7ej
TUVx503PFoOqW5C4z6ZsvW7ffPO/HygggmsMonm2xvqQX+2XX0/wnrawRePv
jfooUvi19t/paLBwkRFZ50/bt+p0Vg+FMfq2wDB3/x2Ql74laELwzBiVg0HX
9h4e55KYqmOLgoprE6zFBF5EZvquaGwJIiW/dYRNIuFzpKxfH4F7s9eP3pwz
xZQ9tJ4hEpGw+XZJx3q/vzK8rLmzjx/Tec9eMiD6/aGcQI4U0XeqEQVv2fiN
MdmOKUv8ezg42tmVr9+P4OpprnsyvCgwZyCpPqINj0Tb4tfPtTzJvyLAsguX
+eh0SHH6UD9V9hOJPIyp21i31Yhj98PiZOmuUKCjF6hdfy/p0VN0zNu34z3b
IwsL92WgSnDl/5vXvR//iBpKcOPNd8czPysbwib/2lQaoh97bbx+3tLXx1T3
PYWXI0JgW+2wlhCBb4srfShEo4+ZcrWn1RY/wrbvNRHrfPuoLv90yy923DHn
kNpfqAEH/U+/bQ8i+MGm7akj4Rt3/N3e+OpAOWy6fu08x0A5GpIoxy0dqbiB
2ZBkZZMPYruUOVhFs7Dx8cBVFj0qOp8hfa4OqYGrdz+/CjjmhhpnnBYTCP1f
ru7pN52XAjFFJQJGii4oozR8cJqo0z08ifr6Z5Lg0gtt6/CHvfBo7/x90sAs
9klbHhA4HQfVZUkiqhmu2NT6YY2VqMdGvKU8ZRYPPZYPBIUWs5FFPdtpppnQ
4f3mcce9MsFN99Jzzg3x+OVEvJIlobMuqwUUD4WkQ1yaApeuThzavF1StJ8m
9E7WflWr0FTYU1fS2531Cf0YV9CB0I2ce7mTjmckAYvBcIUwTRimpYn5yRA6
5Vq4tGWGTiwIbGy5WT5Jxfjx2yuCGo7o6DlM++VIFtgJM7oPErqL4bPMtlba
5zheHLmRvi0Vctvfca/Xg9DWlz3l1ifQSGa5M6j0BrToSZmu13+nHh2JTfA4
NoqduSY0eRNYHH3Or793u1uOHYr0R1B8voTb78glkNalqblA1L/GrcDsfSOW
EDe8vcCEKQaYp4fv0hF1O9o78mLfORO8e2GTnUYLMd+7hpPW8wy+VFnKS9mL
5nwOnnumzwHrklnyz/W+uFQz86DfGJ8+7pKM+hcBrIxCQtpEHbLhwXaJGEkM
HBh5ofgxHCLfNNr5EvhGYwcpQVprCOSIPKRqHAYdX8Ro1usnV7HEStiaC3fR
NgqbvLsGAhf0HrIT9Xb5do3ZiaDDOHboW+vbOyHw/vNzBsk+KizxcywrTuRC
Z6ZXKOfHO7LPlNsmmIeoYCYuwyAkkwPfvp+O9BI8DFsvDGlxtFGhg+Xf/jK9
QlBzvrMw8uM4fPvl2BzSTQWmpgfbdnLmQ8zbWNdtHFL/6Yv/a0/tv+L//4Zn
u14QWv+eX8jti4N8QgKoS32dm213Bsv924TW/48iTi3zwUBACmw2m9Kzt3KF
b2sPBdfxMP1qqUEC/7lzzdqWwB9UJO5bxxluZZ8YIvB9A/vYbAg8cC27c/3v
hh0WFpxbjmeAuWuW8OLES3hVu4lT5B8V+oX5Oi3O+oCYkhWU3TeXjbSRCAgj
UyFbb9V7kbYAJP3khm+J3pO9PmaVolFLBXHRNJ2EhmL4UEtarC8+D6F9bIf5
iDoJ5/e4FXS9EGiidPV0P5yEvZvfmH4i6uSLW70269Z8eMhnw7OD+8x/1iGH
6TYODqIOv2Yo+L44nQP0q9Y/x2dE//Pedk3dlvl3exZzTBzyw/52IMPcoRC5
rx0gFX32qm7lOHqcs6/S/zaMSWXG6Vx23XDr/+x7zv9v3zMyI+FvhWcnhoxE
T973n8W7Nv5zt1fbwKNlNOzKQTIyHXwa1Ts/i1cNWsVey7VBfEjcHl26Dnzu
S3YvlJ7Dp6eiN5MiWsHAr2vqzAYS3nqlbKHwdA5vpze+f7C1FWJkW1Q+iLcj
Z9gXZ5bUOXzTXK3sLdAC4x9NIqzs2nBI/2mhT9ccVr3havWEZvBOvHJQ5lwD
crr+Hv4tQ/gPh8BzByNiYPSkyne7jlbs/W2vG/FnDjVKsl1zHzXBbtLqtkfh
FHxZ41Fw/lY1OkQ/ag7Ja4Lwnodzs2yzyPeDT/SufhcyOabG/6TrgIXIA3d4
jabQszHGNmjLIEYs7bB6w9oJj8VDWd9unUD3lvmn/7hG8MI7fZZnHzpBSezs
cv3uMby6Wdhom+wYqkfwh425EPHNhqtPnUYwv3P1WkX7OG4W266872An7P4/
e6Dy/9sDzfviVpa2YQhnb43c/zo3iZK+Rw+0HyPDA7R0qOQYxJb4s1Y8iVPo
Z76DjNkdkFcdamf19Bta3SkXk5WbRv3lotSjpzvggOKEyTBDPx6MWnp0tWwa
/xzoM2apIEH3pgdsXYW9WOmyb8eRwzOYqbahn0+TBLuju12Zg3owqTClnt1j
BhvCntVHT7VDwZZ6jqCAr3g85MyoGHkGn7yrX3ji3g4L7k1+ameo2FaQvuPA
32IUlVtx7HKqAZte2Xvv0ufwyImw/QaLrbjlhW5kTEsrkPYM27EOzGCp1La4
laBuNFZz2VsZSILOhN1vw3dM44NApm3JTt9QsqU/8wY9GRpSK8TK7CaReZhH
UNtzCMOf7TpB84UM1xY5DrbRTaD3jPmK79URzH6W3r5jlQxh/2c/dO1/+6FH
F3kygj6O4hAlcHr3+BiOsY664zgZFmsYnXRCRlBn/6X08q5xHO/Ol3LLJsMP
+puVoznDqMWwqzY2egKLBae4fj4mQ63GO5WvU0P4VqxJuk51Eo8eiE24IkaG
KD9hXxHxIfTxeNuiMDyJnQXfg9fGO+DGoan3Yq8HsVST5V2pwRQyV+efPRfa
AaPPjroqjg2g+6aTBd2tU6j6aE0qQL0DdlnM5Cw8p+KSfVAwo0kOHtlbkjea
WAF+9Js3vX1Awa2B/zZkfqxHp+Yfz47xNgGDfdP4Z745ZH1Sppb1nYSF51vK
nnq0gVCoGvd44Qx20tv8OHz3Ky6n+k/fvk6CpkNWbx3uTqP4rs2d/OR+bBVM
YKq26wD9G6/OfhecQl0nh56ewkHcs7jR85IgGSL/tzca9n/2RjeGdsfA0jh6
DXir/rEfwTBu56zWLDI0O9AVRtKNo6hyTuao2yjW7ap/zVlOBvfkt4XqgmP4
fcNREf97Y3ik6t0f6wIyLPh+DgrVGUXPvD0baY6PY4T7QsTDGDIMN5xeLg4b
wdGKnqCsoXHkKXhuVOJMBobwK5aMP4ZR+5XVE5anE9gxp5QYr0MG59DXXKOa
w1gXbEtxpJnE+DZG9wARMszVZYtKxRA64V+m2+nmDLxDWXR5zlgGy/s42737
KHiJ1nKNZ6YK62TkaQZq6uCFSlO8Vecc1jhXjsW2tOLaUtfvwooWWOw6S7Oj
YBYviB37w9RExtcmK8Z9Q23gLZdIlQibwWqn5Yf7/33Fu285NB9IkyDjkpmt
zutpzHuQX+34qh+VQvylY4U7oOF/+6SL/2efNE6YvsL1wyQu5r8odvIYQq6R
nZxRB8mQOWYe8Ct3Amu4ayt8IoYx/tBFx01mZJDyFiyzmBjHrgNNJf0BI3iZ
vHnltg8ZbAx/Gx8VGseQXBNHDfNRTNny1PFhGBlOdeiS9KzH8DN5m2uq8Bga
bKwcUQ8ng+53g9O/akbRtG6R2tAyhj16hh6VAcR95vDlMRwaRaGYzd3ku+M4
M8d5IsqJDB9Ge99o5lOR56XsyU92qbhd/+OXV0IlULXdaYRuDxXljrzovZtY
jtH79cfgdA18lKSpfatCQVnyMyZb/iZ0vshg/GlnE9SaNZyyNZjDWYfPS6eF
SHj2uP3xk1GtcEZJZCef9SyyHB/2+r69C88q9HvG8bWDQXj1BWWXGTxt2Cms
9KQHx2xY7m8RI0HK//ZMff/Pnunq2ndP6+op5NK49OLN5ABOOsYFszp3QBiJ
L+rN70kM1Ofcbs42hBVSy+Nrox1QvmviesbpSdw5Y+jUyjyM8NUwUfEQGfjJ
2VplrhN4Am4eMxsbRsYEgYqAG2TgTJZj0e8ex3nX7F0KySO42zg8etWODEVG
O/s3nCR4RPT4zmK9UUxwMP9n5EEGR6YfikIRY7gd7d6Hr47iC62/tvVeZBjT
Y5BdriH8Zt0Xy9Ftifgtg33IUIDw+9fZtkQqE7r0/r3jJgqlGHs2i19IrAp+
dYsquodRkHL2jUBTSR3u7rH+fni6Hu4u2iX7EHU7N2Knxc3bhmfta2+I7WmB
XS80h98yzeEufW+wau7AkPLrPgx72oDTU9/PVHIWXzJOnlre0I1W3DTxFy61
Q+r/9k9p/s/+6c3Ql3NZidMYSk47t1u9H/+E3OSTaidBHFdHGNP8FLp1Xa5P
eTGA52NXys4QPCYBUxxPZKcwRbG17VL+IE4cZO5xyOiAn9Ib/M6/n0SjxBEx
3uAhrHq086PBSgd48Wz1MFicwHkmhjuVhsMYlXPm7FdRMnycCer1053AnSkc
ieI8I/isKle3UIMMz4Y+qrvUj+OeT9vFukpG0Fb3vj6rBRmmjimekm0nfNEu
ykb/xk/YlXzkmnJ+HjDH+HArW1AR385fFuwvwpUaR+sRtwp4JarQNt5FwQcW
05ypvDWocs0z1G5bHbCdHWS9epiCbKwXnCZ/N6PLdplC/wtN4HRHw9Pcdg73
Hs3vebjSjoN/rh/5LtMK3nbZ4wIls9iuZW+iw9qJufv9ajY9aQPn/+2lMv9v
L5X0v71UWtsfJ+SvE7xxmvnbKeFePEO9lx4kTII/ddpSNZ+nUZXqvLXrUj9O
K/xgKy0gwdmT1sfUWafx4EdhZD01gDdS37uOHumAytcaAhespvCFNWcM87NB
DM+LMN/+ugPGHz1609Q9iQ/5m2dsFYfw7yk2z81tHTAdslGi68Ikrlbusx9e
G8ILLJtPuzOT4b4lnRngBNpkqqTZxA0jh9i1NRtirn3puczy/4j78mgq3y7s
IpKihEokJCQyJSW6JZKUaNCAUESZVVKJJJJIEpWZkEwhc7RlnjmjeR7PcQYy
ptR3fuv3vL3ra633j++v7y9r7WU963nue9/73tc+e19XQycTYnpFu5u13kGK
Uq3R1S8FKLnr1rfSR0y4LRkTkzJXDJItns5vxSsQZ0sRNZOdCb3nflJW/aoC
i61vipwe17LeR9zitiMDtJsNjqw0bQL+kazHgx8bUWF0AqdxEx3YrhVkHfLA
AaEmXmiJ1oLmVrrEekvTYdeIS/6ua0SwmE569/bzf+dVObF5VUVsXtVfa1ZG
Y2QSjslOSzqf7oSHDTUynn54dORFUDLj2CRUWCq+fWLXDVE0dpky1jpLRPGy
i+ZSIWOo5ED9iV74XRAyKZ9OQI0b2tfriVEh/5N/52OOfvAd1WALEiSi7gOC
HClhFCg+IX2Y68QAjNwx6blkz1r/7GsqJ9dRgJLIKXN31SD0sMFJhWwiKqtI
TFYJnIBG3fQLbFmDoL7GPHeclQ+QJ/W7H/czAR+0F8dzIAEe5h8XuyiYj8jj
rS4Zr5jAw0kvto8shH3cD9Y/+1aOpjy3vHy6kwkOWet0bx+uhLp3M79/ytYg
kfPyvJfiGZBT3yO8fk8DONS87PTVb0Cp9+7ab9jAgAwnjz6+fW3QcFKWkfW0
GSk+jlh56j4djnaJDm5kI4B55BHGZla+HYTNsab9Ncd6193LNeAsDe6kTXHX
lbcDzkyP05bOshPUp19XTwIjJ2aXbl0nEMrLSGuj8Gj1U8flleqTwL+02qE7
oRs0zjUXGMsSkDvJtPsEa52/HSfU7jrTC1pT76rT4wmoxVJBp3IPFa549rfM
DPTB2GjTaztWvr0muzU94CMFkpIIeu+kB6Bwjly8cJqIhgydL6fspQC/oRdf
U9sAaCblxW0LJyLikW9bl4eZcOO48Yn7EnFw/xKfwor0T2j7F3XPikQm6E9v
KJ1JyQcSnajJ1wXojdAGgytaTLAoOFVY1vwVTnblIfHlKrRrG6pcX8+AgZ8n
9z25UAcPlm5IO6+rRzb0u/SMowwIf6vzbvJYC4wHtSdaGjSh2Hq6xgWgg036
arFXOBwoqPhfoU60IC5svjXsr/nWnMYYocFsGmhIW7b1WZPBpm/DvmcWOBSS
89qlWI4G15czOx+bd4BIpqgMXhCP9kjdusifPgkijYeWknd3wfdzNAGDLDxK
P7mm+A4rX6+W1CeeJXYD/tlym9QeArI3Kb67P4cKi1qXDQdMe4HNKD7Y9y0B
IXZYfnSACpXzIXUz1X0gbLP7auYMATn05vM5VFPgxPovgZ3cA7Bo/LPJEBHR
8hWx6OBxJsTHxhuHXokGRbdM7W7XXDSdELVjQxYT1tyzD7zOlgcb9WzsDfi+
oMqzhaUiJkzwem69LPiyHPbtNcGnfqtEBrzkF0eoDPgtdb18VW0NsNeLLURM
16LxaLGYRzcZYDEiby3k1gSbf7+x9JNrRPhNN+UDFujg7rGDvKWhDd5Xtn/0
aP7v3GskNvdahs29rpj05lhcpsHz9nuVL/eS4NHkQOrD7jYk8lFHVosVH4Q4
xHnjRdtBOtbR9vwbHCrOH2ix4aZBsXP+Lb7BDiDaJuB+qbH8tswieypsEsZ7
OcyePuyC8fVsRxwBj6Lkd0apik2CnsqDd4sresDmdb15uDIB3RK2u2rLis+h
zVz7P9v0gq5LWFDiKwIqPiDek3CYCuKDd6xycvpA8GhxvtQEAeU6+1S6UVm4
VGMAreKLBI9V5uHbLXOQmUf+9hOFTNheiv9lHJUL2sJzQQZepUi7MiZnhR0T
atLHdDg5AEJb1py7yFGJtg8XyTVwMOHKO1HeB/bVsM/hwAOXmRok1djXMvKG
AWsFB867dTTAQsq1w89kGlBRtP+TWCkGKC1JeHnWtkKgoNmXyw1NyBGbh03H
5mG3YfOwUitTL8oiOrSG79wtKkMEidq3XrGWbWjEa2twWRMN5JSKrPlXkeHA
VC7dVQKH2LgEqrNNafDl1bLyVEk7DCsFXiiqxSGOj0qxAbRJuJXRVfHDqBN+
6jQF7j2HR+d8jqFI70loMHLW7KrvgskS/kO5Lay8Lj1QRFhwEtZ3GzukyPSA
8QuxvUiNgAyD9kjszqTCllLHTi6XXnCunH1jEkpA1499kyDTmBB95mDeqk1v
YPgyg9fHKRslOq4bm/3ChLiuRWN2mxyoHtleFrv5M6rJHdo0486E4t9BnPfk
yoAuLZhgpViBInSPbWWIMGGDVulvv4NV8LpZKv4VTw3aFNhmdb+IAeekJL0C
XOpBYfXSj6yD9Uh/pd+ecEMGwI+STh6lFgig5Si87vnvnOxTbE62BpuTxVtT
NzNZecI3v5vPbh0gwE4lqeaTPa3oRoSpJGktHayilSZnVpPAtKns4tdPbej2
K061kgQaSLXFOjz9RIacn7aczuY49DFMr1f0AA30FyV/KGp1wJV7kmzVTBz6
zfFD/Dx+EspcRe1O5XTCgRChiw5OeEQ29TB568iKw5mzz+rXdIPlV5PtF3rw
yBir50hg9ZxJrJ4z1ybbfNmYCGISFrRiCToE0QQjyufaELF+xerAjTiW39y7
dn+YdW98u1Fje70FPRWKDgtLbQJDvrzyYBcGfGP0HNKTaUSuQs9dk8wZkCxR
c0yjsg5+etNqVo61ot50dR6UyIo/KCk2gtwN5uJcJpnLJLQVq3uIYHWPw1jd
w8qoJW+d4QCw5/KdyL5HgaWPh/zsB4hoyzRdQMC8F/a8H2wOjqcC0+RjXew0
AW2xj8TdYp3b4XS+G9qBk2ClQMgWW8Sjg/vFEg4ttoNlYfRt1aM02M10erDy
Fw4xG1fumy8kwSmi8a6FPhr4f/lhRODCIRWZffvm8ghgK8jLNDKjg3Cw+adQ
4TaEzIPOGY3hIE9uzHF9FR3WfJ/d6+jMyk+q2M75su7ld8myVk2stHK47Il9
eVIdSlqMJbpq0EHByfH7y894KA71hiZelv+vPagjDVSYupy4Slm6B6z0ElM0
OUhosYm3DHQnQLuJy6f6/SDMCb4w8VYiI0/d+KSJ5VFA6elq1qYjIO04fnSz
GxkN9N1ZKJ4Zhi1fi4O97ceAOlumbr+X/IcXK/Gvukf/VeWQvl0jsF/XZaO8
0RgkqPP/UusjIXEhZVXNkiEwVxII64gah7WErzWKASQ016Ahp3t9ECbkkhYz
cyZgWmtJ6xk/CRVTl7YeUB0AhVsvfBKjKKx8RCuS9IyIHHvOGlxW64OFTY0p
nVZUeCw52ji4SEBn9ScFZPb2QH+A7bou7knw1LZdXrAgIIVz928TTVnnX+fg
0fYoVpz4gv+QWoVHwjcFjyTfYsLh4dd19c6FIHDg0DkzqyqUr3tfaViDAc1l
L7myPJvgs0rcG+uCFpQT/HCz6AsafD9aJCHMTYanuGcBK+Lx6PHrfpXRCipo
a+VzEL16QPPcwVKje0SkoHosfM2PCahXXqmX3z8AfiIZwqYeJBRG1dR2Oj4O
gc9TeUfYhgHt4Pc2mCShWKzuEfdX3UNY0HunbsYYLPO9+PWofhisV+BFT1eS
kFBvwN1w+1HQP79BMU1sFBpKKlc8aiKhqlS/cxGaI6A5+KwlRn8MXj4MXZj8
SEKfLpwrLZcYhsFdoQ/kDMZB0HWYso71PkOl4eopW4dY+GrK7/TuCVi99hN7
phwJNX1/bGAmOQhXD531lGVOQHV89aogAhEplnQLlR0agAsFOt+XIymwrecK
YcKFiFwMubvtYlg4KEKRweGaC37bt4dr+H1F97ct5wQBA5503afT+Guheqtf
yfREA+oXtY3f4keHgrnT3OsU8JDlURHBWdyGapJTvytI0qCXPnvn3nQ7bD5Q
HXyoHY8Ix7Z6Xymmgpfqd3Mg9kDp0J6LWipE1PZgVarrWQqo39V5UMbCI/tK
7UKHuUn/k0erpMDrno/NBIg9atOeqB6EMb8ejgktEnpeOro79eQ4bPfqrf+1
dRhi+t1rBln+uVGnU0LmMAv3jQV8Sjs2AofaX5G0P5DQwebXlzQPj8KOmTHn
mjOjsCykpyeaTkI+CeGvLxmOQKGbkUSl1hjcE2J/HxBOQgKnUq+62Q2DMt6v
4wX/OGRMH4ld6URCt8lb9WVChqDXhx4e0zoO13oCPjXvJ6F3T8vOp+UzwezW
3FD56SwI8L1WdWX4C7rgPXJ5PQ8TrMlbhDe4VUJJOiVYmq8Ohb9rDSBsYcBS
DXln2/pWiCkcLWx0bEFuLhyFu3/TwFHT6tv7fCKMBytSfJ1wCLZ8fm5DnoTf
4qJOkfs7YQXhnFfIEh4F2sV3RaRTodo0of+ORC8cO29w0H8dEaVjdY9QrO5R
gNU9uHKU7wYmUuDjPasVsHMAGiUCEkUiiWjFDF0nJ2MCnD2l7tm5DcKPzkdq
metISHlHdEBO2Tg0m0obS8UMwVH6wU62CyS0UyPddYY8BiFBl3mTPgyDx8fD
zsu+JMRof0NG30dZcZCr73gUa/31dsfTIkjo/eZUq2nJUciff5useHsUAsVa
E7tZ6xwmO/xg86UR0LZyzRVQH4Nr239LEx6TkIVJk9/9aiZsG/taVZLzAdSr
dtjO5X9GfevsV0QhJsul1h2cIJaDRvqmUZ+OatSPpP333GPA2w/hXOV7GsGU
t/tA3s9GxOOtSF4MpUPRmvlFkRN4UNm0z/KxRhvqS2V7KvqWBgkTfGQDDzLc
q/jE1BnEIRHihaMRkZMwpmiNS5bqgorClPcgSEAZf/Fu5WJ1j7KGxNCp51QI
sySGqSf0gnrzQkQVlYCq2A7PCORTwL2spkNm4wBcYY871seKM3d1cvV1+yfA
4JTCue37BkFoX8z0txEiQpfQ+j7eCVAQbDNyRUPAqaq6a16BhAylS8a+6IyD
ylXRoU7FYVg4MDIRZEVCrZt/3XP0GQO9ys1RpHUjIMxn0nLCi4R+Lahm7qke
Be3ij9YJpBHgKJ2XnH5KQtlNA7882pjQ6ux+6OfhFPi27vGnDoViRFq1Ma32
ChMSStdpfi8og09jBjg3nioUz8RduvuFAWZHRw2panVwnWhbX79Qj5zph033
LNGBP9foU4xjG4gq2HYfY913WsV73snspIP9os4GF0Mi8MWcavSfaEOBx5i5
DcdooDOrJ95d1Q5Ltx/3pSjh//Bxcf3FxyWW/RCydCYhiPkl//T1bkgVyzj8
9RALj8d5S1B8qHB7n4PeHWIvGNqkFOQPE1BCt3ek7VcKWDc1iiZxDAA8VdbZ
bk1EB3far7++igJ7uvpopmsG/6lvn0A1RLSJvI9eZzABIhKfmj4sDEJwjNIu
pfUk9HLN79dCb8bhM9XraBx+CG5/PbN/xxESOhAUdraQMgYZz69JbY0ehuyj
Tfl+NiQkwe65924HE77buLlUR72D1HQTN16xQjRWOdzs5skEJzetlNdxJeCo
FnHDI7QCPbhTfSZ5igGGd8Uazw9UQ1y776yGTh1KDWfaOekxwHWPrMTR/mZ4
GX4hYWNWE/p57lTXfDAdDL7tI/mE4EEv0GH/1Lo2NPu2wuQmK9++qK587xSB
BGFHC3FGV3B/6h6r/+LpotYZtP0mTMKrj83nBp52wljB3unfkXjUvvA0wVZy
Et63L6yS7e2GUdlvbkOGBPTYYM0d2m0WTskQ4Q5Z2QdCq0X9ivsJaHjqXGRG
PQXEfXieXPnRDxaC0iLoDBENktYSb4lR4HeV3y398QHgbOxIEc8iImOZA2Ok
exPwdnuVvAkMAv/1S7kHZolojnA6TaVzHCS8qoacnwzBO3nJTfkyJGR/c/rl
oz7mP7wiD918EoB+s/aJo20+2tZkta8/hAm+pkWBcRJFICcfe+Sj0Ve01E0Z
JW9igkuktgPPUiVo7jufa9Fag3rOmZSlPWL5bUrWoSynRojUzejZL92IRKJ5
V9H6WPnrmIrj1u04ID2I9y581YLCHUmSFGU6LHbldBSpEqGhtKvoc0obevYX
f1cHVveIqrR+4KZHAxkGb9E3ZjvkHeAnHFmJR34R1Hr6+0kwsHz/+6xcF2go
PZibYuHElRCqVMU1CXWlTyYVD/Ww4ut8w7IZAZWXj0bN3aCC3vPzK+x39cHG
X86pn3sJSGMwBmm2UmBDv0iRz3Q/zBsNpjw6SkSBtoK/duyjwKv9Do8amgYg
78q2HaOsuL0/umo1T/wEtPTYi+x/OQi/MzhSOnqJyOhDMpvyMBO+CamaH3wT
B3eljnoLTX9CtRb8wr9jWfcU13kln00FEBa0d4efZjnyL3egfdnLhDqNKG5d
2wo4H/nVs+9ZNTL4cZVxLocBixY13j9t6uG8crDQ19Z6ZDhrs0twOwO2rX2o
/JvQCk953t2gH2hGQk2GjRGP6XD88Mpo+w48iIhm3p743vqn7vEfXi9erO7x
/FZixY4UVv49V3XfK5gMc9HyKp2uONSSlLV8QIAGirkZ1ifyOsBLm8PHfD8e
+fLf8pR9NAmUp5yPJPK6YOJ5mU1IHx596GdGdk1RwYht497wFz3wIcjloeN1
AnqUECI9a0kF6eWQRdyJPgj+tnOWm7XOeZIVzDk8BSzNK4w/TPbDqfU7yss1
iCje9nrYIT0KaAfPhzQXDsBT0Ux0jpXHbpUxCqOOMcHxkZng+qpouK1o+sI/
Kxeph3OUrEtnAtv0wssbFnnAua11+XP0F2Q0lXIn7wQTfLhlUrv5v0LcppX6
P5yrUNzbrzJ0MgNGuuTukTNqQeKlFUEprg6F/nzUsOoMAyYqJw55VzeDymet
AyvYm9Ajrc20VbV0qPJT4LTIxIH3vsPcldUtf+oeUVjd4wtW9+gaHHFeNUeD
ArN3nlPnSTD9su2cFa0NNezb3lbsRIOd3zc5RN9oBzbuGbM3RTgkVN1tPDM+
CQFJj93QxU64eEhyNN0GjxZ1UzK9rSbBKfxWtJJ0N0SLUIfOs3DT6f08HYvd
VFCy+lx9tb0H+M4mXbtzi4AqF7WECOep4PmYuNPeoQ9OmT95vJe1zo9VvenX
SBR4Zs3m9c/vLHYBpzbtUSWiPZ3hkXQKE4RlG1bOX4mET48UuveH56CyDNOj
7XlM8LhpGcFBzYXVUpH99oulSNBqWVXHkgnnNFbtvD4MMF12e8jhViXyteF5
XDXHgLBMH44FpRqIihhxmH1ei/hKnRJaHzBgoaPV9/LvRuC6H/YgiNqAmrlp
9ovLdPBUxtmdTmuDnRsk923LbP5T9/ibB8zjiX5KpBodyv3VcpT1iCAc8VpQ
1aUN9TreIZ/5zMrT+K8syeuRYcIy8HSgFg6piz0JPH+IBjaZGwXCdnYAu/N7
/+ZvOLRvxNfO6uskiBXV9AaOdoLG5aDPvs/wSOtH25Vl1n0nf2JdXPvTbmjb
N9t4kZcVBzzI9eH1VJCS1t81KNALTv7fek57EVB4P+Oh5ykqPJRq06oI6IN4
o9gGGmuduZNyqmxpTMgsVltTa/oGemmjex1ispGxQ5UrrZQJDhEbeW+n5sDL
17pDr30/o2/OYO/lwgT51ZPkQ/Qy2Hpyc/a7sAp0tfh50Z31TFglfetX7UQV
CNUIRnS/rUFbVoTERiYw4Krftzizmw3gPRhxbSetHnU/V47aJMcAg+mvpodC
WoGrX2e7T0bTn7pHIFb3qMXqHmsazSgeLnSoFQsR/32WALpNzwRlWfHh151H
YaM/aaCSuG112hESzBnF8na1tqEC8Sh39wAanBySb2rd2A71pUeA3R+H+oSO
qLXz0+AlPnn3zeoOqPK5Nm63A4+uTyW/eRI3CcndozFKl7vgUXhAe0g6HqVu
UOuf2D0JW4uCL57q74bTCttWmYoTkPTNOPly3w54bX/ab+uFSZiJ4EtxvUVG
FzC+r2aM70sc4/u6gdnrMLsUZt8+fEJunq8VTq7UX/Jn0mHlZrdoJec2xPg5
62lS1w667g+7b/+ahMQnY83vRgjItSG1TuFrO2ydeLzZficNNq1LyCpaR0A3
Xvry7V9sh3M8KlOKO2iw/XtobxwRjzwwXpFUjFdkAOMVSR4VyYtVrAL8lNTr
vTuYID10TeR4QDWKw3jA6BgP2JzSvzxgnZh9ArOLYPxgu3Y3UySHKmB12Qin
ihYTDib5X7/PXYVW/wg7KvmyAbgF0nMs3zOgc5fH42nzelTy+nxNI6EJOrsX
5crcWc9543a+4mkDMmzdOP62qQX02SeTill5jVdGwcVbHxrRqG5zWfNaOoSd
8xS+WYkH7hLfGGE1AmrPW+t924ICDwcshU1e9cOmuosdY4NkFLHBeCm2mvXe
K8oP3KFVgay6bE7V3iZkaFpAnD3OigPJxe+CokvhXotB/HBMDdr/Y27tb38m
bDKyE3oRmQ8qbJmqzzdWohMi2ttWpDKB61WuMPvxHPBcHm3a+6YcRXaVGjmx
zkXbSr7QMMgA56r3Hmu9y9D9ijjNbQ1MWDI9JTwenAqKDW0BSbElKOa1QnQL
gQmJ11tDE22SYfwQDz+HYRHiWrZIW/hnDmr7jjtUZiKILQnrbbQpQI1mK9Kc
BljvGcW1cnohHtxP9N9Irs9DZkO9EQUjTNhjGrPnZWEs2LGbCo1e/4TMox5F
7ZhgQvxrrc2ma6LhlZ3KC/kDuahzYC83g8qERf4f355WvwXUqL1Jd0/OH96t
Pox3yxLj3fqC2bv/4uNKMs31qyjEgUtA6TeuEDrEner46P6tDRE2rZHgvjYM
+yV1r7qXjIGmiwk1d4yMMqSyRKY2jkLlppZPGUqjkPzwe7hNLxm9aD4ck8bR
BkeyOvr6WDjgt5DAd0PUikrXSB9qvzcA97wk2dgVKeA3puzbWMzCcc0Ptbua
huGqQ1yBKQuvaI5pu9OvkZHyX/xdwRh/1+7NbGP0XT0Qb3PR5uwQFSZWWkt0
HyciO6w+KYzVJ2ew+mTWx6z1PT1DYHbp9Szp6jh0Go/r32EjIzz57ZPrGY3w
wDS0w+0uA5TIFpLuwY2o5esNC7SnAdY74cLPsOLZBh2ZYHG1BvTEdmD/2EId
7PycW2NTzgCNxt0lOKF6BH/x6fFg58W28vZCgkQtsLd2qwvRGSDK5+dobV6L
ajVSWhcdakBo8Fhb0jIDYtg7dktn1qCVejGB+m3VILtSWvPFWiZMVmzpP8Vf
g97LazTsLabCjbMPln8f74Vf/WTTvU8I6OD0YIHzb1b8Fw5xHXDpgWZCei7+
KAEtRWh9buSehLbYEp+yEz2gzRGuZahBQE8x3qr9f/FWvefkaMq7NgACUpv5
ubZTgGno35V+hIzm70Wf8xDtBQFxypFxbyps5jtcVc/KzzX1Bgf2XuoC6x2n
1v9TJ+aMeRpa20JAK8+fVsT1foJjgmG9Ztk4UEla+0D+PQPtVLrotrOPAMcS
dhNWGDCAECSYUShegADja3LA+JruYHxNvzG7HWZPwuxoG+8qoY2fwHFvznxQ
DhNm5xe+E7+WoTjrdG7SoXqwHffCX09kQPzSEJsxdyPagPlPJeY/Hpj/yBTe
MRFty4F0cveBK9VMOKTgZDfXXoQG92ddsqBVg7r4handiwzYtCHl1rOYWvTx
5L9x9R0WV19gcTXv2Uk5Lc1MEF7aZ3S6lwnrlS995HbJRdKLOG2n90Skr+in
y2Tde3tOkSKqO/JQEsanJI7xKV3E+JTUdvzfPEvxmJ3i1nXw9PVcqLoueGB3
KxNi1u/4Tv6eh1bxVml1CVeAYnFOx01jJuueYqrrrKtE0l1p60SscHB+bZRN
4gY6OPVwtupdJqLsv3hjLmG8MWPUPt4hsRoYFB3w+1bIAIE9J+J71ZqQPHaP
pGPfW4197w23VpFs/y9AOWg7/eUWa93Uc25E9X1FpzG+ly8Y38sPjO+lkqc3
Scq0DFJJajt0fZlQXn5DQ724HA1h+3sD298wbH9N00Z994pWwOJc7b1SWSb4
297avzutBpH/4sEgYDwYKuSyIvkj5aA/nXfjuSkTVviksO1Nq0TL2DqLYuv5
FFtPqcHyZP3EUuj9wnVIL4gJoZ7isZpUQEaJNMKRsEFonj6qczBnHJpk1XWM
mjsQaWFHys5To2AcfvUQ3X4EEmm7xl+UdCB/7Byp/3WOrvzF/7kTu/dVX4Ze
Zl/shZ50qHkjQoUpsWR9uxwSUlv2ohRvI8L2PnbhGxM0qDrquuJEBh7x9C/n
CuX1wUT3lV3DxhQwPeUqeVenA32Q0ggL2omHjkXqDiNWXPLiK2/81JyJ5tjN
1/7eQ0aC+kLeO76zcOpy2Mz73A/IBwlz+qEPYLDlftgNln/aJg9+KMV9QiY8
8gIX97Du8XevBXXv4mGb7S/9RycYiIDxBgxgvAE/Md4AkuW/c0D62BzQSmwO
yPzg9HMd2Sq4rZKR8+IlEy45ah5EGskoe+u/c/0j2Fy/IzbXjyv7v+cgnmJz
EOs+3D2+WSIZ3WsRP5NJZkL6Y3fZRdtC9DX7X/4Ha4z/wRPjf9jyP+YU/lff
8uOx4tlucTrk31l3lOsxHmaWLlYGMPAoMkpBgXmbAgpWY65yef1A3vKSW9WI
jPR5z/bQnMfgjF3eTuWqYejcQg2MaCCjT5rLE3N8I+AZ2e7Xoj0GvRtWdNNv
kFGjbdDgfdUhSK8KrbObHQe8bjLHqjoSio2wpL8pGoCu6lXHd8tSYMtyXUme
IAm5s6fKruboByHLq9HRG6jQYfK7h9+WiFBqovsN9l64vE3UouwrFUpuvVD8
XkFA2yRmFB+c6YZj4icFX55k4TDNxnCz3QSUtHsmw2S4Ez6qjMo7fmHFYb91
SurxeKR6VsGClNwBmwMV69WEabD29pFfNWJ4lHTo6v7doe3wGd4FF9vRQIxH
ZsN8Og6d3k3bNhpDhoWG8PELaTQ4b/nodC4Lp8yrFP7c7cEArs17RPOS68Cj
mf1S2eUWZHC5Hxy20qBy25EmCa920HSbyo6OJSDzZIvvdVUU+JEbK3fbpB+a
lZZdCmxIKHJuRiMhbxyA85PPlttDwJZne/g1Fxmx/dDJMZkahR3vm4aEHo7A
pe1rnH+JkRHfCMnVyHkEhD9ZHf3FPQYa0t9x32dJSHmLjoKr1DAcPXJu6bDm
OJTZJiqvek9CgYvKnlFrh4C8cPj0JcUJMGpb3PDzGAk1nSjf7bxpEDavaZFX
mJuA872r7d1HWDg9d/7FXq0B6DnZ8sXwNQVovsS9H72IyEF2Fa/s6n7wvEy5
SxKlwkGxyCjfrUS0gkG9866oF44G1Zx5E0qFPNG9gp7FBBRyYNvk2uc9IIVK
f/fPUMEiqOSXuRkBeU4uDGqvYp0fgbfPXtlWAKk5dDY4qB5N7do1dMWMDury
4w4RMXgQaHBtZjfFoY8qW/kGn0/C4Y9d8w79ncDVGM9sLWTh4rBNxGUyBRza
n9m12PZDlpTa+8MzRCT/UEzDU28CPqp9HHzRPginn91Uy3xOQpp3V2xXGh6D
UlseJ94nw1Dec97mdjMJCTW8alZ/PwrfuZauHR8cgTvuGaVrSCSkp/TqFWfI
CDz3aitu+jEKgcM93cqfSejgl3NlPeHDwB4+2183OgaRuq1a/MEkNJm3W8ip
cAhOXyrT3502DtX8zaKtp0nI0bFN/wdzEA4+FTP5ZjQBvTnla5/zkVDUw6Mj
ZzQGwWN+zwzfwAR4f7xxJr6JiEzXcPrUvh2A/T3C0WvNKLD6VWC8nD8RnVra
8EH7JBNkDSWNZYzKYG2Gx4CJYg1KlqzeKbmBAVulFU6N97aARsyayM/SrYjr
mJPiigQanBqZD4znIYPM/PmDY8p4pGYpfM5TaRKe6/1sLz7XDU9/ssu5VBNQ
d4U8folEAccbjODzYf3QtKhU515AREXKgdXO4RNQaqRL/vloENRNuAUVtEmo
I5yrfsFlHMxeCs9HMoZgwSRL6VoQCQmrl4wctB0D1YrrwCk6Arqxp62M00mI
fPTA8OLtUZDrMiqVFx2F57seBStkklDSXi237MgRGGJriS9cHAUJSaqydRQJ
SZx7/2QBP8zCV1UvvuWNwQHrU8naniREZ8tQiBAZBi83xzseF8aBN+7qR/Gz
JNRw3S8hlHV+OD6ndCWOj4Nd3y4zTikSIu0XSZn2YOUNwWd41E8Xgdx9j1/j
OZXI6fT3ZcGHDEg4u8tG1bYBkh9nUY6dbUL7dQxajc/QQeuWRRlZiwB868pp
KSNtqOlWkAyZFS/wnJH96hodcIdY4mb0AY+sFSK31NCooCQv5T13vgeCXhuT
F3EE5MGXx6/RQoH3HxQ+SFX2wzWixvv+MCJqq7BQ31Q5AYr3y/oCjQfhgMNb
oXUbSOj4V4+1BY3j4Nsmd1AscAjuJLFBkykrPrzmrTwzPgakTyO8ihHDYH2/
0/esHwkJzvZGpAiMwfushBUbvUag1rmp71IECZVk2rseOD0Kq2bkRNAx1l+m
fGt6OMsPnds0w2NHYF/8sWON30dB8qHSZ9EAElotORd4bnEYdplHCJRFjMHh
2Sm2va4kNLWR28Y/nAnbCPNb2CvzwO9sS86+iq+IHdNtCcB0Ww5hui1HNxqr
n2lkwJei2+W8W2vBWz9fMIKr4Y+eyxdMz8UE03MJG4kTwbfQgT3h6vh2URxw
vDi6++Tz1j86LycwnZcATOdl34tMx/QKGphY0Y5dbiHBZ4f67yWpuD/6L6cw
/RcHTP8l6JXQjb1Fk3CylINWBp1g0726r2sOjwoxXZgwTBeGA9OFcUx5se95
IRV+8Sls8tvUC5Jb+OcZvYQ/ejGrsN+tPmG/W9Uc9N2gx4rntsKt5/Km+mHn
B5mHB72Jf3RkejEdGRymI1Ox/vLeuP4J2O/59DBDeRCkpvXl6uhElIjpy1T+
pS8j7j4Q+GHNBAxf7y6X1xkChWXB8CNqpD+6MwqY7swrTHcmuzoua+DwOPgY
jKw5rjIMvM1J/kdZ9wsPpkcz9ZcezazwqRvuT8ZAmIPJ8Y1jBAo3uA7kev1X
p+YFplPjgenUJC8Nt3h1svBszjHIKh+BpJBM2RCW/1zC9GtK/tKv4cgsbl2t
NgqcZmtCpG1HoeDITHO4/391bZ5jujbNmK6N1fJS7MtCJrgd/H1uaHM2fBOQ
vOdMKUMyvr9uO0gzockGnzfztgKIjGW2z89rUN6Mf3/YDQaMW+zWilFvgiNz
Y7t3sDehdKdvd2iRdPihZExxMcDD1YG0ztULrcj2lMjBqBoafDNT51QeJ8HD
M2MTv5xxKF9cvoYyOwmns9mbFbg6QcbgIz/JD4/k3op9e75rEjZaGSo+reyG
5/j4tBYTAurQJt+/fI0KRCNLdnfZPvA+thZ8ZgnIrsvVRjKDAuJE7iWznQPw
007uyDF7Ihq56Zi/5ccEJLxJ78/YPAiyNngN7ioiMshefXP7mQm4mu1oFT01
CNfWCLpf5GDtl9HWS/RP4xCqPUCp/zQExhUhtlJ7SUggoOfxtm3jsILt9QoF
62GIlFS8q8aKe7Erj569XsGEW9GnDKqZGTAR2xzxseEzklfs0L6hywR+zbJh
9Z/lEDXR8+6tcjUKMw94/DiWAcVtHD/VORrgdYeNNjGsAUnR1E6/GqGDXL+J
3+qlNoi6Xtw09bwFbSTn+nhL0qH+kXVptBMRrl3yt1KoaUMzJKs7m21osNnq
TjrnrXYwGDrHk05h5UU5hvWzHybBcR8z7oVIF0zetH41U49HUb4eUwuzVIjY
QFC+fKcHTmzGn317h4A2Ul4Z8OpRITb0wc3EF32QxZ2afP4XAX332C4aGU+B
Y8bmu7YcGIDWrC0P8q8R0Yubxw9lrKRA2xfPkt98g4BPOaPJXUhEa+OJhjtv
TICwv87P4+RBcA7uXZRk4XHZSfS1vnMcxt40HM0IGAJcyiZSiTgJvV9e4Jxo
YEJOPK39x+E0yG48/4FtsRjtfZRxTNmcCdSbF8yrjgDQLmu+ucJWhewJb1UU
6hhwNJD7+iupOuA31lyRd7IeXZHjjtcWYwDHbbMArU+t0Mp4vVLgeDMy8+2/
ccSVDm2iom6DuwjgM6BBtZNtQxtv5QaFfaWB85uuyVgBMkxfbvtBPI9Dqksd
Y0kCNMgMmJ+kfeiAujgpS+IRPOLaGi19zmES8sTXbTRY6ALO8dAivl94tM5u
k2FCPRWoK2sgY3UvVN28GlQUSkBnR1e5r5KnAiN9WwdtuA/iTlsXz3ASUWfn
e6uMCAqs3xAqEK8/AEPwyrT/KhGZp55JfM1JAffDG67X8wyCwiudlTszicjp
nuiqVM8JEBh96TZePggiLRrMK2NE5CL07Vgujgl90fsuK65KhbsxjQKaV4rQ
cN2bSDsXJhTXKmhyLpbCsDiNKDxfgRpHVDuVqCx/45yWuxNUA3U2G7/Jy9Yh
YW2rChtjBoytURtcKm+GWZu2pOYdTShHZ9/e2Ww6jF5TTtNejweFShfj4n2t
6DHNbqaLlw7JuMGq+AEisN3LzlxoZflhgNeBq040SOL/ojZ2pR2Q/lwNowqH
OO8njlvgJiHNK1VYO7ETCF2vyBJP8cigYnkLYf8k9OMKlpJTuyE5Kjj9kDQB
5T+Iz9ZNpkLllL6ZhFcvrK9L27nlPQFl688mLWyiwoF8TV6DXf1wO07W8SUv
EVW9OVf9I5gCz1V/n6s+PwBUjtnPileIaMsbw6Bj3BTwbLbSyeEehKoBx7Ue
yaz4LLb4QK2dCYUlUma521JgdeD8SsZyASv/XGrd85AJHwWeGJ7+XQJbn7cH
v1xdgUrv+ChbcTIh1lneRHtXNYwEbhCa3FGLlh+XPHe8x4AoA1qBBW8T2INd
psCWRrTGeZ39gzE6mGVb1MptxoGxi074HYUWpKnWFKZqRIfy+dmRd20EkA9y
Xn/buA0Rv39oKyyhgeKG21KuWmR4vfYW8+hJHLp3iNO9TpoGa/z2vcpx7YCV
ktaulkJ4NFyblGD3ZhJ24xpVHjt2Ae2jZdJ3wCOBDMNFaZ5JQF1vDpw52AM7
SoVEo44REBukPzL2p0KKxXiH3GAvGJ5srfpWxLJ7RAZxrGLhNyubPF7rflDw
vZFwWZCIvksGrND3pwBbhovXBusBSJlktutbEdE3f93b1d1MyLXDN1l7JkHY
sITsuYp8FPXZ19I4mAnPLHVljPSLId/9wU6q0ld0kV/BY50o6/97o9wSvlXC
ryIl1/B9NajC4AB9WwwD+Ps40Y+QBhi+I77NfUcDQmkcD9kFGNCVYW6dc7AN
Hq/UWhWl0YwWn5w7yR9Ah7OHTtyt7MMDb+yHNtnCVhQeOKt3/CcN1Jx6H3Rr
kMC+VHQgtqcN2St6dpi50aDFgJisYtkO6ScHNH9k4VB4SXC+3uQk8C7dmtAw
7gQ5TV8pTzM8etdX1hFtOwnnlX+HtG/qBi7zHw7WNDwiF1AzMsepcFakfkdi
QQ8oFpDaFK0JaCIsR+OdPRUEC97ePqTaB3h3nrMidQTEneziEDRDgb3b7QgB
Ef2w9rQ70UOYiAZ2niCH9TPhNBhf/rrxHThGLXm/T81D7w+5Mq++YUL/GWJj
dH0h7DW5lKHnWo6syvOuyygzwWfH/oWkgQpwLD2Z9O5yNXKQC/SoKmFA+cNr
64c06kFWwQhWHalHek77KrcfZEDMkzV92lMtoMv2sYFh2oTkFDZVHS+iQ2en
qZEeJx7O+Ns1qne3oD0B7rliqnSojNTT8DtDBM5sPfTarQ3tfXx+QfcTDdw9
fMgm18kQ/eaOLUUfh/bfVdyco8KyX/54OupUBxyyyyWtWWbFyTeb0mcKJqF2
PvY6rOuCYf3oez9f4pHG7I0rVzQnQbNY9gN7SjfMF7tI8PERkHxC8ufdtVQI
mCnRKt3eC0pE2pEr9wnoCY/5fM5ZKiCFpPPBnn1wv2jhzHoS634fZI/ZYEUF
ivmnUn7nbpitx5+ED+2ojPd9Hc/vYdDlSj4ZVjkKi6/MJNMDOli4T+Zdkd4A
7N5Vm9m0jQImhprG1u/IaP3ZKz97/bthLHbysPkPKlgWdfZPJhER/8HYD/qX
O0Aj4ZG3xe9JiM3sYbsnRUC/sD5hUaxP+AXWJzyY6IWEp/AQYjNt7HGfDpeu
7NwhKNmGvA0/DmsRcCwc1f5LGejguill+vh4C3K3s3wSNtEGbKomWc6zdGiW
cS01KmlG/qWxHmI72uD+TtThuJ0Bl7dv2AT5Teh4DB+ONNcCcTqh1AptBrSp
j9mp4RuRb1/IhVxCMxD2OiQetWTAhs+5d8vWNKLNmdN1Dz5QYUAk0WtgoBtm
1AYfGbNwNC5S1cbr2jgstOmtkgkbArHK30Kr6GQkF+MvJkMYgRxy5nMDj1Hw
5OY7+wTIKCKu6MJwyxDkxu2yLbAZh6EZuytysmQkivUhy2F9yNNYH3LRZtw7
n+hu0PeOeMO7dxJUuR7ppJ4hoKYA09VrxLqggSxQqp3GytOHTpqfrcSjp+4S
xIOdHZCmdG9umJsGqSeq8pMR63w1/65xLmuHTieBnP2mNGBKc7+1rMWhaxHV
ytFVZDgvPu6yEEsD8cKrn45dxKEy43Vvp8upsHn7xsx4lR54189989okEY1J
4A41+06AibOkzFXrQci6nP51zxwJ1Qk/SNF4OwZpFt3+9C8s/KpweL5MjYwW
/+r7/Yb1/Sasqd3z+MkAZBOn4y9ZUmD/C9X63HQiEhHc4ajq2w/6P0vHTKYp
MN/jN7Ral3Vfe8sKBu/sg6tTk9IWrHhQHpPmZjdIQJabS0oeMXpgt2LCaxMC
Fdb0d72o8iEgXhejM3VfqWC9fVfZg2c90P2r8OF9JyJqPChh/G4TBYKtEhwl
vg5AzHqf0hPnSSj/r77ZTVjf7PBBdj2nU0Nw8gQvf82KCfB/XWxXtJ+ELM2/
JeSFDkLiW21CYtQEvBkWjTRj5V1p/VJNL8cGIFblN+8acQo4FZVdSmHlFY/U
9oS4snCWb/MxH8GBHnhvT/Y/I8+yY32kBX/1kVaa7zzyNWgYYPAQoW9mDGgq
k1FSbiQUmnjq91D3EPxIU7LFhYxD75awBi69/90neZdpUW59awQ2BX/5WSA+
BjgO3Rl/Fo7+D571wPCs2l86pAUYbjX+S4dUB8Onfhg+NcFw6Mm/dEiL/tIh
XYXhTU8MJ3b/hRP/f+mN/q++x90YXgv+C6/9XPyQFlfNhJUPxAQ2TqVBro0Y
84HFZ6Qi/mbtR8SEEH80uX33V/h6de0JpbBqdEjkwg+RJwxoMfPd0zvdALgP
P9cInW1EgjnksWTWfbGmvH/NiS844JvMdFl5vxVJOvnu5BqhwZmvF/SsnUgQ
9Ej++OEjOHTX4MMdvodUkDYv4oru7mXhekpl6xABjW6i8lxj4fHzYiM/UtkG
YKPD6+5Ll4locqus7Dc+CvT5/1xkLA7Aw/Yf+C8lRKTxbqEj3m4C9PMHjfeT
BmGYNp/U/YuIFGmOe2TrxmG/MIfc4aghqMvtZ7QrsPywnegjqzgO0Ux/6a2G
w3Bc4tmDeGMSMq/O14x2ZIKm4bEezdpSiH0WdJTrdCXilH0z5tXKgK1nt+07
nlwLLq35A7YH6tHlyzk2hVsYQJwRrX081ArcF3cQHr1sRqFaXi+nLtCBI3q3
zsmnBDDns1uVZNeGEvUCnmjfooL5OcbJwtV9sNQ51nKsn4B8KelLIY0UuFYf
zzGx0A9lWvzbJE4R0Y59Os9cZCmQsoprfmv3ACgTVL+asPJPZyVV/+YXE2Bo
9PVbddIgWCywswmPE1HMq8tjzr/GYZHXLaHFdAhKTwhYOWwhIT0bv8SF1UxY
8noWeoRUBRvKokNpJ2vRIHn98D0bBvy8wKlVU9MEkqsz3nU2NaIrJyJsOwrp
8PL65fU5QzgYrQ5pd9nbihZ/Vi65X2fhkUAXi8o9fbDa6sDNF70EFMvZ/8yp
jQIxR+8fDGH2w1vbG2t8jhDR6eNWZYWaFLAVnej1qRwA+8odXqtfsXDHToVE
DVbcdD0fhdv/YBCmV/A8lSEQkdcXySR4xwD/HYkmwRsaYNQ5O/SGdANSfX22
8BsHA+ZWa1qrObfBvquJr0Y+NqOL767FRltQ4VkELsLLuA8GxL58WcN6H4tt
QkGfCBRIdPh5/iO1H7qGslf5qhPR3O1nteInWe8zmigfmj0AHb9eBvf7EVHk
l5Bkdj0GbHkYthVv0AJe739k3NFuQsOPZMRiTVj7FSjN/tSlD2xKJHtOsJ6f
Nv/gaTuJAnM39XlUJ/rB/Mhnq/sqRPT+yk+CjSEVVh5/GmYX1AfldzteCfQR
0GWsj+UC1seyFetjMUvWPa5bS4LMZsHoexU0wNWauhXl4pCD6jbgEiJCDNt4
WpEKHd5Ur6lLZ8Wfkq4nGY+r8FBwWOsa5Qkr/7I4djVpoRWpYH0mBlifiSPW
ZxIsz7Vyzo4Ga+PjzxkVk6BZ57qj/zABaakGRY6l/hMPc7hFBjKg+/V38UKZ
r3906J5gOnSvMR26/9g/YvZ4zN5ttXNdL4kJJ1LnLU1N4uDKvMyUQVERKrlw
9y4phQnr+vKuXQjKBmNie7XJZDliw3RbYP5f3ZYDmG7L62LycPg0Ey7rn7Y+
+fYp/DR0aHHPzERZmN6cEqY3J4zpzf1Hh+4VZlfH7IHKvgEFs6z3OTEYIpT5
GIbNd12LNU9Duw/PC6+fZELSw2ChTQdeg/G50fOdF3LQ5s0nIlU4KDC8ELjb
ObIfnrWcbhu51IEWZ9ZTvNTo0P2sQ1FIGgcVbGWXBLMIiF+KTXj7/mHYPR3O
K/tyDN6ed/L8saUD2dIefewoGAUcz82clO/D0NkvoShQ24H00+X3KLOeG0nm
2ybPwkPHJd4IFbDyIhVVWvioSje85N8lFS48CRtPPysou87K80ku7IFSHUCS
X3l7fCMNXuU5WT5ZYvkJ1jdyDesb0cD6RnTMkjQ9KSQInfLIvF5IA17Hpgqd
NhxaUuVZ7GUbgvRXNg93Ck/A7dGzvnbVrPivUT1voEIESeZpcsNuOjwzeq2i
3d2G6APdXsc68dCq7ar724cO1ZuNBrnWt6FXx3ZbrfqKg4ZXbpq7quiw6Yh6
aWVVC+rTef9Ov7MNDGU3/LBZpMOSYJXqpphm1PA8Ke36pjYwXX/k0FsJBtSa
Vc1wxjShS7mqLywGWsDI4/3FC7oMkHhEtNlQ1oj2rHty5tLXZojzYt6/cYUB
swO/L9xaaECH2Pa45nAwoenzreZoo3KYvrazhovYgOZXkN/Lu7Nwd3Hcve1j
edDp9p37MrXqj39GYv4Zg/lnAZ+KnM4XJkSIiTcfqHoP7y3M8b1bv6DZ3v6D
0c1MWF0Z8n6dxTvIExfl2pBcgp6Q+X52s3C9/1zBE5/D8dCf/SIgcrEQ2WO6
b7sw3TcFTPfN7cLHk2YjrHOhU7QUb/MGatlDH18QzkO1IcHhNhMsf5tXZwjG
hINvdqvdive5SCrnLU8oyw/zAyQ09lwKg9bcU6fWXs/54+fmmD/LYf68zEgG
mSkm0Ox2GnX0hYAqupsErVlIo+s8dy/rvHSRdX+UqgeDTsFCiKBsJhqu4Ekz
mGGCSJsq3nE2EM4EcDquz01H1j3CKrNXqCDPQzeXO90Hco3unvsaCOj+5lOT
woaDwPlk8HXIyQnwwNNx4ZLtKHjCwcVQoRfWFUioHHegwnG2uOJxREJdY7oX
8oM6QfDznY8DSZOw83We+91UAvqyim77dIYM6g1nvtc50KAwMEIBb45HJ6bS
I0bO06D87ba4cSIRQkM4vHz3kBBZc6u95Q8mrMXlXnDLDIKHkVq2rjpxaK7u
qqPtGwZkiJjwhuyvhnuBxTrn6S0o6+w+vgTWOqQunBiy7n4I15Kn+/I2fETp
BLbz+34zIfTly/CHfjYwN7P1Gn3o2R8dq7nT/+pYKWM6Vv+x+2P6VhcwO8Up
Y/U91nMuu51x+Ug3BVdh3tUGQ/4os3nm2whrfxu2K2tpd4WD6hPVwu/8eX/8
Yb71X3/YhvlD5GVbNfMlJkz+5FHrtjdBFZrU7ubviahEiRIhTmflUSf4lqWZ
IRCc3XHkzlg2YsfioT6mY/Xgzb/xsGsl38PMf94nI5Rkc8kITN4RowfXPUKv
1vqTN/5kQmM8z+J9x8tw7W1Ucn5SHLqG6UypYDpT/JjOlA1mV9j1rz0Ns9/T
I8S+ZT1n7WWj7WoHLoLFypGcn7di0NeHAnqF86znHGUT2hLjA2/v576EhfeI
W3Dq3OAxJsisvVHX1VAE3sH7LxwdrkVwwy3kKI4J9Y9auezvxYC4ZgHXruMl
f/SGjDC9odWY3pCk89Os2TEmeG97yHwi/wJif3oFkCM+/dkXaWxfjmH7YuYJ
oS5MJmhpClUx7vhB+vFTvtNrs//oBBlhOkGpmE7QjY6stl6W/xt13+Q/e8Eb
lmpvjhm+Sv9z70xi68yH3Tt7SJH9z1jf61Bubeio5QF73PyLttim/tH3mcX0
fSwwfR+fzF9qZxaZ4LJej3vA9ybceClmPcaR8medo7H1D8bW+fPjFp5wlv1z
Z4MAm4wLZJ3JXbq+Kwkt789aH3pjAgye18k5pgyAldNt7YRnHejBdwWTPTAG
Y9sSTPSKWfmb5n3OxaUORMT6c85i/TnvsP4cGZm06HbmEGSO4HGuxDEweeFn
vXlVBxLaoSKyOD4I1/2rvsOXceC4t+PN1vh2xDwsILF+6yCwuQo5XXOfgOED
9FE1/nZ04FdSldvJfiCHC4cdiacATyQ1QGU7GZVkZFegPibSU1zffV+1EBkU
HRQqHrdAnZiuhDqmK8GJ6Ur8R8fBA9NxEMB0HGSLDgqQWfuS3zW70v6UO3jL
tjTpl6f/4WtdgfG1tpX9y9eazVYh/g9/5lZKDadsvBg8CivkQdcsEDfGnzlo
8y9/ps/vf/kzRZU3+lWx7Jn5b9//tldDUl0Rw/fbvP7wyv6Q+pdX9kvJv7yy
/+G3/ITxW86s+Jff0tt8S826ZSbEcC66nXh0CjabrV8QcI9C+58jmX942kW7
5T7tbrNBkZtwpaONlmi3zHDPPdb3bnv09OL1j9aowcdF3H08Bg3cC2X/h7d8
i47LL5EKVbgXFUx84noNeXVPqSf9wysbsZY3WV0Llk52rPM2ikGmN95RJoeZ
iF3xppyjfD7axG8/evGwxP8z36O82I0Vv1uZyC7FvsIk4zOqLYtv4P2lgj7h
1qp/Yz2/VqBee93ufNQoHyX+0m7H//PzLShzhQ/4yJBZpzz1MI0G/K026vRp
HOI0zOxl7h2EKHx6XkT5BHQdJIw89yChLWQZ3k23+2HIepxLY4QCpVtmBA7F
EJGVO2p8Z8CEU2f1xvdQS6Di6efPAxtr0ZhW36sNSyPQ9mnFbZLnKLTYfVon
vo2M7ppNxoy9HYYH61zqt+LG4FmWHEcyiYTCjAL1uxyGIIkZot7ZPQ5pu4b3
rGHhWaeh6Z3yZgxgu7/rev1yA6w5VGhKFWtBIuddYjnfjMOjtQHbsrKGQG9+
6EpbOQktX/qqNaMzBkFxwZfjVEeA8lgV93qAhDylNUa5hEZhb/s3Cx7XUbg6
7v3hOZGELC1r9qmvHwGzPN2hxptjsGC821shi4QuoZtHlWYYcFb58NZcxSq4
IFb5y92rHq09Kli1L5IOxr03+NpZ+dTQ7/zgqTdtSEEstPHLFQqo9qt++m4/
AFv91j/cv0BEHPYdR+xlJ4C46/gPUe4h4PlCkBph4frUC2tvm/KOw4qsuRgr
y2HQjcz5fCWBhJiWntVp68ZgX4LHSoLXCMy8yCrhySOhlIIAfJfEKCvOPOw/
zXr/vlGZ46aZJCQfB7XfWetvYOHzTb/pCwQXC6YWNlajoqklk8DDDNCi+/Hq
HWiGi6ZxzK+FzejOXF+tGy8dHr0lZv50IgKXQBNlmxkOre1qe+zzgQqK3y1f
acr1grdpcbLNGiLStfJtNH9OAd6tTOW0gwOwv/vCHctiIkr7sqgk+GQC/Ogr
Y/NiB8E6o1OSJENCfsqHCclh40An93DVNw2Bq5rCqWv2JDSqrvFF8BMrHsZI
flVvG4YUiw+qe5+z8PszIbZVI6OgChHwPXsE3CL3B2tFsr5rH2+C2GMm5J4z
tRN4Xwi3Y67L7KmoQBsdnQ815zDgzlkTCRObOpApzNI5VtKA1sh+TW3MYeX5
vxweZqXjoHlAPTaAow11qdMZOUk0SLytOA5HyWBh4z0jTsIhNS4v12+RVND1
PS4i49wLldG3Po3NEtB82emnP1MpsH/X3h940QEwnjOUzQ4hIse0MoPq6gkQ
WPl4R9jZQTjN8Dp+7TsRqfOb5OhOj8P7MwsHmq2GIGfX0shBVn5lJeksT5Ud
h0sOOX0BJ4fBN9TvjvsNEloht25Nr+sYbFL73H922wj8fp6h9w+/32ryGO8F
Pho4qXygK8Z3AKM/IV/CBv9nHpOKzWMmYPOYWc5H9ju9oUHj4/9T15lHQ/X/
fzxtorK0IKlEtIhKJSXeIaREFMkSEUq2NqksoYSI0qYFCZV9S0m87GUss9sZ
xmD20SJby2++59z6nON3+vf+MzP33rnn+Xq+no/n9TwYlt0KPcMPc46+IKIC
UeOea10cECtdeq7OuwP2Hdh/8O49ElKNWGB3cFCoo/LJ4RqHn4Bp9iRVOqgI
rcQ4xCCMQ1TDOMQ7J1a1+ory4NXCGsvIUQo4lLOMVVgEFG3/UbHElgvBtoO1
XtltsCcoOYPJIyI/UWV1qVwOlK5kHJtc2gnsNfY/+t+TUNhFqSU9rwVA3nvH
32hLMXB6pKKXisFfLq8a4/KOYFzexe7aSx9deXCmXLx78VkyrGvypd3YQUAN
w/kzmqu4kNAUFWKs0AoHoz6VJZgRUf3odt0wJa7weZFurx7cDmfozwpN1pPQ
OOv1GpObHNA8qwu8551w5F2fSEAnCc2Osx+glAug/Vznc7GmfEi73m+xA1eG
xKvERcttBVDxMIP2zKQSSoOL9Ud5NSgF49r6MK5tNca13b6Xss5feL9pr7zw
uFuGBOWaW2nHVuBRdZmMP1OeB2osHdvGNxToinPZc7aAgGZPXKBxb3ChJbfj
lIhkG9j0KBiFPCEiafauu6NfOeBh7enA29gBFk/aNB8eIyG5FtkgshsHUnI3
yC6R6wJq6VmH799ISGruzF5z4byzcp3hhFxOFnhveGth2PYOvd1L7P91UQAS
bqFnZuA/wIxLCrhE32pks17eOUBEAGNylTv4MXXw6dqc/K1b/uPIvmIc2VyM
IzsqXvH98lce+J1f7LWpjwABa/DnPnU3o+iM1Yc2evBA98mdhqpzZJjVJxtN
UCAg0QC7xsguLuhMSPVWVVMhgXpN7sAiIsrMeXpc0ooLJro45VmdbaDmdtYq
pIuIzlpsZz9r5EDQBEw9quyAgZf2+imhJBTpURhXtI8DBvP23pQN6oKkHJMF
YfPJqHFbXvPxDgFkz2MNm13KgB5q1Y/DKiWo3Jb27lesUCektFRYXCoFbx51
N3NBFdp219N6k4oAfu508XVMrwG70RWQ21mHDj64E+KRzYfGw1c0GnkNcFva
Lss1owF1/4PzavKX/zLjNQ/6ZmYNipqTgJfXTnUQXt+p+fLWrSo8wJM4P9Pu
UeDLBhPV2bcJ6ENl0M/VwufMY8eqPbVprXDKKzqrw5mIwp8rJjSu4YLBbUPm
soh2KPXLPXFMioRaUnY+sn/FAfz1/QcEep2g4zO0y+oFCTXOKxxX3MQBPz8D
xilKFzwVDTflryQjJ+PGCDa/E1ar3io/qMUBo/QuqUotCjIuXSS7PZ8I0jYD
7JJPPBhreHudm9aCDm1uHmDjCNCul5m47AcP8k6Ex5SFNiPq8/uWTuIEsFUx
kLivwof0eRaj5Tea/vJEMhhPFIbxROc8vtV0CI8/mz/aTK0ugMkeft03x8q/
XA8T43peYVyPm0LilRPC58wXEqvxprRw7t7j1VP5sxA57PtBqecx4fvsRVvn
J/fBvAmPsIrLrch5X9hhS8khMLw4GbZoEwP4PdWLlZpbkQ6WP+/E8uefsfx5
EDbnzsbm3CvYnHtns3/Bx4BOyKNnJLHsOXDgepvKTVEK+v2P/d39UzT8w9Vk
kMyxtST48uDN7k1OH/QIaKWSSPpzZRLkdi2XXZbDg9E42nplAzyKVd4bE2ZG
hNqytmeNvTxYrKJ8nLKpBV1kvnbl3iVAjPse2/nz+HBYdNv2N7rNyNUg2mWI
gQf5RXa91zfwYQi3XJ7s0YQm9ERLyKs50PlBueaNUycsWVszEXaMihIJq860
ajBhd7vSr5tP+0FVwio/920r8k+cd2GoahD8PD3rmWHCeaEsSPVMYytahe3j
1Kbt48JULvt7tneBFjK18hV+zkShvrizOxk9Le5c4BnRCc6Ujj7OLQ4sUE3X
XjFEQp2uIRsnHDsg8G7Wok2DHIh6pSDG9yWhkHwvm/Gj7VCS8OjEt81cmDq7
GE+fSUJ5+4+41vu0CXXV6YAfZ7lgfMsudWkSEeXWsvD64hy4OJyn3mTcBZ1U
VeKsbAq6LBMfmSjKgiUkz1qbkj5g3Qm9ja+gotarN8kaRsMw07p7Bn6SDho5
oYtchPow19kvhACDcGjzh6nIIgZYBCYsllr9//d0X7E9XZerMV4rrQ/KDk+J
ah1ggeTzyardbymo8cbv4Kz/cbmm0qS8ZhbkxlkF7nOgoMiI13WT2b0QKtci
XaXLhlP670oaZ1GQE7fDfUt8DyivtbnFSWKDRoZormsuGUWJasVkf2eDtOvn
9DX0Lsh2dj81y4CC9pSfiVkfwAJvD2e+h1AX1cbr/PZQpaLOMdpjIwUmlJqH
5vcupEOvtncA4QkVlfxjfzfn+3j3zdN0sL5p72PGGYagNrV0Z6F+uLpZo5Nf
2Q8X1hVeDhLOd/mnZhvKzaKix7TenXzVfjBTCqv0G2HCHPGzV0drKahWe4he
28eGnze7hswdu+Hl1fh5G+cLddpvb52Z+SzQk/M6uXBGHwyRxg6davr3Xq9l
w6jPzrQBOH9cOvpnr1CvJZ8vSbxIRUoO3+2lRQeAMeZ6csaZYWj/9tiRYkFF
80sb5Owa2fDxcLDX4epu+La1bEsbj4xeT9v33cL2fWWJN4qvRzHAb72ZALdw
CHYYOL3uiqD+7X01x3pf06f1vo5gva+rpvW+8rHeV32s93UF1vu6Eut9fYb1
vkr/o/fVAet3TcL6XX9M63eNxPpdTab1u+Zi/a5MrN/1O9bvenJav2s01u/6
+R/9rgpYv2sg1u/6G9v36U/b913Bel8Vp/W+Rlm2H7x6SgACciSpXqUcwufv
95YtqkGKb9mpaUQ+KMmOBeNdPoJD0wjF+WADshiUWh+qxIdSmXU9m+zxkBpU
/a4kvBkddXyqtf00Dy6ox6eGaJKhk5i0JM6OgObv2N3ZnsOFNY+DGWkHWsF+
oj3wTQIRpYVdAcEjNpykODlWxfVAL1XbzwxPRi9Cr/dFfWXBRd2c5wXBNLjE
VlBr2ENB4h9cBF1HWLAoNn5/S1IfFB4ut3FMpCCpdZXyvz8wQY2rYeAi/H9/
LzAlEXooaGVlyIp+NSak7TD0LllNBwl6oBlDmoquLzrKP/J8GLp0tBVn4+ig
SpeajNemorul3r1xwQJIDrRKGnV/D49brVM3e1WjHztHcWiSDxNjjQW6vnVw
/Z7MiDvjI8qPX+B34bjwuUyQfBL2vQnkRUZIsLQJxf0+Mzr4lgezVDSMYqlE
yMgbu/faEo+iTp+rmCecmyS8VB3owvtqxlTVg1gOAe0m03mK0cLzsD/A+2Jd
D+BGVK8eaiEjy7Lca3tHWcCcud+i5RoNqMHJucnbKCjCUWx4tjsL2o5+G/GK
7gO/gX477wgKil94K9Szmwn6SYvnaxj2A4P2NPD4Rwp6Z69T6GLLBNGd2j/y
uP3gZb5J336Sgo5LbpGIkxcAfcq/kN9YA0fXR7taZNSj70Umz/Nu8yFu2XHb
OD4O9ryTeJ3ZgkNT4WfmNIzxwNtndSVkEmCt/XsULNmCGKd/H65y4MHSwaw5
uhFkSLx/r4x9iICMWvo7RwPZMOLllyv+rQdqHdo8Hwp/18LJiDSc8Hd5zgwt
H7pOgyiK5e4oNQqqFJzrczjPgh8vombevtIHVNaxFLtLFBRyK9k/e5QJZknd
DPU1/dBz8GkTrZiCWl4ZvlIt4cMLxYJx1c0NUOdr8BZeNaCwiuxLAUI9pm3T
dufaITwE/+a3PWQ3oTZc7JxVSTwwp7lN/fQggdKrkG/7buAR0tK+tOksG0xV
pJKpCr1g4HYhO0t4H5qs3isTLvyevjsTwrZF02CuXIxI7hoKGnwUo0kPEs7p
V+fOnu/TB0qrw9K2nqEga57ijAhbPtwotk+YHdsMDkcXrLKhNaLw2C8r5ak8
kGsNKY/3IsJCm8mABSEtyG/PNdxjdza475rxq31PL3gqt59HRDJKP+RGLPrG
Ai/xzJua8TRoI2cN+K+iIHt44dM/iw9PzFKzZ94mwGbdeBopphnpe1o1LnRk
Q1Zc19pe517w6L3ivopMRkXse+MBujQoFvff4jzJggc5Nh1WYRS0COOM5Kdx
RkPk4ye1hHPm2tHrN1yXDQN9RCeFWEJFHUXiU8lmdFj74sjYmvFhYK30YWqe
pqI3kmKTPsLngFjBkyRaQjMEhhK2iB8Unk+MxymbxuP0+TYQl+MHgaf9oA9K
GDB/Vh3Xrp2KCkVkRM5RGHBvZs8pXMkguK33ouz7REUfn+YHLP88APOGNheF
xA9B4AudR6szqKi8W1fP9zkfMvOvfGYEfYKdik+GSLhGNMVMLp3hxYNNaX4d
m1NIkHq+220xj4BKMc6lDONcdmKci4Purur8B8L5+kx7mVsVHa5yMq/13qAi
/vClS9WZQzC+NLqwjDQA5XfsGidfUtHDmCcmdMIgWOsPckWAAcUn3+xqEOrJ
1nrJ7b2igxDw5FFraswgFFmd8J+ZSf2rh8UwPRyE6eFizfXbwkf44BS9JdaQ
Xwsfau64tso1IIZodKHGuHBeWJaVsmgjAR41zjCyWYZHxZ5ylVeZXAhPXV4z
dzEVGFoTnmr3iegyxqGkT+NQKgznSNUMMmH/L5Mj9cr9MFAZwzaaKTzPfV+4
y+YzAb5GbrfbTQeQeWOReoCK1lPPyhjrDcPcAoWWVZoDEJHBFZe5LDye3Pa4
JXgIgsNTiS/EGaC1L97W+w4VsfTMmyYaB+E+3VbDG8cAMfWOrvJEKnpaJrZh
4L0Antga+SYtz4H8POlNZqRy9EtvxuMK4TwVPO+nE/lANUxFzR3p+lKPElzj
i7WF/5efmrJThmlNsOALfeQkuQkZiSaLtp3lwaTbctmf3SQgrjinUBtCQIVe
OZc/XOeC6SEn9R0fW2Esp2pp1G8i8sX4jqlpfAdHs6WeNsCCupNBSZsf0ODc
ngv+27woKOn1kJOlPAtSVF23kRl9oOvjMN5NpqCtW9SVj9kzYXtKaoZRbz+o
U9J42SuoyFlTXUKQMQxXar6e3/2BDsFu7jX7DlHRlI1IevWPIbhoOIeRGybU
NZHjUZV+VOT60KTG3mEIrPWUWoa2MeDRXMOqsTChfsN4hEPTeIQ/eXsZLG+/
H8vb//L3MaRVc2CDrUzKwboOiPM4R7XPI/3tfbqO+S3qmN/yJ3/ujeXPR7D8
OVt5PztRjQvDjxOCXlu3gyJ6ZeW4loRci5XMHR9xwF4266PpiU4Ya5YM9yKS
EMMgqmjiqQBi8QUnVp4sgdqFo6Zw4r8eJBzmt9hifsuf/PYLLL8tguW3K0UT
YpPCucDyjzh0W7oNUo7INCx5SURO1UkjRyeF8+mZ5G33pTog9GzqscvHSKjw
aEAk8zwH7GJkIzoGOgFWUycoPBI6zuhX/vRSAG91FB386cUgcV7xZ8lyQPZ6
NxUyTQXgsvsx7phBFcwVVF8+kFD7128ZxvyWNZjf8icvXTEtL12u9ibcp4UL
kamTCf2fqVDbNifZTYOIJBTc1s4y50I5zbjInNEGU4KOWtdhIjLgW6m34Dng
n5Pa/yinAwJUuoy7wkgolEcxPXaEAz0DYyIPrLrgWLIVpXcO+e+cm4rNufex
Odfu7uQ1fL4A9p9WtzC5WwRbzXKKJ1PKkZ7DA+ouewEc1pF+ydavBEl5osMd
oR677Z416/tnPlSLd/tmudZDrLJ3RWfefz7MBObDiGE+zJ+csxWWc16A5Zyd
QmY6ZQqvl+y6NBx7hAIHOY5Jkx8IaEydsELlARdcmZ/zx1tbAdomszWvElGs
bHqRzSouBOw9laH1oB3m1A6e8VIgoU/6lHv1mRxwGzy8RHVrJ7iMv3WPSSch
a7nu3Tht4dzolivyrKALNrlPBAXIk5FL2PGEfLYA5J4n6JpwEuFcHdNb06QA
efsPTfm9E4CCm+KWas9CSH1jMahm9gEdEaveqOopgFvVi63loQI8cZNxAmY1
ijN+mSwmJoCh3vatAlQHDRd+mT+i1qP+frfdhkKd/9n4Yww7HQdiC8as7MVx
f/2Zg5g/I4b5M3/yzO1YntkSyzMvjdxaYmnMA9zCIq954hTwGozNd7UioF07
VDf3Urjw8pdOzFIGFVRx1tblS4gIXz+RXHaSC8k4S6pLYhu8sV9smvqeiHrW
mRn5fOeAQak5eb1GB/B4jz2a95FQ9M8pqwPRHFBzvXZ/VkYnXGiXLZld87/j
W+IjFTkQxrLPFpndDXG966ssN5KRIZbriJ+W65DUvmliIymAp1VVjmJaVaA2
YV6rE92Axq8e0brlLNTzt75/+TT3PRRZuJkqXatDywiqotQYAdw8oUQ5QiiG
4EaihGNe9V9/eArzh19j/vCL2xW2aT0CyP81Z/binuegVWNZ35HxBg1mNtyn
9Atgz/HkCDGXFHDVK1BzcSxGR70oLKNB4XXZOvdZ0a4kWLTDoVdCpwh5eFM8
Aj058HyhSuZVjXahfhTV0LvU+s8clOO0fMufXpRkjCtvx7jyZRhXvrOyuEJF
gQ5IxzKMJsoEiQfZbKinom3TclA+WA5qCHtvyE/svSH92HtDTEcf5joQBRBY
vszVRDQD8B6x3Xe/vfu7bz2M7VvTsH3rbsxf6pjmL/0fXVOhDw==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{371.6394593472259, 294.92084931008867`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 2}, {-0.1361725839726618, 7.362134777752165}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.143658999696571, -1.8271738830615742`, 1.8751431129589982`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.664139944404931*^9, 3.6641399892550488`*^9, {3.66414002148744*^9, 
   3.664140028297571*^9}, 3.664140064251515*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HopfData", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"Re", "[", 
         RowBox[{"N", "[", 
          RowBox[{"\[Lambda]", "/.", 
           RowBox[{"Hsp", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.1", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"HopfData", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"HopfNumSol2down", ",", "2"}], "]"}], "/.", 
         RowBox[{"\[Sigma]", "\[Rule]", "\"\<NA\>\""}]}], ",", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"HopfNumSol2up", ",", "2"}], "]"}], "/.", 
         RowBox[{"\[Sigma]", "\[Rule]", "\"\<NA\>\""}]}]}], "}"}], "]"}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/HopfData.csv\>\"", ",", "HopfData", ",", "\"\<CSV\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.63863990560841*^9, 3.638639926239593*^9}, {
  3.638644045909617*^9, 3.638644116989501*^9}, {3.638644615893413*^9, 
  3.638644650687533*^9}, {3.638644722860569*^9, 3.63864472443217*^9}, {
  3.638644849694337*^9, 3.6386448735325108`*^9}, {3.638645000877178*^9, 
  3.6386450203725367`*^9}, {3.6386450510972853`*^9, 3.638645067085988*^9}, {
  3.639920040670121*^9, 3.6399200436684933`*^9}, {3.646402216221128*^9, 
  3.646402289504469*^9}, {3.646402320288471*^9, 3.646402390873472*^9}, {
  3.646402442501273*^9, 3.646402455707924*^9}, {3.6464030697012367`*^9, 
  3.646403089724263*^9}, {3.6464031345594397`*^9, 3.646403138271303*^9}, {
  3.64640538319866*^9, 3.646405388648613*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Hsp2LS", " ", "=", " ", 
   RowBox[{
    RowBox[{"Hsp2", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", "\[Lambda]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.646407258333289*^9, 3.646407376295025*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(Hsp2 \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.669661213689587*^9, 3.674818959548636*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(Hsp2 \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.669661213689587*^9, 3.674818959602809*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"values", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
       RowBox[{"\[Mu]", "\[Rule]", "0.1"}], ",", 
       RowBox[{"m", "\[Rule]", "0.1"}], ",", 
       RowBox[{"\[Lambda]", "\[Rule]", "0.2"}]}], "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"HopfValues", " ", "=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ts", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "B0", "*)"}], 
        RowBox[{"B0", "=", 
         RowBox[{"1.9", "*", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "2"}], ")"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "Bm", "*)"}], 
        RowBox[{"Bm", "=", "0.0245"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "Em", "*)"}], 
        RowBox[{"Em", "=", 
         RowBox[{
          RowBox[{"21.39", "/", "2"}], "*", "1000"}]}], 
        RowBox[{"(*", 
         RowBox[{"J", "/", "gram"}], "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "\[Eta]", "*)"}], 
        RowBox[{"\[Eta]", "=", 
         RowBox[{"3", "/", "4"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "\[Eta]2", "*)"}], 
        RowBox[{"\[Eta]2", "=", 
         RowBox[{"-", "0.206"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "\[Lambda]0", "*)"}], 
        RowBox[{"\[Lambda]0", "=", 
         RowBox[{"3.3879", "*", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "7"}], ")"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "ef", "*)"}], 
        RowBox[{"ef", "=", "0.001"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "\[Gamma]", "*)"}], 
        RowBox[{"\[Gamma]", "=", "1.19"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "\[Zeta]", "*)"}], 
        RowBox[{"\[Zeta]", "=", "1.01"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "f0", "*)"}], 
        RowBox[{"f0", "=", "0.0202"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "mm0", "*)"}], 
        RowBox[{"mm0", "=", "0.324"}], ",", "\[IndentingNewLine]", 
        RowBox[{"M", "=", "10"}]}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"growth", " ", "=", 
        RowBox[{"N", "[", 
         RowBox[{"ts", "*", " ", "\[Lambda]0", "*", 
          RowBox[{"M", "^", "\[Eta]2"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"starvation", " ", "=", "  ", 
        RowBox[{"N", "[", 
         RowBox[{"ts", "*", 
          FractionBox[
           RowBox[{"-", "Bm"}], 
           RowBox[{"Em", "*", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "-", 
              RowBox[{"f0", "*", 
               SuperscriptBox["M", 
                RowBox[{"\[Gamma]", "-", "1"}]]}]}], "]"}]}]]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"mortality", " ", "=", 
        RowBox[{"N", "[", 
         RowBox[{"ts", "*", 
          FractionBox[
           RowBox[{"-", "Bm"}], 
           RowBox[{
            RowBox[{"Em", "*", 
             RowBox[{"Log", "[", 
              RowBox[{"1", "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f0", "*", 
                   SuperscriptBox["M", "\[Gamma]"]}], "+", " ", 
                  RowBox[{"mm0", "*", 
                   SuperscriptBox["M", "\[Zeta]"]}]}], ")"}], "/", "M"}]}], 
              "]"}]}], "\[IndentingNewLine]"}]]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"recovery", " ", "=", 
        RowBox[{"N", "[", " ", 
         RowBox[{"ts", "*", 
          RowBox[{"-", " ", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Eta]", "-", "1"}], ")"}], "*", 
             FractionBox["Bm", "Em"]}], 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"1", "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"M", "*", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox["B0", "Bm"], ")"}], 
                   FractionBox["1", 
                    RowBox[{"\[Eta]", "-", "1"}]]]}], ")"}], 
                RowBox[{"1", "-", "\[Eta]"}]]}], "]"}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"1", " ", "-", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"M", "*", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"f0", "*", 
                    SuperscriptBox["M", 
                    RowBox[{"\[Gamma]", "-", "1"}]]}]}], ")"}], "*", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox["B0", "Bm"], ")"}], 
                   FractionBox["1", 
                    RowBox[{"\[Eta]", "-", "1"}]]]}], ")"}], 
                RowBox[{"1", "-", "\[Eta]"}]]}], "]"}]}]]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"maintenance", " ", "=", " ", 
        RowBox[{"ts", "*", "ef", "*", "B0", "*", 
         RowBox[{"M", "^", "\[Eta]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"resourcegrowth", " ", "=", " ", 
        RowBox[{"ts", "*", "0.5"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"values", " ", "=", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]", "\[Rule]", "resourcegrowth"}], ",", 
          RowBox[{"\[Mu]", "\[Rule]", "mortality"}], ",", 
          RowBox[{"m", "\[Rule]", "maintenance"}], ",", 
          RowBox[{"\[Lambda]", "\[Rule]", "growth"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"FstarValue", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]", ",", "\[Rho]", ",", 
               RowBox[{"N", "[", 
                FractionBox[
                 RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"m", " ", "\[Mu]"}], "+", 
                    RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
                    RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\[Sigma]", ",", "0.00001", ",", "0.01", ",", "0.00001"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "0.00001", ",", "0.01", ",", "0.00001"}],
               "}"}]}], "]"}], "/.", "values"}], ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"HstarValue", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]", ",", "\[Rho]", ",", 
               RowBox[{"N", "[", 
                FractionBox[
                 RowBox[{"\[Alpha]", " ", 
                  SuperscriptBox["\[Lambda]", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"m", " ", "\[Mu]"}], "+", 
                    RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
                    RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\[Sigma]", ",", "0.00001", ",", "0.01", ",", "0.00001"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "0.00001", ",", "0.01", ",", "0.00001"}],
               "}"}]}], "]"}], "/.", "values"}], ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"RstarValue", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]", ",", "\[Rho]", ",", 
               RowBox[{"N", "[", 
                FractionBox[
                 RowBox[{"\[Mu]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
                  RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], "]"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
              "\[Sigma]", ",", "0.00001", ",", "0.01", ",", "0.00001"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "0.00001", ",", "0.01", ",", "0.00001"}],
               "}"}]}], "]"}], "/.", "values"}], ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"\[Rho]", "/.", 
                 RowBox[{"(", 
                  RowBox[{"HopfAnalytic", "/.", "values"}], ")"}]}], "]"}], 
               ",", 
               RowBox[{
                RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], "}"}], ",", "1"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", "0.00001", ",", "0.01", ",", "0.00001"}], 
          "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
      RowBox[{"m", "\[Rule]", "MR"}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", "0.2"}]}], "}"}], "*)"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.6663766971584578`*^9, 3.666376713704673*^9}, {
   3.66637688930871*^9, 3.6663768922687597`*^9}, {3.6663769746652203`*^9, 
   3.666377046159521*^9}, {3.6663771319142437`*^9, 3.666377133821636*^9}, {
   3.666377168147297*^9, 3.666377273822352*^9}, {3.666377371136918*^9, 
   3.666377406312895*^9}, {3.666378687645259*^9, 3.6663787094838533`*^9}, {
   3.666378741632893*^9, 3.6663787982151423`*^9}, {3.666378861718293*^9, 
   3.66637886282992*^9}, {3.666378960124902*^9, 3.666378977739121*^9}, {
   3.666379055116373*^9, 3.666379238420886*^9}, 3.66638111524644*^9, {
   3.666381153067534*^9, 3.666381165330901*^9}, 3.6663815395351257`*^9, {
   3.666382000837468*^9, 3.6663820060769787`*^9}, 3.666382041989369*^9, {
   3.666382078586073*^9, 3.666382121460539*^9}, {3.6664515049890842`*^9, 
   3.666451507608832*^9}, {3.66966231671173*^9, 3.669662332877852*^9}, 
   3.669662369420003*^9, {3.676980582905115*^9, 3.6769806037873173`*^9}, {
   3.67698064836486*^9, 3.676980691163246*^9}, 3.676980799102518*^9, {
   3.676980934176799*^9, 3.676981066249851*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HopfFixedPointPlot", " ", "=", " ", 
  RowBox[{"Legended", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"RstarValue", ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}]}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "*)"}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "*)"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"PlotLabel", "\[Rule]", "\"\<R Steady State\>\""}], ",", 
             
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Starvation Rate \[Sigma]\>\"", ",", 
                "\"\<Recovery Rate \[Rho]\>\""}], "}"}]}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.0001", ",", "0.01"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.0001", ",", "0.01"}], "}"}], ",", "All"}], 
               "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{"HopfValues", ",", 
             RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Text", "[", 
             RowBox[{"\"\<Cycles\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.35", ",", "0.9"}], "}"}]}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Text", "[", 
             RowBox[{"\"\<Fixed Points\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.78", ",", "0.1"}], "}"}]}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0.2", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<Hopf\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"0.4", ",", "0.25"}], "}"}]}], "]"}], ",", 
                RowBox[{"35", "Degree"}]}], "]"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<TC\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"0.25", ",", "0.55"}], "}"}]}], "]"}]}], "}"}], 
            "]"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"N", "[", 
                RowBox[{"\[Rho]", "/.", "Hsp"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0.2", ",", "1", ",", "0.1"}], 
                "}"}]}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Starvation rate \[Sigma]\>\"", ",", 
                "\"\<Recovery rate \[Rho]\>\""}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "White"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", "\"\<Hopf Bifurcations\>\""}]}], 
            "]"}], "*)"}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"HstarValue", ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}]}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "*)"}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "*)"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"PlotLabel", "\[Rule]", "\"\<H Steady State\>\""}], ",", 
             
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Starvation Rate \[Sigma]\>\"", ",", 
                "\"\<Recovery Rate \[Rho]\>\""}], "}"}]}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.0001", ",", "0.01"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.0001", ",", "0.01"}], "}"}], ",", "All"}], 
               "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{"HopfValues", ",", 
             RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Text", "[", 
             RowBox[{"\"\<Cycles\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.35", ",", "0.9"}], "}"}]}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Text", "[", 
             RowBox[{"\"\<Fixed Points\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.78", ",", "0.1"}], "}"}]}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0.2", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<Hopf\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"0.4", ",", "0.25"}], "}"}]}], "]"}], ",", 
                RowBox[{"35", "Degree"}]}], "]"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<TC\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"0.25", ",", "0.55"}], "}"}]}], "]"}]}], "}"}], 
            "]"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"N", "[", 
                RowBox[{"\[Rho]", "/.", "Hsp"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0.2", ",", "1", ",", "0.1"}], 
                "}"}]}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Starvation rate \[Sigma]\>\"", ",", 
                "\"\<Recovery rate \[Rho]\>\""}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "White"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", "\"\<Hopf Bifurcations\>\""}]}], 
            "]"}], "*)"}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"FstarValue", ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}]}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "*)"}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "*)"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"PlotLabel", "\[Rule]", "\"\<F Steady State\>\""}], ",", 
             
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Starvation Rate \[Sigma]\>\"", ",", 
                "\"\<Recovery Rate \[Rho]\>\""}], "}"}]}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.0001", ",", "0.01"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.0001", ",", "0.01"}], "}"}], ",", "All"}], 
               "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{"HopfValues", ",", 
             RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Text", "[", 
             RowBox[{"\"\<Cycles\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.35", ",", "0.9"}], "}"}]}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Text", "[", 
             RowBox[{"\"\<Fixed Points\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.78", ",", "0.1"}], "}"}]}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"Dashed", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0.2", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<Hopf\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"0.85", ",", "0.65"}], "}"}]}], "]"}], ",", 
                RowBox[{"40", "Degree"}]}], "]"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<TC\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"0.25", ",", "0.55"}], "}"}]}], "]"}]}], "}"}], 
            "]"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"N", "[", 
                RowBox[{"\[Rho]", "/.", "Hsp"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0.2", ",", "1", ",", "0.1"}], 
                "}"}]}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Starvation rate \[Sigma]\>\"", ",", 
                "\"\<Recovery rate \[Rho]\>\""}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "White"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", "\"\<Hopf Bifurcations\>\""}]}], 
            "]"}], "*)"}], "\[IndentingNewLine]", "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"BarLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<SouthwestColors\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}], ",", 
      RowBox[{"LegendMarkerSize", "\[Rule]", "200"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.666379256518382*^9, 3.6663792565916452`*^9}, {
   3.666379339781021*^9, 3.666379354159051*^9}, {3.666379403895645*^9, 
   3.666379456299265*^9}, {3.666379507734271*^9, 3.6663795924387007`*^9}, {
   3.666379623667613*^9, 3.666379784712083*^9}, {3.66638001678479*^9, 
   3.666380026212949*^9}, {3.666380106549871*^9, 3.666380173000477*^9}, {
   3.666380259683551*^9, 3.666380289867873*^9}, {3.66638037640567*^9, 
   3.666380459034971*^9}, 3.6663805593782463`*^9, {3.66638075206929*^9, 
   3.6663807534063463`*^9}, {3.666380812572394*^9, 3.666380853161787*^9}, {
   3.666380909728207*^9, 3.666380915892954*^9}, {3.666380948204776*^9, 
   3.666380965382403*^9}, {3.666381196923189*^9, 3.6663812987371264`*^9}, {
   3.6663813476421223`*^9, 3.6663813528808193`*^9}, {3.666382332717195*^9, 
   3.666382385772958*^9}, {3.666382453468966*^9, 3.666382473593219*^9}, 
   3.666382583889948*^9, {3.66638265761281*^9, 3.6663827090908623`*^9}, {
   3.666382966700013*^9, 3.6663829809085608`*^9}, {3.666384196855608*^9, 
   3.66638437537318*^9}, {3.6664514436202*^9, 3.666451452946534*^9}, {
   3.6672452144171352`*^9, 3.6672452826519136`*^9}, {3.66724533042472*^9, 
   3.6672455363305607`*^9}, {3.669662260148822*^9, 3.669662301289575*^9}, {
   3.669662400394425*^9, 3.6696624486807623`*^9}, {3.669662494434443*^9, 
   3.669662513501857*^9}, 3.676980632770884*^9, {3.6769808419492702`*^9, 
   3.676980924727573*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.667245512242364*^9, 3.6672455388870173`*^9}, 
   3.6696612319557533`*^9, {3.6696622747657623`*^9, 3.669662303667268*^9}, 
   3.6696623443341846`*^9, {3.669662382892292*^9, 3.669662451262897*^9}, {
   3.669662499875649*^9, 3.6696625155448503`*^9}, 3.674818968129489*^9, {
   3.676980822444059*^9, 3.676980875868598*^9}, {3.676980908220372*^9, 
   3.6769809266852407`*^9}, 3.676980960108642*^9, 3.67698100969621*^9, 
   3.6769810441388397`*^9, 3.676981549867251*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/Manuscript/fig_HopfFP.jpg\>\"", ",", "HopfFixedPointPlot", 
   ",", "\"\<JPEG\>\"", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.666381357955566*^9, 3.66638138136576*^9}, {
  3.6663816850350637`*^9, 3.666381689072454*^9}, {3.6663817751232567`*^9, 
  3.6663818052265377`*^9}, {3.6696612429505253`*^9, 3.669661244253776*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/Manuscript/fig_HopfFP.jpg\"\>"], "Output",
 CellChangeTimes->{
  3.666381431749555*^9, 3.666381691904557*^9, 3.666381775834095*^9, 
   3.666381806551735*^9, 3.666383002775907*^9, 3.6663843891144733`*^9, 
   3.666451526961554*^9, {3.667245366520322*^9, 3.667245405348875*^9}, 
   3.667245444382832*^9, {3.667245519504346*^9, 3.6672455435679693`*^9}, 
   3.669661250512411*^9, 3.669662460152297*^9, 3.669662522281103*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ts", "=", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "B0", "*)"}], 
     RowBox[{"B0", "=", 
      RowBox[{"1.9", "*", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "2"}], ")"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "Bm", "*)"}], 
     RowBox[{"Bm", "=", "0.0245"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "Em", "*)"}], 
     RowBox[{"Em", "=", 
      RowBox[{
       RowBox[{"21.39", "/", "2"}], "*", "1000"}]}], 
     RowBox[{"(*", 
      RowBox[{"J", "/", "gram"}], "*)"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\[Eta]", "*)"}], 
     RowBox[{"\[Eta]", "=", 
      RowBox[{"3", "/", "4"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\[Eta]2", "*)"}], 
     RowBox[{"\[Eta]2", "=", 
      RowBox[{"-", "0.206"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\[Lambda]0", "*)"}], 
     RowBox[{"\[Lambda]0", "=", 
      RowBox[{"3.3879", "*", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "7"}], ")"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "ef", "*)"}], 
     RowBox[{"ef", "=", "0.001"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\[Gamma]", "*)"}], 
     RowBox[{"\[Gamma]", "=", "1.19"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\[Zeta]", "*)"}], 
     RowBox[{"\[Zeta]", "=", "1.01"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "f0", "*)"}], 
     RowBox[{"f0", "=", "0.0202"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "mm0", "*)"}], 
     RowBox[{"mm0", "=", "0.324"}], ",", "\[IndentingNewLine]", 
     RowBox[{"M", "=", "10"}]}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"growth", " ", "=", 
     RowBox[{"N", "[", 
      RowBox[{"ts", "*", " ", "\[Lambda]0", "*", 
       RowBox[{"M", "^", "\[Eta]2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"starvation", " ", "=", "  ", 
     RowBox[{"N", "[", 
      RowBox[{"ts", "*", 
       FractionBox[
        RowBox[{"-", "Bm"}], 
        RowBox[{"Em", "*", 
         RowBox[{"Log", "[", 
          RowBox[{"1", "-", 
           RowBox[{"f0", "*", 
            SuperscriptBox["M", 
             RowBox[{"\[Gamma]", "-", "1"}]]}]}], "]"}]}]]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"mortality", " ", "=", 
     RowBox[{"N", "[", 
      RowBox[{"ts", "*", 
       FractionBox[
        RowBox[{"-", "Bm"}], 
        RowBox[{
         RowBox[{"Em", "*", 
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f0", "*", 
                SuperscriptBox["M", "\[Gamma]"]}], "+", " ", 
               RowBox[{"mm0", "*", 
                SuperscriptBox["M", "\[Zeta]"]}]}], ")"}], "/", "M"}]}], 
           "]"}]}], "\[IndentingNewLine]"}]]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"recovery", " ", "=", 
     RowBox[{"N", "[", " ", 
      RowBox[{"ts", "*", 
       RowBox[{"-", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Eta]", "-", "1"}], ")"}], "*", 
          FractionBox["Bm", "Em"]}], 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"M", "*", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox["B0", "Bm"], ")"}], 
                FractionBox["1", 
                 RowBox[{"\[Eta]", "-", "1"}]]]}], ")"}], 
             RowBox[{"1", "-", "\[Eta]"}]]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           RowBox[{"1", " ", "-", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"M", "*", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"f0", "*", 
                  SuperscriptBox["M", 
                   RowBox[{"\[Gamma]", "-", "1"}]]}]}], ")"}], "*", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox["B0", "Bm"], ")"}], 
                FractionBox["1", 
                 RowBox[{"\[Eta]", "-", "1"}]]]}], ")"}], 
             RowBox[{"1", "-", "\[Eta]"}]]}], "]"}]}]]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"maintenance", " ", "=", " ", 
     RowBox[{"ts", "*", "ef", "*", "B0", "*", 
      RowBox[{"M", "^", "\[Eta]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"resourcegrowth", " ", "=", " ", 
     RowBox[{"ts", "*", "0.5"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"values", " ", "=", "  ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "\[Rule]", "resourcegrowth"}], ",", 
       RowBox[{"\[Mu]", "\[Rule]", "mortality"}], ",", 
       RowBox[{"m", "\[Rule]", "maintenance"}], ",", 
       RowBox[{"\[Lambda]", "\[Rule]", "growth"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"FstarValue", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", "\[Rho]", ",", 
            RowBox[{"N", "[", 
             FractionBox[
              RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m", " ", "\[Mu]"}], "+", 
                 RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
                 RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", "0.001", ",", "0.01", ",", "0.001"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Rho]", ",", "0.001", ",", "0.01", ",", "0.001"}], 
           "}"}]}], "]"}], "/.", "values"}], ",", "1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"HstarValue", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", "\[Rho]", ",", 
            RowBox[{"N", "[", 
             FractionBox[
              RowBox[{"\[Alpha]", " ", 
               SuperscriptBox["\[Lambda]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m", " ", "\[Mu]"}], "+", 
                 RowBox[{"\[Lambda]", " ", "\[Rho]"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
                 RowBox[{"\[Mu]", " ", "\[Sigma]"}]}], ")"}]}]], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", "0.001", ",", "0.01", ",", "0.001"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Rho]", ",", "0.001", ",", "0.01", ",", "0.001"}], 
           "}"}]}], "]"}], "/.", "values"}], ",", "1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"RstarValue", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", "\[Rho]", ",", 
            RowBox[{"N", "[", 
             FractionBox[
              RowBox[{"\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
              RowBox[{
               RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
               RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", "0.2", ",", "1", ",", "0.01"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Rho]", ",", "0", ",", "1", ",", "0.01"}], "}"}]}], 
         "]"}], "/.", "values"}], ",", "1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"ListContourPlot", "[", 
     RowBox[{"FstarValue", ",", 
      RowBox[{"PlotLegends", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6769801780621758`*^9, 3.676980241450265*^9}, {
  3.676980302005908*^9, 3.67698054832094*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
     "], {{{
        EdgeForm[], 
        RGBColor[0.148, 0.33, 0.54], 
        GraphicsGroupBox[{
          
          PolygonBox[{{204, 78, 205}, {72, 82, 73}, {72, 81, 82}, {62, 63, 
           53}, {95, 86, 85}, {89, 79, 88}, {63, 54, 53}, {189, 53, 190}, {52,
            61, 62}, {52, 62, 53}, {76, 66, 75}, {64, 54, 63}, {177, 42, 
           178}, {62, 61, 71}, {82, 83, 73}, {80, 79, 89}, {82, 81, 91}, {96, 
           86, 95}, {128, 21, 161}, {88, 98, 89}, {90, 99, 100}, {99, 89, 
           98}, {42, 41, 51}, {90, 89, 99}, {97, 88, 87}, {178, 42, 187}, {88,
            97, 98}, {65, 64, 74}, {195, 65, 196}, {159, 21, 128}, {202, 77, 
           203}, {199, 66, 200}, {158, 31, 176}, {96, 97, 87}, {198, 66, 
           199}, {83, 74, 73}, {72, 73, 63}, {52, 51, 61}, {86, 87, 77}, {78, 
           88, 79}, {74, 64, 73}, {73, 64, 63}, {84, 74, 83}, {82, 91, 92}, {
           75, 84, 85}, {191, 54, 192}, {86, 76, 85}, {42, 51, 52}, {94, 84, 
           93}, {82, 92, 83}, {89, 90, 80}, {206, 79, 207}, {85, 76, 75}, {85,
            84, 94}, {85, 94, 95}, {87, 86, 96}, {77, 76, 86}, {75, 66, 65}, {
           75, 74, 84}, {87, 78, 77}, {72, 71, 81}, {65, 74, 75}, {78, 87, 
           88}, {62, 71, 72}, {92, 93, 83}, {192, 54, 193}, {93, 84, 83}, {62,
            72, 63}}], 
          
          PolygonBox[{{205, 78, 79, 206}, {194, 64, 65, 195}, {193, 54, 64, 
           194}, {196, 65, 66, 198}, {207, 79, 80, 197}, {187, 42, 52, 188}, {
           190, 53, 54, 191}, {200, 66, 76, 201}, {161, 21, 31, 158}, {176, 
           31, 41, 174}, {203, 77, 78, 204}, {188, 52, 53, 189}, {201, 76, 77,
            202}, {174, 41, 42, 177}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.47087577049110524`, 0.4691895679042223, 0.5422647227783919], 
        GraphicsGroupBox[{
          
          PolygonBox[{{69, 59, 68}, {147, 24, 148}, {34, 24, 33}, {101, 11, 
           133}, {134, 22, 135}, {46, 36, 45}, {58, 67, 68}, {148, 24, 164}, {
           22, 32, 23}, {33, 24, 23}, {198, 56, 196}, {175, 36, 179}, {37, 36,
            46}, {36, 35, 45}, {130, 11, 101}, {32, 33, 23}, {170, 35, 171}, {
           57, 48, 47}, {47, 46, 56}, {56, 46, 55}, {189, 43, 188}, {46, 47, 
           37}, {47, 38, 37}, {38, 47, 48}, {59, 49, 58}, {49, 39, 48}, {191, 
           44, 190}, {35, 44, 45}, {40, 39, 49}, {56, 57, 47}, {48, 57, 58}, {
           69, 70, 60}, {50, 59, 60}, {188, 43, 187}, {50, 49, 59}, {46, 45, 
           55}, {48, 58, 49}, {184, 39, 185}, {49, 50, 40}, {44, 34, 43}, {
           177, 32, 174}, {206, 69, 205}, {182, 38, 183}, {194, 55, 193}, {
           174, 32, 176}, {60, 59, 69}, {204, 68, 203}, {58, 68, 59}, {201, 
           67, 200}, {197, 70, 207}, {195, 55, 194}, {140, 23, 141}, {38, 48, 
           39}, {202, 67, 201}, {158, 22, 161}, {43, 34, 33}, {180, 37, 
           181}, {67, 58, 57}, {35, 34, 44}}], 
          
          PolygonBox[{{207, 70, 69, 206}, {176, 32, 22, 158}, {196, 56, 55, 
           195}, {181, 37, 38, 182}, {187, 43, 33, 178}, {190, 44, 43, 189}, {
           205, 69, 68, 204}, {199, 57, 56, 198}, {192, 45, 44, 191}, {193, 
           55, 45, 192}, {179, 36, 37, 180}, {164, 24, 34, 167}, {203, 68, 67,
            202}, {167, 34, 35, 170}, {135, 22, 23, 140}, {178, 33, 32, 
           177}, {185, 39, 40, 186}, {171, 35, 36, 175}, {183, 38, 39, 184}, {
           141, 23, 24, 147}, {200, 67, 57, 199}}], 
          
          PolygonBox[{{129, 128, 161, 22, 134}, {133, 11, 159, 128, 
           129}}]}]}, {
        EdgeForm[], 
        RGBColor[0.7605101016015039, 0.5709779909781643, 0.372000451454707], 
        GraphicsGroupBox[{
          
          PolygonBox[{{186, 30, 185}, {125, 15, 146}, {163, 27, 165}, {160, 
           26, 162}, {106, 12, 104}, {184, 29, 183}, {166, 28, 168}, {167, 25,
            164}, {129, 12, 133}, {175, 26, 171}, {169, 29, 172}, {180, 27, 
           179}, {134, 12, 129}, {108, 13, 112}, {147, 14, 141}, {122, 15, 
           125}, {182, 28, 181}, {170, 25, 167}, {140, 13, 135}, {115, 14, 
           119}}], 
          
          PolygonBox[{{104, 12, 13, 108}, {172, 29, 30, 173}, {141, 14, 13, 
           140}, {181, 28, 27, 180}, {164, 25, 15, 148}, {148, 15, 14, 147}, {
           112, 13, 14, 115}, {185, 30, 29, 184}, {119, 14, 15, 122}, {183, 
           29, 28, 182}, {153, 25, 26, 160}, {162, 26, 27, 163}, {171, 26, 25,
            170}, {135, 13, 12, 134}, {168, 28, 29, 169}, {146, 15, 25, 
           153}, {165, 27, 28, 166}, {179, 27, 26, 175}}], 
          PolygonBox[{{110, 1, 130, 101, 102}, {102, 101, 133, 12, 106}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9239847336600483, 0.6799618341501208, 0.3643526743461498], 
        
        GraphicsGroupBox[{
          
          PolygonBox[{{163, 17, 162}, {169, 19, 168}, {151, 19, 154}, {153, 
           16, 146}, {144, 18, 149}, {173, 20, 172}, {131, 16, 136}, {166, 18,
            165}, {138, 17, 142}, {160, 16, 153}}], 
          
          PolygonBox[{{103, 102, 106, 107}, {109, 108, 112, 113}, {120, 119, 
           122, 123}, {107, 106, 104, 105}, {105, 104, 108, 109}, {116, 115, 
           119, 120}, {165, 18, 17, 163}, {123, 122, 125, 126}, {136, 16, 17, 
           138}, {142, 17, 18, 144}, {149, 18, 19, 151}, {168, 19, 18, 166}, {
           172, 20, 19, 169}, {154, 19, 20, 156}, {113, 112, 115, 116}, {162, 
           17, 16, 160}, {111, 110, 102, 103}}], 
          PolygonBox[{{126, 125, 146, 16, 131}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9702521986936583, 0.7956304967341459, 0.5077818159503408], 
        
        GraphicsGroupBox[{
          PolygonBox[{{109, 3, 105}, {107, 2, 103}, {103, 2, 111}}], 
          
          PolygonBox[{{150, 149, 151, 152}, {117, 116, 120, 121}, {137, 136, 
           138, 139}, {145, 144, 149, 150}, {155, 154, 156, 157}, {139, 138, 
           142, 143}, {143, 142, 144, 145}, {121, 120, 123, 124}, {132, 131, 
           136, 137}, {114, 113, 116, 117}, {124, 123, 126, 127}, {127, 126, 
           131, 132}, {152, 151, 154, 155}, {105, 3, 2, 107}}], 
          PolygonBox[{{118, 3, 109, 113, 114}}]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.9499999999999997, 0.7499999999999997], 
        GraphicsGroupBox[{
          
          PolygonBox[{{145, 8, 143}, {157, 10, 155}, {114, 4, 118}, {139, 7, 
           137}, {117, 4, 114}, {132, 6, 127}, {152, 9, 150}, {124, 5, 121}}], 
          
          PolygonBox[{{143, 8, 7, 139}, {127, 6, 5, 124}, {121, 5, 4, 117}, {
           155, 10, 9, 152}, {137, 7, 6, 132}, {150, 9, 8, 145}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{118, 114, 117, 121, 124, 127, 132, 137, 139, 143, 145, 150,
            152, 155, 157}]}, "250"], Annotation[#, 250, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{111, 103, 107, 105, 109, 113, 116, 120, 123, 126, 131, 136,
            138, 142, 144, 149, 151, 154, 156}]}, "200"], 
        Annotation[#, 200, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{173, 172, 169, 168, 166, 165, 163, 162, 160, 153, 146, 125,
            122, 119, 115, 112, 108, 104, 106, 102, 110}]}, "150"], 
        Annotation[#, 150, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{130, 101, 133, 129, 134, 135, 140, 141, 147, 148, 164, 167,
            170, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186}]}, "100"], 
        Annotation[#, 100, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{159, 128, 161, 158, 176, 174, 177, 178, 187, 188, 189, 190,
            191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 
           205, 206, 207, 197}]}, "50"], 
        Annotation[#, 50, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.148, 0.33, 0.54}}, {{0.47087577049110524`, 
              0.4691895679042223, 0.5422647227783919}}, {{0.7605101016015039, 
              0.5709779909781643, 0.372000451454707}}, {{0.9239847336600483, 
              0.6799618341501209, 0.3643526743461499}}, {{0.9702521986936583, 
              0.7956304967341459, 0.5077818159503408}}, {{1., 0.95, 0.75}}}, {{
                Rational[-15, 2], -75}, {
                Rational[15, 2], 75}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -75}, {
                  Rational[-15, 2], -75}, {
                  Rational[-15, 2], 75}, {
                  Rational[15, 2], 75}}, {{
                 7.5, -75}, {-7.5, -75}, {-7.5, 75}, {7.5, 75}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -50.00000000000001}, {
                    Rational[
                    15, 2], -50.00000000000001}}, {{-7.5, \
-50.00000000000001}, {7.5, -50.00000000000001}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -25.000000000000007`}, {
                    Rational[
                    15, 2], -25.000000000000007`}}, {{-7.5, \
-25.000000000000007`}, {7.5, -25.000000000000007`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -1.4210854715202004`*^-14}, {
                    Rational[
                    15, 2], -1.4210854715202004`*^-14}}, {{-7.5, \
-1.4210854715202004`*^-14}, {7.5, -1.4210854715202004`*^-14}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 24.999999999999986`}, {
                    Rational[15, 2], 24.999999999999986`}}, {{-7.5, 
                  24.999999999999986`}, {7.5, 24.999999999999986`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 49.999999999999986`}, {
                    Rational[15, 2], 49.999999999999986`}}, {{-7.5, 
                  49.999999999999986`}, {7.5, 49.999999999999986`}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.499999999999999, -75.}, {7.499999999999999, 75.}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.499999999999999, -50.}, 
                    Offset[{4., 0}, {7.499999999999999, -50.}]}, {{
                    7.499999999999999, -25.00000000000001}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -25.00000000000001}]}, {{
                    7.499999999999999, -1.3465604580010408`*^-14}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -1.3465604580010408`*^-14}]}, {{
                    7.499999999999999, 24.999999999999996`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    24.999999999999996`}]}, {{7.499999999999999, 
                    49.99999999999997}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    49.99999999999997}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999999, -50.}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["100", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -25.00000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["150", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -1.3465604580010408`*^-14}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["200", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    24.999999999999996`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["250", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    49.99999999999997}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 150}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"13.996221695070648`", ",", "284.1644703968234`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"50.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"100.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"150.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"200.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"250.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.676980429476348*^9, 3.676980441429243*^9}, {
   3.676980486709598*^9, 3.6769805171451902`*^9}, 3.6769805495221033`*^9}]
}, Open  ]]
},
WindowSize->{1091, 855},
WindowMargins->{{Automatic, 6}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 76, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[659, 25, 6626, 141, 233, "Input"],
Cell[7288, 168, 113964, 1879, 219, "Output"]
}, Open  ]],
Cell[121267, 2050, 124, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[121416, 2055, 2212, 51, 97, "Input"],
Cell[123631, 2108, 2793, 68, 52, "Output"]
}, Open  ]],
Cell[126439, 2179, 551, 13, 46, "Input"],
Cell[CellGroupData[{
Cell[127015, 2196, 1036, 19, 28, "Input"],
Cell[128054, 2217, 1166, 20, 28, "Output"]
}, Open  ]],
Cell[129235, 2240, 153, 3, 30, "Text"],
Cell[129391, 2245, 382, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[129798, 2255, 649, 17, 63, "Input"],
Cell[130450, 2274, 1137, 21, 50, "Output"],
Cell[131590, 2297, 1329, 27, 52, "Output"],
Cell[132922, 2326, 1316, 26, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134275, 2357, 315, 7, 46, "Input"],
Cell[134593, 2366, 141, 3, 46, "Output"],
Cell[134737, 2371, 362, 10, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135136, 2386, 6747, 140, 250, "Input"],
Cell[141886, 2528, 25907, 507, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167830, 3040, 294, 6, 28, "Input"],
Cell[168127, 3048, 250, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168414, 3056, 302, 7, 28, "Input"],
Cell[168719, 3065, 301, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169057, 3075, 2543, 66, 148, "Input"],
Cell[171603, 3143, 1792, 48, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173432, 3196, 131, 2, 28, "Input"],
Cell[173566, 3200, 2228, 59, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175831, 3264, 719, 19, 46, "Input"],
Cell[176553, 3285, 124, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176714, 3292, 102, 1, 28, "Input"],
Cell[176819, 3295, 6454, 180, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183310, 3480, 176, 4, 28, "Input"],
Cell[183489, 3486, 3075, 86, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186601, 3577, 652, 16, 28, "Input"],
Cell[187256, 3595, 1603, 48, 81, "Output"]
}, Open  ]],
Cell[188874, 3646, 173, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[189072, 3654, 521, 14, 28, "Input"],
Cell[189596, 3670, 863, 22, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190496, 3697, 4640, 111, 318, "Input"],
Cell[195139, 3810, 3439, 66, 402, "Output"],
Cell[198581, 3878, 573, 12, 24, "Message"],
Cell[199157, 3892, 578, 12, 24, "Message"],
Cell[199738, 3906, 577, 12, 24, "Message"],
Cell[200318, 3920, 1178, 21, 160, "Message"],
Cell[201499, 3943, 572, 12, 24, "Message"],
Cell[202074, 3957, 576, 12, 24, "Message"],
Cell[202653, 3971, 580, 12, 24, "Message"],
Cell[203236, 3985, 1176, 21, 160, "Message"],
Cell[204415, 4008, 573, 12, 24, "Message"],
Cell[204991, 4022, 578, 12, 24, "Message"],
Cell[205572, 4036, 576, 12, 24, "Message"],
Cell[206151, 4050, 1176, 21, 160, "Message"],
Cell[207330, 4073, 573, 12, 24, "Message"],
Cell[207906, 4087, 578, 12, 24, "Message"],
Cell[208487, 4101, 578, 12, 24, "Message"],
Cell[209068, 4115, 1176, 21, 160, "Message"]
}, Open  ]],
Cell[210259, 4139, 231, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[210515, 4147, 97, 1, 28, "Input"],
Cell[210615, 4150, 490, 11, 28, "Output"]
}, Open  ]],
Cell[211120, 4164, 5981, 135, 318, "Input"],
Cell[CellGroupData[{
Cell[217126, 4303, 93, 1, 28, "Input"],
Cell[217222, 4306, 349, 10, 28, "Output"]
}, Open  ]],
Cell[217586, 4319, 105, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[217716, 4324, 1548, 37, 97, "Input"],
Cell[219267, 4363, 527, 10, 28, "Output"],
Cell[219797, 4375, 628, 14, 28, "Output"],
Cell[220428, 4391, 519, 10, 28, "Output"],
Cell[220950, 4403, 541, 11, 28, "Output"],
Cell[221494, 4416, 615, 13, 28, "Output"]
}, Open  ]],
Cell[222124, 4432, 4102, 110, 266, "Input"],
Cell[CellGroupData[{
Cell[226251, 4546, 495, 15, 62, "Input"],
Cell[226749, 4563, 128, 2, 28, "Output"]
}, Open  ]],
Cell[226892, 4568, 580, 13, 63, "Input"],
Cell[227475, 4583, 620, 19, 28, "Input"],
Cell[228098, 4604, 484, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[228607, 4619, 104, 1, 28, "Input"],
Cell[228714, 4622, 7701, 200, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236452, 4827, 144, 2, 28, "Input"],
Cell[236599, 4831, 101, 1, 28, "Output"]
}, Open  ]],
Cell[236715, 4835, 254, 6, 49, "Text"],
Cell[236972, 4843, 2290, 45, 46, "Input"],
Cell[CellGroupData[{
Cell[239287, 4892, 3273, 73, 148, "Input"],
Cell[242563, 4967, 70450, 1295, 275, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313050, 6267, 398, 8, 46, "Input"],
Cell[313451, 6277, 356, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313844, 6287, 168, 3, 28, "Input"],
Cell[314015, 6292, 17878, 460, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331930, 6757, 97, 1, 28, "Input"],
Cell[332030, 6760, 8080, 205, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340147, 6970, 7765, 156, 233, "Input"],
Cell[347915, 7128, 165204, 2719, 295, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513156, 9852, 4234, 88, 148, "Input"],
Cell[517393, 9942, 275, 8, 43, "Message"],
Cell[517671, 9952, 273, 8, 43, "Message"],
Cell[517947, 9962, 275, 8, 43, "Message"],
Cell[518225, 9972, 339, 9, 24, "Message"],
Cell[518567, 9983, 333, 9, 21, "Message"],
Cell[518903, 9994, 333, 9, 21, "Message"],
Cell[519239, 10005, 333, 9, 21, "Message"],
Cell[519575, 10016, 344, 9, 24, "Message"],
Cell[519922, 10027, 57199, 959, 379, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577158, 10991, 749, 20, 46, "Input"],
Cell[577910, 11013, 113047, 1844, 310, "Output"]
}, Open  ]],
Cell[690972, 12860, 1941, 45, 80, "Input"],
Cell[CellGroupData[{
Cell[692938, 12909, 276, 7, 28, "Input"],
Cell[693217, 12918, 532, 11, 24, "Message"],
Cell[693752, 12931, 532, 11, 24, "Message"]
}, Open  ]],
Cell[694299, 12945, 11530, 275, 828, "Input"],
Cell[CellGroupData[{
Cell[705854, 13224, 14814, 332, 811, "Input"],
Cell[720671, 13558, 522, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[721230, 13570, 509, 9, 46, "Input"],
Cell[721742, 13581, 514, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722293, 13593, 8634, 221, 766, "Input"],
Cell[730930, 13816, 31298, 629, 360, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
