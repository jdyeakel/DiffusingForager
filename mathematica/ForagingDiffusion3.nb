(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    610231,      11849]
NotebookOptionsPosition[    604107,      11664]
NotebookOutlinePosition[    604468,      11680]
CellTagsIndexPosition[    604425,      11677]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MetapopDyn", "[", 
      RowBox[{
      "a_", ",", "\[Lambda]_", ",", "\[Eta]_", ",", "\[Mu]_", ",", "T_"}], 
      "]"}], " ", ":=", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"R", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"a", "*", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}]}], " ", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"X", "[", "t", "]"}], "+", " ", 
              RowBox[{"Y", "[", "t", "]"}]}], " ", ")"}], "*", 
            RowBox[{"R", "[", "t", "]"}], "*", "\[Eta]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Eta]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Eta]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"X", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Mu]", "*", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Y", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Lambda]", "*", 
            RowBox[{"Y", "[", "t", "]"}]}], "-", 
           RowBox[{"\[Eta]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "+", 
           RowBox[{"\[Eta]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], " ", "*", " ", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"R", "[", "0", "]"}], "\[Equal]", "0.15"}], ",", 
         RowBox[{
          RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0.15"}], ",", 
         RowBox[{
          RowBox[{"Y", "[", "0", "]"}], "\[Equal]", "0.15"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "X", ",", "Y"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "All"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "0.5"}], ",", 
       RowBox[{"\[Lambda]", "=", "0.2"}], ",", 
       RowBox[{"\[Eta]", "=", "0.4"}], ",", 
       RowBox[{"\[Mu]", "=", "0.2"}], ",", 
       RowBox[{"T", "=", "1000"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Traj", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"R", "[", "t", "]"}], ",", 
           RowBox[{"X", "[", "t", "]"}], ",", 
           RowBox[{"Y", "[", "t", "]"}]}], "}"}], "/.", 
         RowBox[{"MetapopDyn", "[", 
          RowBox[{
          "a", ",", "\[Lambda]", ",", "\[Eta]", ",", "\[Mu]", ",", "T"}], 
          "]"}]}], " ", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{"Traj", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "All"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time\>\"", ",", "\"\<R,S,F\>\""}], "}"}]}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.636818991590914*^9, 3.6368190277522917`*^9}, {
   3.636819069088731*^9, 3.6368191125387383`*^9}, {3.636819264811551*^9, 
   3.6368192980259027`*^9}, 3.6368225644646*^9, {3.636829939892223*^9, 
   3.636830014380571*^9}, {3.639404872826383*^9, 3.6394049722443237`*^9}, {
   3.6394050144911413`*^9, 3.639405019012155*^9}, {3.6394063834669647`*^9, 
   3.6394064149109983`*^9}, {3.6463985279599457`*^9, 3.646398609007303*^9}, {
   3.646398645453455*^9, 3.646398754993803*^9}, {3.646398793627618*^9, 
   3.646398828570057*^9}, {3.646398898504942*^9, 3.646398916564762*^9}, {
   3.646399089033573*^9, 3.646399093251112*^9}, {3.6463992694913187`*^9, 
   3.646399271481216*^9}, {3.646399330822397*^9, 3.646399353267209*^9}, {
   3.6463994019138317`*^9, 3.646399444394405*^9}, {3.646399508960676*^9, 
   3.646399534049861*^9}, {3.6463999152131853`*^9, 3.646400034745784*^9}, {
   3.646400132351523*^9, 3.6464001410179853`*^9}, {3.646400202948778*^9, 
   3.646400231178789*^9}, {3.646400293450811*^9, 3.64640029727627*^9}, {
   3.64640032943053*^9, 3.646400337373057*^9}, {3.6464003864565907`*^9, 
   3.646400422694214*^9}, {3.646400520282331*^9, 3.646400566181733*^9}, {
   3.646400624135583*^9, 3.6464006531024637`*^9}, 3.646401179779606*^9, {
   3.646413474146559*^9, 3.646413508873995*^9}, {3.6464147899261913`*^9, 
   3.646414836692885*^9}, {3.646673579737204*^9, 3.6466736183704348`*^9}, {
   3.646674392355935*^9, 3.6466744309787188`*^9}, {3.646675181556884*^9, 
   3.646675227641704*^9}, {3.646675321723659*^9, 3.646675353025045*^9}, {
   3.64667575507104*^9, 3.6466757867580757`*^9}, {3.646675849303026*^9, 
   3.6466758675577517`*^9}, 3.6466790733558197`*^9, {3.646679246481843*^9, 
   3.646679252826593*^9}, {3.649002839449933*^9, 3.649002860143219*^9}, {
   3.662927399068564*^9, 3.662927466002706*^9}, {3.662927497109874*^9, 
   3.662927501370956*^9}, 3.662927580249119*^9, {3.662928137314248*^9, 
   3.662928138215234*^9}, {3.662928235239381*^9, 3.6629282430452557`*^9}, {
   3.662928281830029*^9, 3.662928307251883*^9}, 3.6629289842566833`*^9, {
   3.6629296161149473`*^9, 3.662929716723133*^9}, {3.662929790490985*^9, 
   3.662929793137164*^9}, {3.662930131256384*^9, 3.662930151670442*^9}, {
   3.662930185734008*^9, 3.662930191612047*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
hYMP6ngw+EiE7J8v9nQHnGnhwVbT4TJy/WUt29LygwcZh+e/JvvlnD0Sezp4
8CPV8wm6+PWjRJ1fPGjiNWehS5f9OnK9lwcb1opmoMv8FbUl+4n61OKloN+t
4zz/PcQDN0iKJ9dvaAHHZZQHrx10Y9DlP3/t/DjOg/PnV0agKyyVFptNEvWX
6EM+z1XesPuWPUXk872cAF3j9PhU2Ew+hFjQWeg6qeXT3rP5EN7kQCP7M6NX
SVuaDzkM7QB0258n0CPPh4ia7YHozkzlqvfL+dA8r4qK7j7MP3xnFR/OTGYw
0T3Pn2rIqxO/N1rIQffK/f4TpMkHA4dyHtkvqvYxvdYS3y/oDEVPcyaUFujy
4c3HcPL8M3/DtecP9fnE89qFy2itlK6xyfV8MGZOJaFNHEJjb2zkw2qj62R8
rMV19beaEd/fS09HHzsbcDp8Cx/OF/7NQV9QXT5P34oPooviHpHnq4bi21+2
88Ev6uhzdMrm+R3Ku/jQF6H/lpy/9I1DuU58kPDkt5DjL7Wc2H+ID8lQ1En2
s0vdcf/+48Ptzjl96KU/9D5tPcKH7xEOE+h9D0u315/iQ8OJHCmspyPHTnRS
zvCh4K2lLNnP5CU5K3z5kHX2pQK5nlhOr07482F/tZoa+prRlLNkIB+eDs7V
IvvDr5S/uVQ+rMl/ooP+sLfHcIrFB33Fi2Q9N4pF1qRw+VBWxDVFdz81OGsl
4MMxcVey/sdPNyzoCSby5ylkiZ6tQsuKCOODh9LhbWjZLyttDCL5MCHCtEGr
hrzpqo/mww45d1u0PnhzqbF8on+J7EFbDEmprEzgg0bF0b1oanHqlbybfLCd
kD1A9qsYI6lt2XxIuDV+ED1y5B2voYCoh9Z/+8nzjYHz1MkiPmSXOJLXg5/C
iVKlRLzelpD3s01KW5//hg9syz/keE7O6vedLufDkznZ5PgDHsdIp1byYeC0
5Wayn3uvv7/tEx9iWVmbyPX/mfkr8gsf1t2fNiT3g0USx+c08kH+g7keOsf+
cgf9Kx9E4k+Q56Unn9JbTrfyocnxAhn/D1Uf6nb2EPPZKUPma7eUw76SPj4Y
eQ9Ioz/v/l698Q8fVCs+zCf758c/5atH+MR+70f2j/7yxcVzhATwiudO9gvf
edfNGTMEUOcWRO5/4zs0Xo6JCKC2tJCsnxkfTJ50zhHA/K9eZH1x55YYuUgI
4MrO7h/ouTa2ebXzBXDteUgzWuad6/2ShQKYnbihAR0/p1vbdLEAvMW31qGX
bT93J3eJALZd9K0h65s/qa4lT1yvvaSKfJ59w0m7uUwAMRWmH9FrreJvRK0Q
wM6fj96hjUtvJzLUBHBA5lcp+lDhEN/URADuEn3k+yD6i03nx20FoPunl+xv
AtM9Pl17BZDn7ESeF6OeuZ+o2y+A5M7tZD+8anLBo9RZAFlFWeT1U5/wD+e5
CaDjD7sCnbX+6qHUY8R4z36sRucXZDlGnxRA1ZZQcj5v86t3nrkggDnrlrai
D9iWX1/mL4CN1Urk+9We9rLBtwECkK027EJLLnqesIIhgEtjl8n47j+X3v4p
mJjP4oN/yX4lnmJMDxPA52w22d8DUxKDtSIFUCF/R5hcf1WR6zixAtix+a0Y
umNtIMXwhgAmj8gsJN8vuJxZGZ4mgPa5a5eg14R5vO28I4DdT0rI9Wz3/OBp
yBFA0ss68n3Z+Z7dixLyBfBW/qgK+XxlbXLY+rUA0taUa6BFMldl/X0vAEej
t+R6jzo6seW/FgFsmJOzGq284mPTqxEBPPDcTp6XtuwpZspNCoCr2KyI9qQ/
Vj8rHAQdmoby6PvfbvqulAgCE/NV5Hg3Xb0owVUOAsPqLHJ+s1/GvCpRDYL2
4WP/cP5Vrfd9Z2kFgSjVdhx9RbRc3XJdEAwquQ+jj2j+bGIbBoFpatoftLbt
rMhikyDoqtcl4ztyRtlSxDwIYLPML3L/u2w6brE1CCy+WpP5EDx2ymLZBME7
w0YyX9nb3lGYrkHwJGADWc81dRtsGeeDoFZck+y3x5TO5QvRg+DCw49k/U94
3FGkBwUR/eI2uT5Cs39wp2OCYGFOSA96+Yj8b+q1IPjvpBC5vrrljG++SA0C
j4a+IfRDU3vHqcwgWKY2Ooreygl5SckNgnL6GDn/BZkZ554/DgKOzm8hjM+X
D8Vq/14EwU29+pnoEzL/wgPfBsEzij75/qhGUOZn9SkIvtMT5pHxnY50kf4a
BNVUA7Lfp/sesvraEQTxL/rI+Et2q67N6CfGX1ewCP2j5umUqUgwXHM8uBid
/3J3xSfZYBgNCyW/r2Qgn5+sHAwSoVLk9fi325OOrw6Gf6qzyH4zoHSfo28Q
DG87b5PPcwcvX/Ke3hQMAR9mkvVaLG657922YIg6vZwc/xr6AtPLdsGw/rfq
NM43brhexfVQMLySv0uuB6ETqRKrPYJBS79tDH3p9Y8ZqRHBcGydMpnvYdmV
4wpPg2FJ6N9+tG7RZl+nymCY96KbfD/hc8rt9+X2YHAwUybjmyXH9KqeCIag
oVZyP+wuvtE+XzIEFD/nk/ePac6pOOQSAhTPNrJfmk6+fnQ7OwQmo2mkN7uZ
s45PhkDWe2myXq3evLJVtw4F/+gbk2S9rT3xhpEcCmfGBsn8pcUt2tw4EAoq
idLk9cVP7SmIMA8DW61A0t5bQtdsjQiDvbP/kE6V7JVa2RUGOyKkyHw3NO0Y
njYLh85ns0n/D5pUOAw=
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
n4VbrpqkOzptf85sjAW+igjp/wHxAHkZ
     "]]}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"R,S,F\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{706.95703125, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 999.9999795918368}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.646399097394348*^9, 3.646399276565907*^9, {3.646399332611264*^9, 
   3.646399356054983*^9}, {3.646399407471919*^9, 3.6463994452861977`*^9}, {
   3.646399519007917*^9, 3.6463995347807207`*^9}, {3.646399933529674*^9, 
   3.646400035119308*^9}, {3.6464001337508717`*^9, 3.646400141511561*^9}, {
   3.646400205377198*^9, 3.6464002316434*^9}, 3.646400298727111*^9, {
   3.6464003302470913`*^9, 3.6464003379219007`*^9}, {3.6464003871530333`*^9, 
   3.6464004232952757`*^9}, {3.646400530477583*^9, 3.646400566546845*^9}, {
   3.646400626464662*^9, 3.6464006542402973`*^9}, 3.646401193146693*^9, {
   3.646413475754074*^9, 3.6464135093525963`*^9}, {3.6464148095266047`*^9, 
   3.646414837628758*^9}, {3.646673580305324*^9, 3.646673619411201*^9}, {
   3.646674394071185*^9, 3.646674431555167*^9}, {3.646675184780552*^9, 
   3.6466752284246187`*^9}, {3.646675323176228*^9, 3.646675353923946*^9}, {
   3.646675759387485*^9, 3.6466757873699923`*^9}, {3.646675862242443*^9, 
   3.646675868145846*^9}, {3.646679248804887*^9, 3.646679253454431*^9}, 
   3.6490028621621323`*^9, 3.649178061710877*^9, 3.649178115973216*^9, {
   3.662927436595387*^9, 3.662927466563596*^9}, 3.662927502630784*^9, 
   3.6629275806508408`*^9, 3.662928139082877*^9, {3.662928236842572*^9, 
   3.662928243944337*^9}, {3.662928282706328*^9, 3.662928308008235*^9}, 
   3.6629289846944017`*^9, {3.662929629538268*^9, 3.662929717700485*^9}, {
   3.6629297912129717`*^9, 3.662929794275972*^9}, 3.6629301578744164`*^9, 
   3.6629301984527893`*^9}]
}, Open  ]],

Cell["A version without the starving class...", "Text",
 CellChangeTimes->{{3.646674533267572*^9, 3.646674540318948*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MetapopDyn", "[", 
     RowBox[{"a_", ",", "\[Lambda]_", ",", "\[Mu]_", ",", "T_"}], "]"}], " ", 
    ":=", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"R", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
         RowBox[{
          RowBox[{"a", "*", 
           RowBox[{"R", "[", "t", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"R", "[", "t", "]"}]}], ")"}]}], " ", "-", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"Y", "[", "t", "]"}], ")"}], "*", 
           RowBox[{"R", "[", "t", "]"}]}]}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Y", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
         RowBox[{
          RowBox[{"\[Lambda]", "*", 
           RowBox[{"Y", "[", "t", "]"}], "*", 
           RowBox[{"R", "[", "t", "]"}]}], "-", " ", 
          RowBox[{"\[Mu]", "*", 
           RowBox[{"Y", "[", "t", "]"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"R", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"R", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"Y", "[", "0", "]"}], "\[Equal]", "0.05"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"R", ",", "Y"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "All"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "=", "1"}], ",", 
     RowBox[{"\[Lambda]", "=", "0.1"}], ",", 
     RowBox[{"\[Mu]", "=", "0.1"}], ",", 
     RowBox[{"T", "=", "2000"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Traj", "=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"R", "[", "t", "]"}], ",", 
         RowBox[{"X", "[", "t", "]"}], ",", 
         RowBox[{"Y", "[", "t", "]"}]}], "}"}], "/.", 
       RowBox[{"MetapopDyn", "[", 
        RowBox[{"a", ",", "\[Lambda]", ",", "\[Mu]", ",", "T"}], "]"}]}], " ",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{"Traj", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "All"}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", "\"\<R,S,F\>\""}], "}"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.646674194318223*^9, 3.646674272821683*^9}, {
  3.6466743393007393`*^9, 3.646674378832952*^9}, {3.64667443678474*^9, 
  3.646674515086887*^9}, {3.646679088830929*^9, 3.6466792131354027`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
5KznPX3635ZR7rr/B6dsSKw=
     "]]}, {}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
aX18a7vmzDJKXvf/AQso1VI=
     "]]}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"R,S,F\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{664.21875, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 1999.9999591836736`}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6466742791066933`*^9, {3.646674340063695*^9, 3.646674379446087*^9}, {
   3.6466744373169937`*^9, 3.6466745241944637`*^9}, {3.64667909038583*^9, 
   3.646679213771052*^9}}]
}, Closed]],

Cell["The below code solves for the steady state", "Text",
 CellChangeTimes->{{3.636819917046274*^9, 3.636819943537436*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sol", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"0", " ", "==", " ", 
        RowBox[{
         RowBox[{"\[Alpha]", "*", "R", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "R"}], ")"}]}], "-", 
         RowBox[{"R", "*", 
          RowBox[{"(", 
           RowBox[{"X", "+", "Y"}], ")"}], "*", "\[Eta]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"0", "\[Equal]", 
        RowBox[{
         RowBox[{"\[Eta]", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "R"}], ")"}], "*", "Y"}], "-", 
         RowBox[{"\[Eta]", "*", "R", "*", "X"}], "-", 
         RowBox[{"\[Mu]", "*", "X"}]}]}], ",", "\[NonBreakingSpace]", 
       "\[IndentingNewLine]", 
       RowBox[{"0", "\[Equal]", 
        RowBox[{
         RowBox[{"\[Lambda]", "*", "Y"}], "-", 
         RowBox[{"\[Eta]", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "R"}], ")"}], "*", "Y"}], "+", 
         RowBox[{"\[Eta]", "*", "R", "*", "X"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"R", ",", "X", ",", "Y"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.636733761306307*^9, 3.636733821361238*^9}, {
   3.6367338732188787`*^9, 3.6367338900380793`*^9}, {3.636733950263845*^9, 
   3.636733950848785*^9}, {3.636821460636732*^9, 3.636821506722666*^9}, {
   3.638802895588224*^9, 3.638802913904401*^9}, {3.639404459689352*^9, 
   3.6394044601112328`*^9}, {3.639751571463934*^9, 3.6397516353744717`*^9}, 
   3.63975174554202*^9, {3.6399159847423*^9, 3.639916071779233*^9}, {
   3.64633936483854*^9, 3.646339391852702*^9}, {3.646399544303945*^9, 
   3.646399547796715*^9}, {3.646679261252306*^9, 3.646679276354968*^9}, 
   3.650124557035658*^9, {3.662825121109581*^9, 3.6628251298114243`*^9}, {
   3.662929906307748*^9, 3.662929910240931*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "0"}], ",", 
     RowBox[{"X", "\[Rule]", "0"}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "1"}], ",", 
     RowBox[{"X", "\[Rule]", "0"}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Eta]", "-", "\[Lambda]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{"\[Eta]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}]}]]}], ",", 
     RowBox[{"X", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}], 
       RowBox[{
        SuperscriptBox["\[Eta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"]}]]}], ",", 
     RowBox[{"Y", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}], 
       RowBox[{
        SuperscriptBox["\[Eta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6367338562774057`*^9, 3.636733892835491*^9}, 
   3.636733953271134*^9, 3.6367342268947773`*^9, 3.6368028539326344`*^9, 
   3.636802918057365*^9, 3.63681183160989*^9, {3.636821468543605*^9, 
   3.636821514826768*^9}, 3.638037586765584*^9, 3.63863731133125*^9, 
   3.638640475795381*^9, 3.6387056476591587`*^9, 3.638802922695804*^9, 
   3.639404469794877*^9, 3.639751651214674*^9, 3.639751752013788*^9, 
   3.639753818415154*^9, 3.639916083995297*^9, 3.646339399287528*^9, 
   3.646399019070917*^9, 3.646399465618232*^9, 3.646399549397532*^9, 
   3.646591489201261*^9, {3.6466792659419737`*^9, 3.646679276734028*^9}, 
   3.649789057395759*^9, 3.649849743665978*^9, 3.650034871886655*^9, 
   3.650125498957747*^9, 3.662825133549872*^9, 3.6629251536300087`*^9, 
   3.6629299112489653`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InternalSol1", " ", "=", " ", 
   RowBox[{"Sol", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"InternalSol2", " ", "=", " ", 
     RowBox[{"Sol", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.636734010604021*^9, 3.636734036566966*^9}, {
  3.6367343790332203`*^9, 3.6367343796497917`*^9}, {3.6397516932049723`*^9, 
  3.63975171269001*^9}, {3.646339476460618*^9, 3.646339479500432*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "InternalSol1", "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
    RowBox[{"\[Mu]", "->", "0.2"}], ",", 
    RowBox[{"\[Eta]", "\[Rule]", "0.5"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.636734039540743*^9, 3.636734111419137*^9}, {
   3.636821532476531*^9, 3.636821534605826*^9}, {3.638802937516183*^9, 
   3.6388029446389923`*^9}, 3.639404479065029*^9, {3.6397516641921864`*^9, 
   3.63975168223667*^9}, {3.639751719417858*^9, 3.639751719980227*^9}, {
   3.6399160959739017`*^9, 3.639916124787385*^9}, {3.6463394835723267`*^9, 
   3.646339491410533*^9}, {3.646399476469509*^9, 3.6463994824753513`*^9}, {
   3.646399553709423*^9, 3.646399555895651*^9}, {3.6497890642685843`*^9, 
   3.649789064819036*^9}, {3.662825151287896*^9, 3.662825155229292*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"R", "\[Rule]", "0.5333333333333333`"}], ",", 
    RowBox[{"X", "\[Rule]", "0.07777777777777778`"}], ",", 
    RowBox[{"Y", "\[Rule]", "0.15555555555555553`"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6367340942464657`*^9, 3.6367341118464622`*^9}, 
   3.636734230112893*^9, 3.636802854162773*^9, 3.636802925190996*^9, 
   3.6368118495181103`*^9, 3.636821536360592*^9, 3.638037596377495*^9, 
   3.638637315679579*^9, 3.638640475900714*^9, 3.6387056477640343`*^9, 
   3.638802946313595*^9, 3.639404480350066*^9, {3.639751674958169*^9, 
   3.639751720872808*^9}, 3.639751779895405*^9, 3.639753818579537*^9, 
   3.639916128895604*^9, 3.646339492406941*^9, {3.6463994730716743`*^9, 
   3.646399482880644*^9}, {3.646399556551483*^9, 3.646399564778727*^9}, 
   3.646591489356626*^9, 3.6497890690336437`*^9, 3.649849743794527*^9, 
   3.6500348720858994`*^9, 3.650125499149332*^9, 3.662825155837185*^9, 
   3.662925158002781*^9}]
}, Open  ]],

Cell["\<\
This means only InternalSol2 is an INTERNAL, POSITIVE SOLUTION\
\>", "Text",
 CellChangeTimes->{{3.6367341216915073`*^9, 3.63673413469573*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntPosSol", " ", "=", " ", "InternalSol1"}], ";"}]], "Input",
 CellChangeTimes->{{3.636734140626615*^9, 3.6367341644216967`*^9}, {
   3.636734214526906*^9, 3.63673421628828*^9}, 3.63673438707572*^9, {
   3.636821601636962*^9, 3.636821603414339*^9}, {3.6399161377925653`*^9, 
   3.639916138244009*^9}, {3.646339507845647*^9, 3.646339508059929*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Rstar", " ", "=", " ", 
  RowBox[{
   RowBox[{"IntPosSol", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Xstar", " ", "=", " ", 
  RowBox[{
   RowBox[{"IntPosSol", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Ystar", " ", "=", " ", 
  RowBox[{
   RowBox[{"IntPosSol", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.636734243619029*^9, 3.63673430689607*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Eta]", "-", "\[Lambda]"}], ")"}], " ", "\[Mu]"}], 
  RowBox[{"\[Eta]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.636734281637939*^9, 3.63673430732928*^9}, 
   3.636802854231922*^9, 3.636802930763019*^9, 3.636811860836183*^9, 
   3.6368216155344687`*^9, 3.6368289138881903`*^9, 3.638037605140617*^9, 
   3.6386373157441387`*^9, 3.638640475938632*^9, 3.638705647808175*^9, 
   3.6388029559596043`*^9, 3.6394045010089903`*^9, 3.639751795452619*^9, 
   3.639753818623708*^9, 3.63991614491415*^9, 3.646339512999179*^9, 
   3.646399591554145*^9, 3.646591489414483*^9, 3.649789074142665*^9, 
   3.649849743864037*^9, 3.650034872143837*^9, 3.6501254992258797`*^9, 
   3.662825168410521*^9, 3.662925158054289*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox["\[Lambda]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}], 
  RowBox[{"\[Eta]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.636734281637939*^9, 3.63673430732928*^9}, 
   3.636802854231922*^9, 3.636802930763019*^9, 3.636811860836183*^9, 
   3.6368216155344687`*^9, 3.6368289138881903`*^9, 3.638037605140617*^9, 
   3.6386373157441387`*^9, 3.638640475938632*^9, 3.638705647808175*^9, 
   3.6388029559596043`*^9, 3.6394045010089903`*^9, 3.639751795452619*^9, 
   3.639753818623708*^9, 3.63991614491415*^9, 3.646339512999179*^9, 
   3.646399591554145*^9, 3.646591489414483*^9, 3.649789074142665*^9, 
   3.649849743864037*^9, 3.650034872143837*^9, 3.6501254992258797`*^9, 
   3.662825168410521*^9, 3.66292515805998*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}], 
  RowBox[{"\[Eta]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.636734281637939*^9, 3.63673430732928*^9}, 
   3.636802854231922*^9, 3.636802930763019*^9, 3.636811860836183*^9, 
   3.6368216155344687`*^9, 3.6368289138881903`*^9, 3.638037605140617*^9, 
   3.6386373157441387`*^9, 3.638640475938632*^9, 3.638705647808175*^9, 
   3.6388029559596043`*^9, 3.6394045010089903`*^9, 3.639751795452619*^9, 
   3.639753818623708*^9, 3.63991614491415*^9, 3.646339512999179*^9, 
   3.646399591554145*^9, 3.646591489414483*^9, 3.649789074142665*^9, 
   3.649849743864037*^9, 3.650034872143837*^9, 3.6501254992258797`*^9, 
   3.662825168410521*^9, 3.662925158063833*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alpha", "=", "0.5"}], ",", 
      RowBox[{"lambda", "=", "0.2"}], ",", 
      RowBox[{"mu", "=", "0.2"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Rstarspec", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"IntPosSol", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "mu"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Xstarspec", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"IntPosSol", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "mu"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ystarspec", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"IntPosSol", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "mu"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FigFP", "=", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Rstarspec", ",", "Xstarspec", ",", "Ystarspec", ",", 
             RowBox[{"Xstarspec", "+", "Ystarspec"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Eta]", ",", "lambda", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Metabolic gain/loss \[Eta]\>\"", ",", 
              "\"\<Steady State\>\""}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(R\), \(*\)]\)\>\"", ",", 
              "\"\<\!\(\*SuperscriptBox[\(S\), \(*\)]\)\>\"", ",", 
              "\"\<\!\(\*SuperscriptBox[\(F\), \(*\)]\)\>\"", ",", 
              "\"\<\!\(\*SuperscriptBox[\(S\), \(*\)]\)+\!\(\*SuperscriptBox[\
\(F\), \(*\)]\)\>\""}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Dotted", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"lambda", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"lambda", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"\"\<Transcritial Bifurcation\>\"", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"lambda", "-", "0.02"}], ")"}], ",", "0.5"}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"90", "Degree"}]}], "]"}], "]"}]}], "\[IndentingNewLine]",
         "}"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.636828847643564*^9, 3.636828890382423*^9}, {
   3.6368289268709183`*^9, 3.636828927925363*^9}, {3.636829012263837*^9, 
   3.63682919871548*^9}, 3.6368292951195927`*^9, 3.636829408492687*^9, {
   3.636829466693036*^9, 3.636829490835649*^9}, {3.636829527412133*^9, 
   3.6368295651378517`*^9}, {3.636829721658711*^9, 3.636829747275872*^9}, {
   3.636829785769545*^9, 3.6368298188516083`*^9}, {3.6368298613805933`*^9, 
   3.636829908707963*^9}, {3.638037552949978*^9, 3.638037557241889*^9}, {
   3.638037674373057*^9, 3.6380376751294727`*^9}, {3.638037760460108*^9, 
   3.638037762100814*^9}, {3.638705651353438*^9, 3.638705664494424*^9}, {
   3.638708839338275*^9, 3.638708846561138*^9}, {3.6387996604295607`*^9, 
   3.638799687647542*^9}, {3.638802961133232*^9, 3.638802989175686*^9}, {
   3.6388057445606728`*^9, 3.638805757735209*^9}, {3.638805795345224*^9, 
   3.638805822945912*^9}, {3.639404510474008*^9, 3.6394045150562897`*^9}, {
   3.639751802166316*^9, 3.639751902022428*^9}, {3.639753826942215*^9, 
   3.6397538521396646`*^9}, {3.639916174262718*^9, 3.639916240307322*^9}, {
   3.646339519093129*^9, 3.6463395718605957`*^9}, {3.646339619190909*^9, 
   3.6463396500440702`*^9}, {3.646340092812203*^9, 3.646340117377707*^9}, {
   3.6463401638182077`*^9, 3.64634019379604*^9}, {3.646398387466496*^9, 
   3.64639843949728*^9}, {3.646399596759367*^9, 3.646399603015993*^9}, {
   3.646407678126123*^9, 3.646407693507011*^9}, {3.6465671320911016`*^9, 
   3.646567138928913*^9}, 3.6465914985470057`*^9, {3.646591548398472*^9, 
   3.646591565692947*^9}, {3.646592739360794*^9, 3.646592739459112*^9}, {
   3.649789088176059*^9, 3.6497894390904016`*^9}, {3.64978950630929*^9, 
   3.649789508197551*^9}, {3.649849590920107*^9, 3.6498496237786903`*^9}, {
   3.649849686041395*^9, 3.6498497577936287`*^9}, {3.6498519728974943`*^9, 
   3.6498519749520693`*^9}, {3.64985201091964*^9, 3.649852146734466*^9}, {
   3.662825175881144*^9, 3.662825238931169*^9}, 3.6629251461706133`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVzns0lAkABfBZm8dMa6iUpLeEpo49pbbO4pYhZFGoZHszJWsXTQ9lpqOZ
Le328mr1bajoIY9tJ4XSY1LRII/BzHxomjDMYHyZdVDtZGf/uOee3zn3j7tg
b1wIx4RGowUa838L3e48JggJPjJzSsVajmfxwhF9/nUJ+kq8nNKmeUNmDZe/
7kiQaT6ZbW8ZBmdd66WqhxJkmXwy4dOi0HCTFjdAShCnXOWU2sfFTNvwBR6z
ao29svFEmRAlH81Oq/6shTZvbjVrawbkT6OCnbLrcDcny1efl4eV5Uzdv5I3
eL1nVrVuQgT9dg9mh7QR3uevHdxi8RCJgbteiTVN2Fl5r3Se/TPwHGzpFYZm
NHFsib1Hq+C6Me3CCloL3HZcy27qeglNqcAudGYrCuao3aXf16Aqco50C6sN
LzfsfhQbKEFAzPF6JUuG3eM/pLMs60DeDqpneMnxjDW5YXpNPWzd1ZaVPgoU
XfOcr0MDjsx25Ad7k3h+6Anvc0Yj2ld0DqeEt+P1E4HTCLcJuuubC7wjOnDK
5pUr16wZpr7ro24mdGLlIl7KGaIZWK0K7Be+xQ3azcbweVI4J7sfKxUqwbe4
9bg4Q4oZE1aF84l32PHigF0KvQUR/SFMepAKPZ75VkfiW1Acv602tF2F0eyS
XlOyBcwctxzrqPd44V6yxGdNK16PfEi92PMehtDK1fLzrTDVRKeo4rrgQp+T
FNbTCsKsKvef4S4ICjQVl79tg2cdVZ+Y0I0kf7dPJ462gcMiDY2fuyFY1smI
Ebehpyw/WMvrQVbLA6mBJkPvW5cbrRZq1OmSbHhsGcYLf7Vanq6Gj62Wyzsp
w9588ZVNU3uhH5u6jaiQIei7iiXsnF4MS4/rrwzLkD6a2j46tw+m44PcA4vk
6PvR8/rs3D5kXExdZRcmx9Ptt2NsnDUY0CWPXz0lh+7McFhDgQbz6EvvvRfJ
kbtxbF2Emxb9t+Ls376T4zZbGVxQpsVvI5ZbGHQFnncSh6JX9cMxwSm5w1WB
HVOmZH8S94PD3rgiNFyBTQkHeoK8BuBf6Fd3g6dATSzf9XDDANgzrNsFeQoE
MfelWYYPgp1UMsiuVmBZh6tNtGIQWW86ymN6FbjAfkBkRuowdDHdnGFBwldu
v1ao1uHlknj30MUkrKdsNXRHDaF4v1mRBZvE9t7AJzOoIUzQCZrDHhK0Psfc
yfEUoh2U/gE8EhL8HhdwkILH3ZCMKqPTLw+tPXuIAkdbXreGT2LRhvJuxjEK
sxiRdOcTJPxL/FwYAgrKpXkVXycb99yf7ltkUkj+Rq8tF5JwoIlqTSsonH40
VTTtLInB8OnZPo8oaMuvvjtjdJno2M+nHlOwSkw1GIz2i/SyNn1OgbWryFxz
jkRsdcvmSbUUzPe5bK68QOL+uVGVSSeF5V+2Knamk+CrI+55KSmICqu/SI1e
7/lMKFBRyJ7fbOObQUJBpSw2UVMgfWusXDNJGELsYr8aorB0P7HuyyUS1UV8
j3UfKDj5+6oT/iCROqmLeVJP4TBRnKg2emFZoYg2RoHhU/RLfRaJAaaVcO1H
Ct38gGZcNv7Zzw1L/kxhjepvh1Kj+WK5o9hAYZ9CyVlMGP/YuY9NTFBob1Zk
EUb/Bxy1dHE=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVz3k41AkcBvBhjQ1rDLUk2u0QybYqk9rC64p25YhEji4qqyl0eMrxVLSp
pZJOLZ4HtTHR89gpdGJ+c5hxjMpN0xTDGMZPp9Ds7G//+D7v83me94/3u3B3
QvAeXRqN5k/d/5nJKn+Sny+GH8xVWq0UFYs+vi8tFmOLY7XVzLQUnUzY3ysX
Iy1l+6GpT1IsVbdf5T0UQ0PXZGhHpWi9TUsY7RHDO6/q9YpuKeZahC90nSdB
qQOhZ1slReWU/hn5TQlUhtJinz1SdD2LDbQraILNmTN9bR2tWF3DUH8Vt0DE
dfHVrW/B+yhXRt8LKcLG7678JGvGMf8dgnplG66UnTMosG5G2mILg1rNc+TY
Ptpmt7sJjkGXLjjRXuK+sqvbTySBkpthGTK3HVdrhYlGKyXgxcx/sdWhA0Hq
fc9vVVB/xqc0yxw6oWxgWz1wEaPnTkCzoWcXmKvTc9a1NsLCRWH8eEM3OsIm
avQSG5FsvSQ90LsHz0vaFuhYNaLXqf9dVngv5he7jdGFIqiLQ8u8I/rw9Oj8
OGGaCHRfn9jbSf1QqD2erHcSAWvl/qrMV6g8sfxGyIQQS0+6HOdmysCbqSi2
rxbCXGvCWZD/GsE/+B12SRUiQhXMMAiQ48LOn7/wfYWoSNwmCemV4/TK8u/S
ZwvBKGQVMmPfoGhXeXz0gACNHydyLw6+gc7Wkpg5DwWgK+Oy5AlvwU5N4nWc
FyBfn1f04d1b1N3NLuXuE8CtiWw+ljQAzz5Fhru3AHscejTSmQG4j1yalvwo
wGB1aeBI2iBY5rfNT2n5GHplf6t9lgLzDHifPGR8fOGcNlmVp0D0ESOhRx0f
u0vr/9psNoRvTyeHcEv5CFhTu8yrcAhnr/H0V2Xxkfc5t/fzD8PQZBr4NB3g
YzjSrdi6aBjOtTWxH0L5eBZ1J37OUiUMz9V9s8KVD/XZd1tay5RInBmxNbHj
oyho0iOCNYLsnzYeMmXyccdLFlhWPYLH9Kn2lBkCDf35R+KcVTjoOwYzJYFo
U9OC6XoV/GVheztfEtic9PtggOco+jiRNysbCIjY6Y5HW0ch+ziZ9+wegQDG
3kvG4WPY4VluICsgsLzPcU5c9xhYlma3JDkELng9yL8So4ZBrfPX6VQCvl1W
7pkKNQpVol2dbAJM0zDNQOw4HJrTOKnbCUQN+T81J8dBS+WeOBhIgDa8pMgo
kcSmcWZkrwcBMf5M8DtEYmfZ1uoiynk3xt2zj5DwN7KZF0PZ5reaAcPjJD6k
BMyMuhP4tXKjvWEGibyRe4v/BdU/vP/+rCsk6qb0jWzcCCymVUnotSSeliTb
Ja8jMBb+fcGGRySMbVbkrqdcXXX8wB9PSEwRa3R0KG+M8WTSG0jsD1r2NfsX
Amzhy1A9CQnNpv2hJWsJ3M/5LNftJzFEa7/c5kwgXRHxj6eMRBmn4OQ1yj5u
dZkZchJVCdePRlHuJrNsdRUkZkdZH1OuJqAJtmTrjJOI3+T0mkZZeDfd1WOC
BDsyyljEIpCr95Zx6j2JDdxyr/OUF1VzqmiTJFKiOY2WlEcZJpnuUyQYHhEW
cidqz77DW07OkBi8aHfwb8rp9V1L6jUkWi4zW9iUfSxdJrVaEmbXZ7OcKP8H
xvtvhw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVz3k41AkcBvBhjQ1rDLUk2u0QybYqk9rC64p25YhEji4qqyl0eMrxVLSp
pZJOLZ4HtTHR89gpdGJ+c5hxjMpN0xTDGMZPp9Ds7G//+D7v83me94/3u3B3
QvAeXRqN5k/d/5nJKn+Sny+GH8xVWq0UFYs+vi8tFmOLY7XVzLQUnUzY3ysX
Iy1l+6GpT1IsVbdf5T0UQ0PXZGhHpWi9TUsY7RHDO6/q9YpuKeZahC90nSdB
qQOhZ1slReWU/hn5TQlUhtJinz1SdD2LDbQraILNmTN9bR2tWF3DUH8Vt0DE
dfHVrW/B+yhXRt8LKcLG7678JGvGMf8dgnplG66UnTMosG5G2mILg1rNc+TY
Ptpmt7sJjkGXLjjRXuK+sqvbTySBkpthGTK3HVdrhYlGKyXgxcx/sdWhA0Hq
fc9vVVB/xqc0yxw6oWxgWz1wEaPnTkCzoWcXmKvTc9a1NsLCRWH8eEM3OsIm
avQSG5FsvSQ90LsHz0vaFuhYNaLXqf9dVngv5he7jdGFIqiLQ8u8I/rw9Oj8
OGGaCHRfn9jbSf1QqD2erHcSAWvl/qrMV6g8sfxGyIQQS0+6HOdmysCbqSi2
rxbCXGvCWZD/GsE/+B12SRUiQhXMMAiQ48LOn7/wfYWoSNwmCemV4/TK8u/S
ZwvBKGQVMmPfoGhXeXz0gACNHydyLw6+gc7Wkpg5DwWgK+Oy5AlvwU5N4nWc
FyBfn1f04d1b1N3NLuXuE8CtiWw+ljQAzz5Fhru3AHscejTSmQG4j1yalvwo
wGB1aeBI2iBY5rfNT2n5GHplf6t9lgLzDHifPGR8fOGcNlmVp0D0ESOhRx0f
u0vr/9psNoRvTyeHcEv5CFhTu8yrcAhnr/H0V2Xxkfc5t/fzD8PQZBr4NB3g
YzjSrdi6aBjOtTWxH0L5eBZ1J37OUiUMz9V9s8KVD/XZd1tay5RInBmxNbHj
oyho0iOCNYLsnzYeMmXyccdLFlhWPYLH9Kn2lBkCDf35R+KcVTjoOwYzJYFo
U9OC6XoV/GVheztfEtic9PtggOco+jiRNysbCIjY6Y5HW0ch+ziZ9+wegQDG
3kvG4WPY4VluICsgsLzPcU5c9xhYlma3JDkELng9yL8So4ZBrfPX6VQCvl1W
7pkKNQpVol2dbAJM0zDNQOw4HJrTOKnbCUQN+T81J8dBS+WeOBhIgDa8pMgo
kcSmcWZkrwcBMf5M8DtEYmfZ1uoiynk3xt2zj5DwN7KZF0PZ5reaAcPjJD6k
BMyMuhP4tXKjvWEGibyRe4v/BdU/vP/+rCsk6qb0jWzcCCymVUnotSSeliTb
Ja8jMBb+fcGGRySMbVbkrqdcXXX8wB9PSEwRa3R0KG+M8WTSG0jsD1r2NfsX
Amzhy1A9CQnNpv2hJWsJ3M/5LNftJzFEa7/c5kwgXRHxj6eMRBmn4OQ1yj5u
dZkZchJVCdePRlHuJrNsdRUkZkdZH1OuJqAJtmTrjJOI3+T0mkZZeDfd1WOC
BDsyyljEIpCr95Zx6j2JDdxyr/OUF1VzqmiTJFKiOY2WlEcZJpnuUyQYHhEW
cidqz77DW07OkBi8aHfwb8rp9V1L6jUkWi4zW9iUfSxdJrVaEmbXZ7OcKP8H
xvtvhw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV02s0lAkcBvBhsWGNoZZEu11Esq2K1BYeg2hXLpHIpRuV1RS6OIU5lWlT
SyVdtTgHtSE6x06hK6ZdGknqfefCaGaKYQzj1VVMs/bdD//znN85z4fny3/u
9tSIHYYMBiOEvv+T51H1oKhIiGDYaKamFKiZ9+FdRZkQG9zq7XWTCohZcLlV
JUR25uZ9Ex8VWKglLwruCqE31udMDSvQeZ2ROtwtREBhnWKJVIGZtjFzvWe1
o8L1sZFTnQK1EyYnlFfboTF7Xha4QwHJo6Qw5+KncDxxQtYlkmN5A1P7RfgM
bXyvIMPmV3gX782UvXyO6NGbSz/Ke3EoZMs/zeouXKg8ZVrs0Ivs+bamjfoX
yHe6t8l5uwxu4efOuDMI3FZLpMFtPVDzc+wiZ5K42NiaZr60B4LE2S83uooQ
rt314lpNN4JTMjvkrmKoWzj2d7y60X0jtMPMTwLWcm7+qk4pbL1UFvfXSCGK
HmswSpMiw2EBNyygGy/Ku+YY2EvR4977NjemB7PLfEaMWyXQlkVVBsTK8PDg
7OTWbAmMgwKTrqf3QqVlP1jtLgFWKkM0vFeoPbL4SuSYGAuPeh3m8+QQ6GrK
XOrFsJmyrJ5TpEDEd8H7vbLEiNVEME1DlTiz9cfPfweJUZO2qT2yR4njS6u+
4U4Xg1niUcJKeo3SbVUpCX0iPPkwVnC2/zUMNpYnzrgrgrE6OVeZ+gacrHSB
6LQIRSaC0vdv36DpZl4Ff5cIPk+pjkPpffCTqXJ8A0TY4dqtf67rg+/Qucn2
70Xor68IG8ruh4fNdZtjUyQGXrlcI6epMMtU8JEtJ/G5+rjlskIVEg6Yt7Kb
SGyvaP5jvfUAvj6eEcmvIBG6onGRf8kATl4SmCzLJVH4qaDn03eD0PNMA5/u
ITEY51PmUDoIz8aGpPdRJB7F30iZsVANs1NNXy3xJqE9+XZDZ6UaabohJ0tn
EqXh4+xYjyHk/bB2nxWLxA1/eVhl/RDuG0+QmToCLb1FB5I9NdgbNAJrNYEE
K6viyWYNQuTRO8UEgfXpv/aH+g1DVh13tbaFQBuH63awcxjyD+OFj24RCGXu
PGcRM4ItflWm8mICi2VuM5KlI/Cws77Wnk/gjP+doguJWpg2en6ZzCIQJLH3
5am0KNG0bRNzCLCsovV9SaNw7ciuztpMIH4g5KENNQpGFv/I3jACjMEFpeZp
FNaNsuJ62ASE+D01eB+FrZUb60tpF14Z9c07QCHE3HFWIm3HXxr6zA5TeJ8Z
qhv2JfBz7VoXsxwKhUO35v8Lur9/9+1pFyg0TZiYO/oQmM+oazdupPCwPMM5
YxWBkZhvi9fco2DhuKRgNe36usN7fntAYeLxCgMD2msT/VjGLRR2hy/6kvcT
AU4rEWXUTkG/bndU+Ur6j/I/KQ17KQwwyPNdngS4qti//OQUKquLj16iHejT
xMtRUqhLvXwwnraUynUyVFGYHu9wSL2cgD7CjmMwSiFlnbuCQbv1JtebPUaB
Exdv0eZBoMDoDfPYOwpr+FX+p2nPq6+uY4xTyEyofmJHe5hpyfOdoMBkx9oq
3ek9u/ZvOKqj0H/Wee+ftLnNkgXNegrPzrOecWgH2nmNT01RsL483cOd9n8/
T3RX
         "]]}}}, {
      Dashing[{0, Small}], 
      LineBox[{{0.2, 0}, {0.2, 1}}]}, 
     GeometricTransformationBox[
      InsetBox[
       FormBox["\"Transcritial Bifurcation\"", TraditionalForm], {
       0.18000000000000002`, 0.5}], {{{0, -1}, {1, 0}}, Center}]}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Steady State\"", TraditionalForm], None}, {
        FormBox["\"Metabolic gain/loss \[Eta]\"", TraditionalForm], None}}, 
     FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(R\\), \\(*\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(S\\), \\(*\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(F\\), \\(*\\)]\\)\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(S\\), \
\\(*\\)]\\)+\\!\\(\\*SuperscriptBox[\\(F\\), \\(*\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.636828891978991*^9, 3.636828929172289*^9, 3.636829018882822*^9, 
   3.6368290688651323`*^9, 3.636829102090407*^9, 3.6368292001679487`*^9, 
   3.6368292961357203`*^9, 3.6368294118337*^9, {3.636829467774069*^9, 
   3.636829491963479*^9}, {3.6368295428464947`*^9, 3.636829567510602*^9}, {
   3.636829742014682*^9, 3.636829748105545*^9}, {3.636829793166854*^9, 
   3.636829805372933*^9}, 3.636829846593967*^9, {3.636829890968876*^9, 
   3.636829909911626*^9}, 3.638037612294804*^9, 3.638037675968644*^9, 
   3.638037762712059*^9, 3.638637315930397*^9, 3.638640476132234*^9, {
   3.638705648048143*^9, 3.638705664957114*^9}, {3.6387088434700203`*^9, 
   3.638708847212545*^9}, {3.638799673562715*^9, 3.63879968853969*^9}, {
   3.63880297202958*^9, 3.638802989701627*^9}, 3.638805758758151*^9, {
   3.638805801179553*^9, 3.638805823709331*^9}, 3.639404522326849*^9, {
   3.6397518333074627`*^9, 3.639751843872826*^9}, {3.6397518752772818`*^9, 
   3.639751902596304*^9}, 3.639753853117202*^9, {3.639916220390346*^9, 
   3.639916241480801*^9}, {3.646339526144821*^9, 3.6463395727891607`*^9}, {
   3.646339623724451*^9, 3.646339650600472*^9}, {3.646340099845911*^9, 
   3.646340118048833*^9}, {3.646340168912354*^9, 3.6463401947036543`*^9}, {
   3.646398390307703*^9, 3.64639844082697*^9}, 3.6463996060719624`*^9, 
   3.646407702248352*^9, {3.6465914897003508`*^9, 3.646591499068818*^9}, {
   3.646591549163529*^9, 3.6465915662381268`*^9}, 3.6465927417411118`*^9, 
   3.649789083477162*^9, {3.64978912068495*^9, 3.64978916160948*^9}, {
   3.649789231998828*^9, 3.6497892406335583`*^9}, {3.6497892746928368`*^9, 
   3.649789319782489*^9}, {3.649789382628107*^9, 3.649789410628214*^9}, 
   3.64978950892266*^9, {3.649849716077764*^9, 3.649849758432613*^9}, {
   3.649852059474835*^9, 3.649852147354486*^9}, 3.650034880203405*^9, 
   3.650125499344994*^9, 3.6628252602965*^9, {3.662925146840361*^9, 
   3.662925158135762*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/Manuscript/fig_FP_eta.pdf\>\"", ",", "FigFP"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.649789511048077*^9, 3.649789512651924*^9}, {
  3.649789543514022*^9, 3.6497895572262983`*^9}, {3.662825273822133*^9, 
  3.662825274383848*^9}, {3.6628253123221188`*^9, 3.662825314828981*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/Manuscript/fig_FP_eta.pdf\"\>"], "Output",
 CellChangeTimes->{3.64978956003055*^9, 3.64984977264023*^9, 
  3.6498527722722683`*^9, 3.65003488098094*^9, 3.6501254997070217`*^9, 
  3.662825275364891*^9, 3.662825316598688*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Rstarspec", ",", "Xstarspec", ",", "Ystarspec"}], "}"}], ",", 
   RowBox[{"\[Eta]", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.636829427804101*^9, 3.6368294439324083`*^9}, 
   3.639916263202137*^9, 3.662825342641507*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6666666666666666`", ",", "0.05555555555555555`", ",", 
   "0.1111111111111111`"}], "}"}]], "Output",
 CellChangeTimes->{3.6368294453349113`*^9, 3.6386404762560863`*^9, 
  3.6387071307828007`*^9, 3.6394045323180933`*^9, 3.6397538619342613`*^9, 
  3.639916264683671*^9, 3.650034881023757*^9, 3.650125499768462*^9, 
  3.662825344257324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dR", "=", "   ", 
   RowBox[{
    RowBox[{"\[Alpha]", "*", "R", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}]}], "-", 
    RowBox[{"R", "*", 
     RowBox[{"(", 
      RowBox[{"X", "+", "Y"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dX", " ", "=", 
   RowBox[{
    RowBox[{"\[Eta]", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}], "*", "Y"}], "-", 
    RowBox[{"\[Eta]", "*", "R", "*", "X"}], "-", 
    RowBox[{"\[Mu]", "*", "X"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dY", " ", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", "*", "Y"}], "-", 
    RowBox[{"\[Eta]", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}], "*", "Y"}], "+", 
    RowBox[{"\[Eta]", "*", "R", "*", "X"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacSpec", " ", "=", " ", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dR", ",", "R"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dR", ",", "X"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dR", ",", "Y"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dX", ",", "R"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dX", ",", "X"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dX", ",", "Y"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dY", ",", "R"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dY", ",", "X"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dY", ",", "Y"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.6367345537246017`*^9, 3.636734687079061*^9}, {
   3.636821627840353*^9, 3.636821652950233*^9}, {3.63682186789629*^9, 
   3.6368218773918257`*^9}, {3.638803003472077*^9, 3.6388030173960943`*^9}, 
   3.638806884048028*^9, {3.639404444029475*^9, 3.639404444472543*^9}, {
   3.639751926584313*^9, 3.6397519519424887`*^9}, {3.639916282231394*^9, 
   3.639916301631213*^9}, {3.646340205798622*^9, 3.646340216096526*^9}, {
   3.64639961265875*^9, 3.64639961546839*^9}, {3.662825335678652*^9, 
   3.6628253388282022`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "X"}], "-", "Y", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "R"}], ")"}], " ", "\[Alpha]"}], "-", 
      RowBox[{"R", " ", "\[Alpha]"}]}], ",", 
     RowBox[{"-", "R"}], ",", 
     RowBox[{"-", "R"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "X"}], " ", "\[Eta]"}], "-", 
      RowBox[{"Y", " ", "\[Eta]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "R"}], " ", "\[Eta]"}], "-", "\[Mu]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "R"}], ")"}], " ", "\[Eta]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"X", " ", "\[Eta]"}], "+", 
      RowBox[{"Y", " ", "\[Eta]"}]}], ",", 
     RowBox[{"R", " ", "\[Eta]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", "R"}], ")"}]}], " ", "\[Eta]"}], "+", 
      "\[Lambda]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.638803018810583*^9, 3.638806888503537*^9, 3.639404437484146*^9, 
   3.639404546547593*^9, 3.6397519616799917`*^9, 3.6397538621132708`*^9, 
   3.639916304123005*^9, 3.646340220370294*^9, 3.6463996165093718`*^9, 
   3.649851625764737*^9, {3.650034855890368*^9, 3.650034881075095*^9}, 
   3.650125499818701*^9, 3.662825361738364*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacSpec", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.636821661986713*^9, 3.636821666550809*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "X"}], "-", "Y", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "R"}], ")"}], " ", "\[Alpha]"}], "-", 
       RowBox[{"R", " ", "\[Alpha]"}]}], 
      RowBox[{"-", "R"}], 
      RowBox[{"-", "R"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "X"}], " ", "\[Eta]"}], "-", 
       RowBox[{"Y", " ", "\[Eta]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "R"}], " ", "\[Eta]"}], "-", "\[Mu]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "R"}], ")"}], " ", "\[Eta]"}]},
     {
      RowBox[{
       RowBox[{"X", " ", "\[Eta]"}], "+", 
       RowBox[{"Y", " ", "\[Eta]"}]}], 
      RowBox[{"R", " ", "\[Eta]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", "R"}], ")"}]}], " ", "\[Eta]"}], "+", 
       "\[Lambda]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.636821667145422*^9, 3.636821881986177*^9, {3.638637296530751*^9, 
   3.63863732244209*^9}, 3.6386404762971478`*^9, 3.638707131027398*^9, {
   3.6388030114900637`*^9, 3.638803022643118*^9}, 3.638806898000214*^9, 
   3.639404437600232*^9, 3.639404550950568*^9, 3.639751964420309*^9, 
   3.639753862157166*^9, 3.639916307617361*^9, 3.646340223619935*^9, 
   3.6463996212174597`*^9, 3.649851625900284*^9, {3.6500348560670843`*^9, 
   3.650034881125455*^9}, 3.650125499868082*^9, 3.6628253667720337`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"JacSpecSol", " ", "=", " ", 
   RowBox[{"JacSpec", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", "\[Rule]", "Rstar"}], ",", 
      RowBox[{"X", "\[Rule]", "Xstar"}], ",", 
      RowBox[{"Y", "\[Rule]", "Ystar"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.649851577822241*^9, 3.649851620337479*^9}}],

Cell[CellGroupData[{

Cell[BoxData["JacSpecSol"], "Input",
 CellChangeTimes->{{3.649851867892756*^9, 3.649851871071999*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", 
         SuperscriptBox["\[Lambda]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}], 
        RowBox[{"\[Eta]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"]}]]}], "-", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}], 
       RowBox[{"\[Eta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Eta]", "-", "\[Lambda]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{"\[Eta]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}]}]], "+", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Eta]", "-", "\[Lambda]"}], ")"}], " ", "\[Mu]"}], 
          RowBox[{"\[Eta]", " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}]}]]}], ")"}]}]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Eta]", "-", "\[Lambda]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{"\[Eta]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Eta]", "-", "\[Lambda]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{"\[Eta]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", 
         SuperscriptBox["\[Lambda]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"]]}], "-", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"]]}], ",", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Eta]", "-", "\[Lambda]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{"\[Lambda]", "+", "\[Mu]"}]]}], ",", 
     RowBox[{"\[Eta]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Eta]", "-", "\[Lambda]"}], ")"}], " ", "\[Mu]"}], 
         RowBox[{"\[Eta]", " ", 
          RowBox[{"(", 
           RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}]}]]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}], "2"]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Eta]", "-", "\[Lambda]"}], ")"}], " ", "\[Mu]"}], 
      RowBox[{"\[Lambda]", "+", "\[Mu]"}]], ",", 
     RowBox[{"\[Lambda]", "-", 
      RowBox[{"\[Eta]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Eta]", "-", "\[Lambda]"}], ")"}], " ", "\[Mu]"}], 
          RowBox[{"\[Eta]", " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]", "+", "\[Mu]"}], ")"}]}]]}], ")"}]}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.649851871548547*^9, {3.650034856150935*^9, 3.650034881179166*^9}, 
   3.650125499940329*^9, 3.662825373839641*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"R", ",", "X", ",", "Y"}], "}"}], "/.", "Sol"}], ")"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", 
    RowBox[{"\[Lambda]", "\[Rule]", "lambda"}], ",", 
    RowBox[{"\[Mu]", "\[Rule]", "mu"}], ",", 
    RowBox[{"\[Eta]", "\[Rule]", "eta"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6498522805727053`*^9, 3.6498522890383053`*^9}, {
  3.66282538418333*^9, 3.662825387110763*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"eta", "-", "lambda"}], ")"}], " ", "mu"}], 
      RowBox[{"eta", " ", 
       RowBox[{"(", 
        RowBox[{"lambda", "+", "mu"}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"alpha", " ", 
       SuperscriptBox["lambda", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"eta", "+", "mu"}], ")"}]}], 
      RowBox[{"eta", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"lambda", "+", "mu"}], ")"}], "2"]}]], ",", 
     FractionBox[
      RowBox[{"alpha", " ", "lambda", " ", "mu", " ", 
       RowBox[{"(", 
        RowBox[{"eta", "+", "mu"}], ")"}]}], 
      RowBox[{"eta", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"lambda", "+", "mu"}], ")"}], "2"]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6498522674657173`*^9, 3.64985229001208*^9}, {
   3.650034856214478*^9, 3.650034881223432*^9}, 3.650125499968363*^9, 
   3.662825391641032*^9}]
}, Open  ]],

Cell["\<\
This plot shows that the bifurcation at lambda=sigma is a Transcritical (I \
think)\
\>", "Text",
 CellChangeTimes->{{3.649852619904641*^9, 3.649852633799219*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jac2", "=", 
  RowBox[{"JacSpec", "/.", 
   RowBox[{"Sol", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.650035274272026*^9, 3.650035287338902*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Alpha]"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], "-", "\[Rho]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Rho]", ",", "\[Lambda]"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.65003527470802*^9, 3.6500352877894087`*^9}, 
   3.6501255000225353`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Eig", " ", "=", " ", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"JacSpecSol", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
         RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
         RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
         RowBox[{"\[Eta]", "\[Rule]", "eta"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"REig", " ", "=", " ", 
     RowBox[{"Re", "[", "Eig", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"IEig", " ", "=", " ", 
     RowBox[{"Im", "[", "Eig", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"REig", ",", "IEig"}], "}"}], "]"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"LightGray", ",", 
              RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
              RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Real part\>\"", ",", "\"\<Imaginary part\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FP", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"R", ",", "X", ",", "Y"}], "}"}], "/.", "Sol"}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
            RowBox[{"\[Lambda]", "\[Rule]", "0.1"}], ",", 
            RowBox[{"\[Mu]", "\[Rule]", "0.2"}], ",", 
            RowBox[{"\[Eta]", "\[Rule]", "eta"}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPointPlot3D", "[", 
            RowBox[{"FP", ",", "\[IndentingNewLine]", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "4"}], "]"}], ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}], "]"}]}], 
             ",", 
             RowBox[{"PlotLabel", "\[Rule]", "FP"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\!\(\*SuperscriptBox[\(R\), \(*\)]\)\>\"", ",", 
                "\"\<\!\(\*SuperscriptBox[\(S\), \(*\)]\)\>\"", ",", 
                "\"\<\!\(\*SuperscriptBox[\(F\), \(*\)]\)\>\""}], "}"}]}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics3D", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
              RowBox[{"Polygon", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eta", ",", "0.1"}], "}"}], ",", "0", ",", "0.2", ",", 
     "0.001"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649851637240397*^9, 3.649851850415141*^9}, {
   3.649851893272331*^9, 3.649851938695746*^9}, {3.649852202725564*^9, 
   3.6498522482523193`*^9}, {3.6498523075192347`*^9, 3.649852398675373*^9}, {
   3.6498524300737867`*^9, 3.649852531643402*^9}, {3.649852566131813*^9, 
   3.6498525864283524`*^9}, {3.649852656835186*^9, 3.6498526905529823`*^9}, {
   3.649853031191595*^9, 3.649853112024125*^9}, {3.649870564797371*^9, 
   3.6498706648861237`*^9}, {3.649870696987735*^9, 3.649870820868453*^9}, 
   3.64987095170216*^9, {3.6500348911622667`*^9, 3.650034894725707*^9}, {
   3.650035089322117*^9, 3.6500352576861277`*^9}, {3.650035291253294*^9, 
   3.650035322718047*^9}, {3.6628254071740294`*^9, 3.66282542110076*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`eta$$ = 0.09, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`eta$$], 0.1}, 0, 0.2, 0.001}}, Typeset`size$$ = {
    1020., {194., 47.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`eta$25033$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`eta$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`eta$$, $CellContext`eta$25033$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`Eig = Eigenvalues[
          
          ReplaceAll[$CellContext`JacSpecSol, {$CellContext`\[Alpha] -> 
            0.5, $CellContext`\[Lambda] -> 0.1, $CellContext`\[Mu] -> 
            0.2, $CellContext`\[Eta] -> $CellContext`eta$$}]]; \
$CellContext`REig = Re[$CellContext`Eig]; $CellContext`IEig = 
        Im[$CellContext`Eig]; Row[{
          Show[{
            ListPlot[
             Transpose[{$CellContext`REig, $CellContext`IEig}], 
             PlotRange -> {{-1, 1}, {-1, 1}}], 
            Graphics[{LightGray, 
              Opacity[0.3], 
              Disk[]}]}, ImageSize -> 300, Frame -> True, AspectRatio -> 1, 
           FrameLabel -> {"Real part", "Imaginary part"}], $CellContext`FP = 
           ReplaceAll[
             
             ReplaceAll[{$CellContext`R, $CellContext`X, $CellContext`Y}, \
$CellContext`Sol], {$CellContext`\[Alpha] -> 0.5, $CellContext`\[Lambda] -> 
              0.1, $CellContext`\[Mu] -> 
              0.2, $CellContext`\[Eta] -> $CellContext`eta$$}]; Show[{
             ListPointPlot3D[$CellContext`FP, PlotStyle -> Directive[{
                 ColorData[97, 4], 
                 PointSize[Large]}], PlotLabel -> $CellContext`FP, 
              PlotRange -> {{-1, 1}, {0, 1}, {0, 1}}, ImageSize -> 300, 
              AxesLabel -> {
               "\!\(\*SuperscriptBox[\(R\), \(*\)]\)", 
                "\!\(\*SuperscriptBox[\(S\), \(*\)]\)", 
                "\!\(\*SuperscriptBox[\(F\), \(*\)]\)"}], 
             Graphics3D[{
               Opacity[0.5], 
               Polygon[{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 0, 1}}]}]}]}]), 
      "Specifications" :> {{{$CellContext`eta$$, 0.1}, 0, 0.2, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1065., {162., 167.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.649870666284898*^9, {3.649870735026792*^9, 3.649870789572033*^9}, 
   3.6498708213292103`*^9, 3.649870952272958*^9, {3.650034856272545*^9, 
   3.6500348954054956`*^9}, 3.650035209616267*^9, 3.650035259444368*^9, 
   3.65003529198211*^9, 3.6500353233809958`*^9, 3.650125500317459*^9, 
   3.662825428167076*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\[NoBreak] cannot be \
transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924828190816*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248288890963`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248289615707`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\({\\(\\(ListPlot[\\(\\(\\(\\(Transpose[\\(\\({\
\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \
\\(\\({\\(\\(-1\\)\\), 1}\\)\\)}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*GraphicsBox[List[GrayLevel[0.85`], Opacity[0.3`], DiskBox[List[0, \
0]]]]}\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(Frame \[Rule] \
True\\)\\), \\(\\(AspectRatio \[Rule] 1\\)\\), \\(\\(FrameLabel \[Rule] \
\\(\\({\\\"Real part\\\", \\\"Imaginary part\\\"}\\)\\)\\)\\)\\)\\)]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248290002623`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({Sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924829007722*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPointPlot3D", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] \
Sol\\)\[NoBreak] must be a valid array or a list of valid arrays. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPointPlot3D\\\", ButtonNote \
-> \\\"ListPointPlot3D::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924829104445*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPointPlot3D", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] \
Sol\\)\[NoBreak] must be a valid array or a list of valid arrays. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPointPlot3D\\\", ButtonNote \
-> \\\"ListPointPlot3D::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924829166189*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPointPlot3D", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] \
Sol\\)\[NoBreak] must be a valid array or a list of valid arrays. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPointPlot3D\\\", ButtonNote \
-> \\\"ListPointPlot3D::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924829232025*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ListPointPlot3D :: arrayerr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248292674847`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\({\\(\\(ListPointPlot3D[\\(\\(\\(\\(\\(\\({R, X, Y}\
\\)\\)/.\[VeryThinSpace] Sol\\)\\), \\(\\(PlotStyle \[Rule] \
\\(\\(Directive[\\(\\({\\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*\
GraphicsBox[List[List[GrayLevel[0], RectangleBox[List[0, 0]]], \
List[GrayLevel[0], RectangleBox[List[1, -1]]], List[RGBColor[0.922526`, \
0.385626`, 0.209179`], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6150173333333333`, 0.25708400000000003`, 0.13945266666666667`]], \
Rule[FrameTicks, None], Rule[PlotRangePadding, None], Rule[ImageSize, \
Dynamic[List[Automatic, Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[0.922526, 0.385626, 0.209179]\\\"], Rule[Appearance, None], \
Rule[BaseStyle, List[]], Rule[BaselinePosition, Baseline], \
Rule[DefaultBaseStyle, List[]], RuleDelayed[ButtonFunction, \
With[List[Set[Typeset`box$, EvaluationBox[]]], If[Not[AbsoluteCurrentValue[\\\
\"Deployed\\\"]], CompoundExpression[SelectionMove[Typeset`box$, All, \
Expression], Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0.922526`, \
0.385626`, 0.209179`]], Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, \
True], MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0.922526`, 0.385626`, \
0.209179`], Rule[Editable, False], Rule[Selectable, False]], \
\\(\\(PointSize[Large]\\)\\)}\\)\\)]\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\(\
\\((\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] Sol)\\)\\)\\)\\), \\(\\(PlotRange \
\[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \\(\\({0, 1}\\)\\), \\(\\({0, \
1}\\)\\)}\\)\\)\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(R\\\\), \
\\\\(*\\\\)]\\\\)\\\", \\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(S\\\\), \
\\\\(*\\\\)]\\\\)\\\", \\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(F\\\\), \
\\\\(*\\\\)]\\\\)\\\"}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*Graphics3DBox[List[Opacity[0.5`], Polygon3DBox[List[List[0, 0, 0], List[0, \
1, 0], List[0, 1, 1], List[0, 0, 1]]]]]}\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248378456993`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\({\\(\\(ListPointPlot3D[\\(\\(\\(\\(\\(\\({R, X, Y}\
\\)\\)/.\[VeryThinSpace] Sol\\)\\), \\(\\(PlotStyle \[Rule] \
\\(\\(Directive[\\(\\({\\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*\
GraphicsBox[List[List[GrayLevel[0], RectangleBox[List[0, 0]]], \
List[GrayLevel[0], RectangleBox[List[1, -1]]], List[RGBColor[0.922526`, \
0.385626`, 0.209179`], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6150173333333333`, 0.25708400000000003`, 0.13945266666666667`]], \
Rule[FrameTicks, None], Rule[PlotRangePadding, None], Rule[ImageSize, \
Dynamic[List[Automatic, Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[0.922526, 0.385626, 0.209179]\\\"], Rule[Appearance, None], \
Rule[BaseStyle, List[]], Rule[BaselinePosition, Baseline], \
Rule[DefaultBaseStyle, List[]], RuleDelayed[ButtonFunction, \
With[List[Set[Typeset`box$, EvaluationBox[]]], If[Not[AbsoluteCurrentValue[\\\
\"Deployed\\\"]], CompoundExpression[SelectionMove[Typeset`box$, All, \
Expression], Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0.922526`, \
0.385626`, 0.209179`]], Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, \
True], MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0.922526`, 0.385626`, \
0.209179`], Rule[Editable, False], Rule[Selectable, False]], \
\\(\\(PointSize[Large]\\)\\)}\\)\\)]\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\(\
\\((\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] Sol)\\)\\)\\)\\), \\(\\(PlotRange \
\[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \\(\\({0, 1}\\)\\), \\(\\({0, \
1}\\)\\)}\\)\\)\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(R\\\\), \
\\\\(*\\\\)]\\\\)\\\", \\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(S\\\\), \
\\\\(*\\\\)]\\\\)\\\", \\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(F\\\\), \
\\\\(*\\\\)]\\\\)\\\"}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*Graphics3DBox[List[Opacity[0.5`], Polygon3DBox[List[List[0, 0, 0], List[0, \
1, 0], List[0, 1, 1], List[0, 0, 1]]]]]}\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924838282565*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Show :: \
gcomb\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924838319825*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248383980837`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924838436513*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\[NoBreak] cannot be \
transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924838509645*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924838595894*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924838656934*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\({\\(\\(ListPlot[\\(\\(\\(\\(Transpose[\\(\\({\
\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \
\\(\\({\\(\\(-1\\)\\), 1}\\)\\)}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*GraphicsBox[List[GrayLevel[0.85`], Opacity[0.3`], DiskBox[List[0, \
0]]]]}\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(Frame \[Rule] \
True\\)\\), \\(\\(AspectRatio \[Rule] 1\\)\\), \\(\\(FrameLabel \[Rule] \
\\(\\({\\\"Real part\\\", \\\"Imaginary part\\\"}\\)\\)\\)\\)\\)\\)]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924838694364*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({Sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248387022877`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPointPlot3D", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] \
Sol\\)\[NoBreak] must be a valid array or a list of valid arrays. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPointPlot3D\\\", ButtonNote \
-> \\\"ListPointPlot3D::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924838760888*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPointPlot3D", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] \
Sol\\)\[NoBreak] must be a valid array or a list of valid arrays. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPointPlot3D\\\", ButtonNote \
-> \\\"ListPointPlot3D::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248388197193`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPointPlot3D", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] \
Sol\\)\[NoBreak] must be a valid array or a list of valid arrays. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPointPlot3D\\\", ButtonNote \
-> \\\"ListPointPlot3D::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924838878283*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ListPointPlot3D :: arrayerr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66292483891033*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\({\\(\\(ListPointPlot3D[\\(\\(\\(\\(\\(\\({R, X, Y}\
\\)\\)/.\[VeryThinSpace] Sol\\)\\), \\(\\(PlotStyle \[Rule] \
\\(\\(Directive[\\(\\({\\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*\
GraphicsBox[List[List[GrayLevel[0], RectangleBox[List[0, 0]]], \
List[GrayLevel[0], RectangleBox[List[1, -1]]], List[RGBColor[0.922526`, \
0.385626`, 0.209179`], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6150173333333333`, 0.25708400000000003`, 0.13945266666666667`]], \
Rule[FrameTicks, None], Rule[PlotRangePadding, None], Rule[ImageSize, \
Dynamic[List[Automatic, Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[0.922526, 0.385626, 0.209179]\\\"], Rule[Appearance, None], \
Rule[BaseStyle, List[]], Rule[BaselinePosition, Baseline], \
Rule[DefaultBaseStyle, List[]], RuleDelayed[ButtonFunction, \
With[List[Set[Typeset`box$, EvaluationBox[]]], If[Not[AbsoluteCurrentValue[\\\
\"Deployed\\\"]], CompoundExpression[SelectionMove[Typeset`box$, All, \
Expression], Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0.922526`, \
0.385626`, 0.209179`]], Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, \
True], MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0.922526`, 0.385626`, \
0.209179`], Rule[Editable, False], Rule[Selectable, False]], \
\\(\\(PointSize[Large]\\)\\)}\\)\\)]\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\(\
\\((\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] Sol)\\)\\)\\)\\), \\(\\(PlotRange \
\[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \\(\\({0, 1}\\)\\), \\(\\({0, \
1}\\)\\)}\\)\\)\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(R\\\\), \
\\\\(*\\\\)]\\\\)\\\", \\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(S\\\\), \
\\\\(*\\\\)]\\\\)\\\", \\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(F\\\\), \
\\\\(*\\\\)]\\\\)\\\"}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*Graphics3DBox[List[Opacity[0.5`], Polygon3DBox[List[List[0, 0, 0], List[0, \
1, 0], List[0, 1, 1], List[0, 0, 1]]]]]}\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66292483895498*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\[NoBreak] cannot be \
transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248390017757`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924839067149*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\\
)\\)]\\)\\), \\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\
\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66292483912812*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\({\\(\\(ListPlot[\\(\\(\\(\\(Transpose[\\(\\({\
\\(\\(Re[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\), \
\\(\\(Im[\\(\\(Eigenvalues[JacSpecSol]\\)\\)]\\)\\)}\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \
\\(\\({\\(\\(-1\\)\\), 1}\\)\\)}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*GraphicsBox[List[GrayLevel[0.85`], Opacity[0.3`], DiskBox[List[0, \
0]]]]}\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(Frame \[Rule] \
True\\)\\), \\(\\(AspectRatio \[Rule] 1\\)\\), \\(\\(FrameLabel \[Rule] \
\\(\\({\\\"Real part\\\", \\\"Imaginary part\\\"}\\)\\)\\)\\)\\)\\)]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924839159573*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({Sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924839166027*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPointPlot3D", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] \
Sol\\)\[NoBreak] must be a valid array or a list of valid arrays. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPointPlot3D\\\", ButtonNote \
-> \\\"ListPointPlot3D::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66292483922364*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPointPlot3D", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] \
Sol\\)\[NoBreak] must be a valid array or a list of valid arrays. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPointPlot3D\\\", ButtonNote \
-> \\\"ListPointPlot3D::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924839282012*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPointPlot3D", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] \
Sol\\)\[NoBreak] must be a valid array or a list of valid arrays. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPointPlot3D\\\", ButtonNote \
-> \\\"ListPointPlot3D::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248393405724`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ListPointPlot3D :: arrayerr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6629248393782263`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\({\\(\\(ListPointPlot3D[\\(\\(\\(\\(\\(\\({R, X, Y}\
\\)\\)/.\[VeryThinSpace] Sol\\)\\), \\(\\(PlotStyle \[Rule] \
\\(\\(Directive[\\(\\({\\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*\
GraphicsBox[List[List[GrayLevel[0], RectangleBox[List[0, 0]]], \
List[GrayLevel[0], RectangleBox[List[1, -1]]], List[RGBColor[0.922526`, \
0.385626`, 0.209179`], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6150173333333333`, 0.25708400000000003`, 0.13945266666666667`]], \
Rule[FrameTicks, None], Rule[PlotRangePadding, None], Rule[ImageSize, \
Dynamic[List[Automatic, Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[0.922526, 0.385626, 0.209179]\\\"], Rule[Appearance, None], \
Rule[BaseStyle, List[]], Rule[BaselinePosition, Baseline], \
Rule[DefaultBaseStyle, List[]], RuleDelayed[ButtonFunction, \
With[List[Set[Typeset`box$, EvaluationBox[]]], If[Not[AbsoluteCurrentValue[\\\
\"Deployed\\\"]], CompoundExpression[SelectionMove[Typeset`box$, All, \
Expression], Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0.922526`, \
0.385626`, 0.209179`]], Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, \
True], MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0.922526`, 0.385626`, \
0.209179`], Rule[Editable, False], Rule[Selectable, False]], \
\\(\\(PointSize[Large]\\)\\)}\\)\\)]\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\(\
\\((\\(\\({R, X, Y}\\)\\)/.\[VeryThinSpace] Sol)\\)\\)\\)\\), \\(\\(PlotRange \
\[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \\(\\({0, 1}\\)\\), \\(\\({0, \
1}\\)\\)}\\)\\)\\)\\), \\(\\(ImageSize \[Rule] 300\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(R\\\\), \
\\\\(*\\\\)]\\\\)\\\", \\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(S\\\\), \
\\\\(*\\\\)]\\\\)\\\", \\\"\\\\!\\\\(\\\\*SuperscriptBox[\\\\(F\\\\), \
\\\\(*\\\\)]\\\\)\\\"}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*Graphics3DBox[List[Opacity[0.5`], Polygon3DBox[List[List[0, 0, 0], List[0, \
1, 0], List[0, 1, 1], List[0, 0, 1]]]]]}\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662924839424891*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["FP"], "Input",
 CellChangeTimes->{{3.64985254118918*^9, 3.649852541280491*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.16666666666666669`", ",", "0.33333333333333337`"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6498525418317547`*^9}]
}, Open  ]],

Cell["Specific Bifurcations", "Text",
 CellChangeTimes->{{3.636735249182033*^9, 3.6367352528544283`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Eta]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Mu]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Alpha]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SaddleBifAnalytic", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "JacSpecSol", "]"}], "\[Equal]", "0"}], ",", 
    "\[Lambda]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.639916661498138*^9, 3.639916737347307*^9}, {
  3.639916927000423*^9, 3.639916930351451*^9}, {3.639917059900681*^9, 
  3.639917061445949*^9}, {3.639917271531619*^9, 3.639917273202471*^9}, {
  3.639917355594678*^9, 3.6399173562835493`*^9}, {3.639917760808323*^9, 
  3.639917762454817*^9}, {3.63991860916257*^9, 3.6399186110231857`*^9}, {
  3.6463403665580263`*^9, 3.6463403774819403`*^9}, {3.646406263215164*^9, 
  3.6464063123309517`*^9}, {3.6628254568649683`*^9, 3.662825460420617*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Eta]", "\[Rule]", "\[Lambda]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", "\[Rule]", 
     RowBox[{"-", "\[Mu]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.662825461565515*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{"-", "\[Eta]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.662825461572496*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Alpha]", "\[Rule]", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.662825461577931*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "\[Eta]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.639916739794394*^9, 3.6399169321791477`*^9, 3.639917062830998*^9, 
   3.6399172755286493`*^9, 3.6399173575349283`*^9, 3.639917763399356*^9, 
   3.639918612597714*^9, 3.646340317796055*^9, {3.646340368124876*^9, 
   3.646340378477586*^9}, 3.6463996308198967`*^9, {3.6464062672424803`*^9, 
   3.646406313058034*^9}, 3.650040771394499*^9, 3.66282546158237*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SylvesterMatrix", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "Jac", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dim", " ", "=", " ", 
       RowBox[{"Length", "[", "Jac", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Mat", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Dim", "-", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Dim", "-", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Col1", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[DoubledPi]", ",", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Dim", "-", "1"}], ")"}], "*", "2"}], ",", "2"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Mat", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "=", " ", "Col1"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Mat", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[DoubledPi]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Mat", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "-", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "2", ",", 
          RowBox[{"Dim", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Dim", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Todel", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "Mat", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<", "0"}], "||", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", 
            RowBox[{"(", "Dim", ")"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Mat", "=", 
       RowBox[{"Mat", "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Todel", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "Todel", "]"}], ",", "1"}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"CPG", " ", "=", " ", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"CharacteristicPolynomial", "[", 
         RowBox[{"Jac", ",", "\[Lambda]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CPGL", " ", "=", " ", 
       RowBox[{"CoefficientList", "[", 
        RowBox[{"CPG", ",", "\[Lambda]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Mat2", " ", "=", " ", 
       RowBox[{"Mat", "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[DoubledPi]", ",", "i"}], "]"}], "\[Rule]", " ", 
           RowBox[{"CPGL", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "CPGL", "]"}], "-", "1"}], ")"}], ",", 
            "1"}], "}"}]}], "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 Background->RGBColor[1, 0.925, 0.925]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sylv", "=", 
   RowBox[{"SylvesterMatrix", "[", "JacSpecSol", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HopfSol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Det", "[", "Sylv", "]"}], "\[Equal]", "0"}], ",", "muy"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.636736436134536*^9, 3.636736500049109*^9, {3.6367367219487257`*^9, 
   3.636736738826749*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.636736677937512*^9, {3.6367367334010353`*^9, 3.636736755454893*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CPG", " ", "=", " ", 
   RowBox[{"CharacteristicPolynomial", "[", 
    RowBox[{"JacSpecSol", ",", "L"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CPGL", " ", "=", " ", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"CPG", ",", "L"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.63673694172998*^9, 3.6367370423808413`*^9}, 
   3.636737084247136*^9, 3.63673732646585*^9, 3.636737388095427*^9, {
   3.636822176583478*^9, 3.636822178990656*^9}, {3.646399699282878*^9, 
   3.646399702476984*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sylv", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"CPGL", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}]}], " ", 
  ";"}]], "Input",
 CellChangeTimes->{{3.6367370874757833`*^9, 3.636737102643981*^9}, {
  3.636737292648432*^9, 3.636737383415155*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HopfAnalytic", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Det", "[", "Sylv", "]"}], "\[Equal]", "0"}], ",", 
     "\[Lambda]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639918749090508*^9, 3.639918773681662*^9}, {
   3.646399710646468*^9, 3.64639971556273*^9}, 3.646400755370916*^9, 
   3.646400812843563*^9, {3.650040941506727*^9, 3.650040944197229*^9}}],

Cell[CellGroupData[{

Cell[BoxData["HopfAnalytic"], "Input",
 CellChangeTimes->{{3.650041464139906*^9, 3.650041465288834*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "\[Eta]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Eta]", "2"]}], "+", 
         RowBox[{"\[Alpha]", " ", "\[Mu]"}], "-", 
         RowBox[{"2", " ", "\[Eta]", " ", "\[Mu]"}]}], 
        RowBox[{"3", " ", "\[Eta]"}]]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "3"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], " ", 
            SuperscriptBox["\[Eta]", "4"]}], "-", 
           RowBox[{"15", " ", 
            SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
           RowBox[{
            SuperscriptBox["\[Alpha]", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"10", " ", 
            SuperscriptBox["\[Eta]", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"3", " ", "\[Eta]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"27", " ", 
             SuperscriptBox["\[Eta]", "6"]}], "-", 
            RowBox[{"18", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
            RowBox[{"90", " ", 
             SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
            RowBox[{"45", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Eta]", "3"], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "+", 
            RowBox[{"90", " ", 
             SuperscriptBox["\[Eta]", "4"], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Alpha]", "3"], " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
             SuperscriptBox["\[Mu]", "3"]}], "-", 
            RowBox[{"24", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Eta]", "2"], " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"25", " ", 
             SuperscriptBox["\[Eta]", "3"], " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "6"}], " ", 
                   SuperscriptBox["\[Eta]", "4"]}], "-", 
                  RowBox[{"15", " ", 
                   SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
                  RowBox[{
                   SuperscriptBox["\[Alpha]", "2"], " ", 
                   SuperscriptBox["\[Mu]", "2"]}], "+", 
                  RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
                   SuperscriptBox["\[Mu]", "2"]}], "-", 
                  RowBox[{"10", " ", 
                   SuperscriptBox["\[Eta]", "2"], " ", 
                   SuperscriptBox["\[Mu]", "2"]}]}], ")"}], "3"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Eta]", "6"]}], "-", 
                 RowBox[{"18", " ", "\[Alpha]", " ", 
                  SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
                 RowBox[{"90", " ", 
                  SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
                 RowBox[{"45", " ", "\[Alpha]", " ", 
                  SuperscriptBox["\[Eta]", "3"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"90", " ", 
                  SuperscriptBox["\[Eta]", "4"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Alpha]", "3"], " ", 
                  SuperscriptBox["\[Mu]", "3"]}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
                  SuperscriptBox["\[Mu]", "3"]}], "-", 
                 RowBox[{"24", " ", "\[Alpha]", " ", 
                  SuperscriptBox["\[Eta]", "2"], " ", 
                  SuperscriptBox["\[Mu]", "3"]}], "+", 
                 RowBox[{"25", " ", 
                  SuperscriptBox["\[Eta]", "3"], " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}], "2"]}]]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"3", " ", 
         SuperscriptBox["2", 
          RowBox[{"1", "/", "3"}]], " ", "\[Eta]"}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"27", " ", 
           SuperscriptBox["\[Eta]", "6"]}], "-", 
          RowBox[{"18", " ", "\[Alpha]", " ", 
           SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
          RowBox[{"90", " ", 
           SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
          RowBox[{"45", " ", "\[Alpha]", " ", 
           SuperscriptBox["\[Eta]", "3"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"90", " ", 
           SuperscriptBox["\[Eta]", "4"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Alpha]", "3"], " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "-", 
          RowBox[{"24", " ", "\[Alpha]", " ", 
           SuperscriptBox["\[Eta]", "2"], " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"25", " ", 
           SuperscriptBox["\[Eta]", "3"], " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "6"}], " ", 
                 SuperscriptBox["\[Eta]", "4"]}], "-", 
                RowBox[{"15", " ", 
                 SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
                RowBox[{
                 SuperscriptBox["\[Alpha]", "2"], " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "-", 
                RowBox[{"10", " ", 
                 SuperscriptBox["\[Eta]", "2"], " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}], "3"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"27", " ", 
                SuperscriptBox["\[Eta]", "6"]}], "-", 
               RowBox[{"18", " ", "\[Alpha]", " ", 
                SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
               RowBox[{"90", " ", 
                SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
               RowBox[{"45", " ", "\[Alpha]", " ", 
                SuperscriptBox["\[Eta]", "3"], " ", 
                SuperscriptBox["\[Mu]", "2"]}], "+", 
               RowBox[{"90", " ", 
                SuperscriptBox["\[Eta]", "4"], " ", 
                SuperscriptBox["\[Mu]", "2"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Alpha]", "3"], " ", 
                SuperscriptBox["\[Mu]", "3"]}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
                SuperscriptBox["\[Mu]", "3"]}], "-", 
               RowBox[{"24", " ", "\[Alpha]", " ", 
                SuperscriptBox["\[Eta]", "2"], " ", 
                SuperscriptBox["\[Mu]", "3"]}], "+", 
               RowBox[{"25", " ", 
                SuperscriptBox["\[Eta]", "3"], " ", 
                SuperscriptBox["\[Mu]", "3"]}]}], ")"}], "2"]}]]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Eta]", "2"]}], "+", 
         RowBox[{"\[Alpha]", " ", "\[Mu]"}], "-", 
         RowBox[{"2", " ", "\[Eta]", " ", "\[Mu]"}]}], 
        RowBox[{"3", " ", "\[Eta]"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["3"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], " ", 
            SuperscriptBox["\[Eta]", "4"]}], "-", 
           RowBox[{"15", " ", 
            SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
           RowBox[{
            SuperscriptBox["\[Alpha]", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"10", " ", 
            SuperscriptBox["\[Eta]", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"3", " ", 
         SuperscriptBox["2", 
          RowBox[{"2", "/", "3"}]], " ", "\[Eta]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"27", " ", 
             SuperscriptBox["\[Eta]", "6"]}], "-", 
            RowBox[{"18", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
            RowBox[{"90", " ", 
             SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
            RowBox[{"45", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Eta]", "3"], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "+", 
            RowBox[{"90", " ", 
             SuperscriptBox["\[Eta]", "4"], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Alpha]", "3"], " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
             SuperscriptBox["\[Mu]", "3"]}], "-", 
            RowBox[{"24", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Eta]", "2"], " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"25", " ", 
             SuperscriptBox["\[Eta]", "3"], " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "6"}], " ", 
                   SuperscriptBox["\[Eta]", "4"]}], "-", 
                  RowBox[{"15", " ", 
                   SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
                  RowBox[{
                   SuperscriptBox["\[Alpha]", "2"], " ", 
                   SuperscriptBox["\[Mu]", "2"]}], "+", 
                  RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
                   SuperscriptBox["\[Mu]", "2"]}], "-", 
                  RowBox[{"10", " ", 
                   SuperscriptBox["\[Eta]", "2"], " ", 
                   SuperscriptBox["\[Mu]", "2"]}]}], ")"}], "3"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Eta]", "6"]}], "-", 
                 RowBox[{"18", " ", "\[Alpha]", " ", 
                  SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
                 RowBox[{"90", " ", 
                  SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
                 RowBox[{"45", " ", "\[Alpha]", " ", 
                  SuperscriptBox["\[Eta]", "3"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"90", " ", 
                  SuperscriptBox["\[Eta]", "4"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Alpha]", "3"], " ", 
                  SuperscriptBox["\[Mu]", "3"]}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
                  SuperscriptBox["\[Mu]", "3"]}], "-", 
                 RowBox[{"24", " ", "\[Alpha]", " ", 
                  SuperscriptBox["\[Eta]", "2"], " ", 
                  SuperscriptBox["\[Mu]", "3"]}], "+", 
                 RowBox[{"25", " ", 
                  SuperscriptBox["\[Eta]", "3"], " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}], "2"]}]]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"6", " ", 
         SuperscriptBox["2", 
          RowBox[{"1", "/", "3"}]], " ", "\[Eta]"}]], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["3"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"27", " ", 
            SuperscriptBox["\[Eta]", "6"]}], "-", 
           RowBox[{"18", " ", "\[Alpha]", " ", 
            SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
           RowBox[{"90", " ", 
            SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
           RowBox[{"45", " ", "\[Alpha]", " ", 
            SuperscriptBox["\[Eta]", "3"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"90", " ", 
            SuperscriptBox["\[Eta]", "4"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Alpha]", "3"], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
            SuperscriptBox["\[Mu]", "3"]}], "-", 
           RowBox[{"24", " ", "\[Alpha]", " ", 
            SuperscriptBox["\[Eta]", "2"], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"25", " ", 
            SuperscriptBox["\[Eta]", "3"], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "6"}], " ", 
                  SuperscriptBox["\[Eta]", "4"]}], "-", 
                 RowBox[{"15", " ", 
                  SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
                 RowBox[{
                  SuperscriptBox["\[Alpha]", "2"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "-", 
                 RowBox[{"10", " ", 
                  SuperscriptBox["\[Eta]", "2"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}], "3"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"27", " ", 
                 SuperscriptBox["\[Eta]", "6"]}], "-", 
                RowBox[{"18", " ", "\[Alpha]", " ", 
                 SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
                RowBox[{"90", " ", 
                 SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
                RowBox[{"45", " ", "\[Alpha]", " ", 
                 SuperscriptBox["\[Eta]", "3"], " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"90", " ", 
                 SuperscriptBox["\[Eta]", "4"], " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Alpha]", "3"], " ", 
                 SuperscriptBox["\[Mu]", "3"]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
                 SuperscriptBox["\[Mu]", "3"]}], "-", 
                RowBox[{"24", " ", "\[Alpha]", " ", 
                 SuperscriptBox["\[Eta]", "2"], " ", 
                 SuperscriptBox["\[Mu]", "3"]}], "+", 
                RowBox[{"25", " ", 
                 SuperscriptBox["\[Eta]", "3"], " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}], "2"]}]]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Eta]", "2"]}], "+", 
         RowBox[{"\[Alpha]", " ", "\[Mu]"}], "-", 
         RowBox[{"2", " ", "\[Eta]", " ", "\[Mu]"}]}], 
        RowBox[{"3", " ", "\[Eta]"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["3"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], " ", 
            SuperscriptBox["\[Eta]", "4"]}], "-", 
           RowBox[{"15", " ", 
            SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
           RowBox[{
            SuperscriptBox["\[Alpha]", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"10", " ", 
            SuperscriptBox["\[Eta]", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"3", " ", 
         SuperscriptBox["2", 
          RowBox[{"2", "/", "3"}]], " ", "\[Eta]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"27", " ", 
             SuperscriptBox["\[Eta]", "6"]}], "-", 
            RowBox[{"18", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
            RowBox[{"90", " ", 
             SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
            RowBox[{"45", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Eta]", "3"], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "+", 
            RowBox[{"90", " ", 
             SuperscriptBox["\[Eta]", "4"], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Alpha]", "3"], " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
             SuperscriptBox["\[Mu]", "3"]}], "-", 
            RowBox[{"24", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Eta]", "2"], " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"25", " ", 
             SuperscriptBox["\[Eta]", "3"], " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "6"}], " ", 
                   SuperscriptBox["\[Eta]", "4"]}], "-", 
                  RowBox[{"15", " ", 
                   SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
                  RowBox[{
                   SuperscriptBox["\[Alpha]", "2"], " ", 
                   SuperscriptBox["\[Mu]", "2"]}], "+", 
                  RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
                   SuperscriptBox["\[Mu]", "2"]}], "-", 
                  RowBox[{"10", " ", 
                   SuperscriptBox["\[Eta]", "2"], " ", 
                   SuperscriptBox["\[Mu]", "2"]}]}], ")"}], "3"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Eta]", "6"]}], "-", 
                 RowBox[{"18", " ", "\[Alpha]", " ", 
                  SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
                 RowBox[{"90", " ", 
                  SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
                 RowBox[{"45", " ", "\[Alpha]", " ", 
                  SuperscriptBox["\[Eta]", "3"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"90", " ", 
                  SuperscriptBox["\[Eta]", "4"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Alpha]", "3"], " ", 
                  SuperscriptBox["\[Mu]", "3"]}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
                  SuperscriptBox["\[Mu]", "3"]}], "-", 
                 RowBox[{"24", " ", "\[Alpha]", " ", 
                  SuperscriptBox["\[Eta]", "2"], " ", 
                  SuperscriptBox["\[Mu]", "3"]}], "+", 
                 RowBox[{"25", " ", 
                  SuperscriptBox["\[Eta]", "3"], " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}], "2"]}]]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"6", " ", 
         SuperscriptBox["2", 
          RowBox[{"1", "/", "3"}]], " ", "\[Eta]"}]], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["3"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"27", " ", 
            SuperscriptBox["\[Eta]", "6"]}], "-", 
           RowBox[{"18", " ", "\[Alpha]", " ", 
            SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
           RowBox[{"90", " ", 
            SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
           RowBox[{"45", " ", "\[Alpha]", " ", 
            SuperscriptBox["\[Eta]", "3"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"90", " ", 
            SuperscriptBox["\[Eta]", "4"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Alpha]", "3"], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
            SuperscriptBox["\[Mu]", "3"]}], "-", 
           RowBox[{"24", " ", "\[Alpha]", " ", 
            SuperscriptBox["\[Eta]", "2"], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"25", " ", 
            SuperscriptBox["\[Eta]", "3"], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "6"}], " ", 
                  SuperscriptBox["\[Eta]", "4"]}], "-", 
                 RowBox[{"15", " ", 
                  SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
                 RowBox[{
                  SuperscriptBox["\[Alpha]", "2"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "-", 
                 RowBox[{"10", " ", 
                  SuperscriptBox["\[Eta]", "2"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}], "3"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"27", " ", 
                 SuperscriptBox["\[Eta]", "6"]}], "-", 
                RowBox[{"18", " ", "\[Alpha]", " ", 
                 SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
                RowBox[{"90", " ", 
                 SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
                RowBox[{"45", " ", "\[Alpha]", " ", 
                 SuperscriptBox["\[Eta]", "3"], " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"90", " ", 
                 SuperscriptBox["\[Eta]", "4"], " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Alpha]", "3"], " ", 
                 SuperscriptBox["\[Mu]", "3"]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
                 SuperscriptBox["\[Mu]", "3"]}], "-", 
                RowBox[{"24", " ", "\[Alpha]", " ", 
                 SuperscriptBox["\[Eta]", "2"], " ", 
                 SuperscriptBox["\[Mu]", "3"]}], "+", 
                RowBox[{"25", " ", 
                 SuperscriptBox["\[Eta]", "3"], " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}], "2"]}]]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6500414659214067`*^9, {3.66282550054714*^9, 3.662825511833417*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "HopfAnalytic", "]"}]], "Input",
 CellChangeTimes->{{3.650040946376001*^9, 3.6500409510612993`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6500414333491173`*^9, 3.662825532281023*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HopfAnalytic", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662825573178918*^9, 3.662825616593082*^9}, {
  3.662825723791039*^9, 3.66282578043402*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Lambda]", "\[Rule]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["\[Eta]", "2"]}], "+", 
       RowBox[{"\[Alpha]", " ", "\[Mu]"}], "-", 
       RowBox[{"2", " ", "\[Eta]", " ", "\[Mu]"}]}], 
      RowBox[{"3", " ", "\[Eta]"}]]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], " ", 
          SuperscriptBox["\[Eta]", "4"]}], "-", 
         RowBox[{"15", " ", 
          SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "-", 
         RowBox[{"10", " ", 
          SuperscriptBox["\[Eta]", "2"], " ", 
          SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"3", " ", "\[Eta]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"27", " ", 
           SuperscriptBox["\[Eta]", "6"]}], "-", 
          RowBox[{"18", " ", "\[Alpha]", " ", 
           SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
          RowBox[{"90", " ", 
           SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
          RowBox[{"45", " ", "\[Alpha]", " ", 
           SuperscriptBox["\[Eta]", "3"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"90", " ", 
           SuperscriptBox["\[Eta]", "4"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Alpha]", "3"], " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "-", 
          RowBox[{"24", " ", "\[Alpha]", " ", 
           SuperscriptBox["\[Eta]", "2"], " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"25", " ", 
           SuperscriptBox["\[Eta]", "3"], " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "6"}], " ", 
                 SuperscriptBox["\[Eta]", "4"]}], "-", 
                RowBox[{"15", " ", 
                 SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
                RowBox[{
                 SuperscriptBox["\[Alpha]", "2"], " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "-", 
                RowBox[{"10", " ", 
                 SuperscriptBox["\[Eta]", "2"], " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}], "3"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"27", " ", 
                SuperscriptBox["\[Eta]", "6"]}], "-", 
               RowBox[{"18", " ", "\[Alpha]", " ", 
                SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
               RowBox[{"90", " ", 
                SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
               RowBox[{"45", " ", "\[Alpha]", " ", 
                SuperscriptBox["\[Eta]", "3"], " ", 
                SuperscriptBox["\[Mu]", "2"]}], "+", 
               RowBox[{"90", " ", 
                SuperscriptBox["\[Eta]", "4"], " ", 
                SuperscriptBox["\[Mu]", "2"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Alpha]", "3"], " ", 
                SuperscriptBox["\[Mu]", "3"]}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
                SuperscriptBox["\[Mu]", "3"]}], "-", 
               RowBox[{"24", " ", "\[Alpha]", " ", 
                SuperscriptBox["\[Eta]", "2"], " ", 
                SuperscriptBox["\[Mu]", "3"]}], "+", 
               RowBox[{"25", " ", 
                SuperscriptBox["\[Eta]", "3"], " ", 
                SuperscriptBox["\[Mu]", "3"]}]}], ")"}], "2"]}]]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"3", " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "3"}]], " ", "\[Eta]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"27", " ", 
         SuperscriptBox["\[Eta]", "6"]}], "-", 
        RowBox[{"18", " ", "\[Alpha]", " ", 
         SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
        RowBox[{"90", " ", 
         SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
        RowBox[{"45", " ", "\[Alpha]", " ", 
         SuperscriptBox["\[Eta]", "3"], " ", 
         SuperscriptBox["\[Mu]", "2"]}], "+", 
        RowBox[{"90", " ", 
         SuperscriptBox["\[Eta]", "4"], " ", 
         SuperscriptBox["\[Mu]", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Alpha]", "3"], " ", 
         SuperscriptBox["\[Mu]", "3"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
         SuperscriptBox["\[Mu]", "3"]}], "-", 
        RowBox[{"24", " ", "\[Alpha]", " ", 
         SuperscriptBox["\[Eta]", "2"], " ", 
         SuperscriptBox["\[Mu]", "3"]}], "+", 
        RowBox[{"25", " ", 
         SuperscriptBox["\[Eta]", "3"], " ", 
         SuperscriptBox["\[Mu]", "3"]}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "6"}], " ", 
               SuperscriptBox["\[Eta]", "4"]}], "-", 
              RowBox[{"15", " ", 
               SuperscriptBox["\[Eta]", "3"], " ", "\[Mu]"}], "-", 
              RowBox[{
               SuperscriptBox["\[Alpha]", "2"], " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"\[Alpha]", " ", "\[Eta]", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "-", 
              RowBox[{"10", " ", 
               SuperscriptBox["\[Eta]", "2"], " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}], "3"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"27", " ", 
              SuperscriptBox["\[Eta]", "6"]}], "-", 
             RowBox[{"18", " ", "\[Alpha]", " ", 
              SuperscriptBox["\[Eta]", "4"], " ", "\[Mu]"}], "+", 
             RowBox[{"90", " ", 
              SuperscriptBox["\[Eta]", "5"], " ", "\[Mu]"}], "-", 
             RowBox[{"45", " ", "\[Alpha]", " ", 
              SuperscriptBox["\[Eta]", "3"], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"90", " ", 
              SuperscriptBox["\[Eta]", "4"], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]", "3"], " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Alpha]", "2"], " ", "\[Eta]", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "-", 
             RowBox[{"24", " ", "\[Alpha]", " ", 
              SuperscriptBox["\[Eta]", "2"], " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"25", " ", 
              SuperscriptBox["\[Eta]", "3"], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}], "2"]}]]}], ")"}], 
      RowBox[{"1", "/", "3"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.662825570842561*^9, 3.662825611189311*^9}, {
  3.662825724764739*^9, 3.662825780793064*^9}}]
}, Open  ]],

Cell["\<\
The solution to the Hopf Bifurcation surface may not be analytically \
tractable
Try Solving numerically with a = 1\
\>", "Text",
 CellChangeTimes->{{3.636737525783757*^9, 3.636737558522097*^9}, {
  3.636744978724807*^9, 3.636744979061075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hsp", " ", "=", " ", 
   RowBox[{"HopfAnalytic", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0.2"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "/.", "Hsp"}], ",", "\[Eta]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Eta]\>\"", ",", "\"\<\[Lambda]\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"ColorData", "[", "97", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.646400690908239*^9, 3.646400783799788*^9}, {
   3.6464008170780478`*^9, 3.646400863708932*^9}, {3.646401262660769*^9, 
   3.646401282964713*^9}, {3.646401386010373*^9, 3.64640140294523*^9}, {
   3.6464017110996943`*^9, 3.646401716799921*^9}, {3.6464023986360826`*^9, 
   3.64640241015652*^9}, {3.662825538729313*^9, 3.662825555698752*^9}, {
   3.662825620564828*^9, 3.6628256569979153`*^9}, {3.662825704880527*^9, 
   3.6628257110843363`*^9}, {3.662825762283937*^9, 3.6628257942720222`*^9}, 
   3.662825838974902*^9, {3.662825973257312*^9, 3.6628260281103888`*^9}, {
   3.6628300168972692`*^9, 3.662830017135106*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
8jIBG/xwN570rvsfzrzlpg==
     "]], LineBox[CompressedData["
1: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
4V8qGthK
     "]], LineBox[CompressedData["
1:eJwVk2k41G0fhmfBbFKW4lEqlaKElJSWn1JRaUG9qZAllRZEmyivok0i2Ukz
liGyG2PtvpPlsWab6CHhoRnC3zKIxNv74TquT+eH6zyOS9XexdyRQiKRuH/y
//4r/NNmmZshoPkM96I6adzk59LfXhkCFWMfKdXp0tiz7MghyRWhcLNovTV6
IY3XUDVTtW6FQnvu0n2GLtK4dg9T2rIuFFKKPjqZHJfG5xvWKn1VD4MSdbed
ZjrSeDmqqEvxDIMDNQV6nfLSmPk+1cfxQxgM7LyTDbMsrFxbKKyEcOiSv923
uYmFlTztRtb6hINEfNrtlmIWxgVgdrwtHNz5bdL5bBa2NLGyFmyOgDpyy7aU
hywspz8rF/8oAsaFyVcrnFi4Q2CtslgQAZCVbxBmxsKSVwMpw6aRcLQSjhtu
ZOGBYPnnn0MiweNh/ataRRbmbboZZvJvJFzblEvPJLGwjavF1HWDKPBS6VY8
K2RiqYxNltEvo8BixvGFXT0TZwwtLCgTRQEnMHDdBx4TO3VkOAfviAafsWv+
72KZmHSl9q5ieDQcaTym/NCPic1FT3Ze3h8DrcsUnIL+w8QqjwcOdLyKgSsG
fT9b9zBxguP+ueLxGHC9epH/RZ2JJ3rIeGHca6iTfs0/PsvAEV/vGvHmYsGO
gY694jKwea3y9AOzN8Dr7FYSBDPwwBl9SXraG5jVQOUH7jFwdS0zR4nCBgp/
xxqSEwMvH/RwSNvIhifkZt+pEwzsxuqX33uaDb4Npgkb9jBwiflUpMRjNmSJ
my7FaTKw8qHKG1cy2WAX1Gy0X5mBL7wUzGzsZMPkjjojPSkGLnuSKAihcaBe
voRrJKZjpWSFRxqbOSDMk24P7abjm296bYOsOLA0VUmF0UDH+PvYd/NnHLh1
pIPaXkzHKp2lHwpyOFDCmerJSqVjJ7VGY69uDmxpdGwmIuhY7nxGcuK2OJCW
5yTV3qRjy9OcjJHRBBB3TbkW3aRhov0EM045Ee7R1qdLXqLhRzZ0RwujRKjd
ctbV5QwN5zi4KOeFJEIRh/THCg3LOO/y89Tngmk0LesCi4bLH3w5I3UvCVau
C3ywOVkKW0kG8PiJSXDqqCbbKEYKjz02XORUnwRNzN/frwZJ4ZUBSeU1K5KB
WJ0UzfCQwl7hN3VeliaDgyLprf1hKaz7TlZqGT0Fzu0pMz8ulsRVWuW2dTop
kJ/Qp1HfL4lts+4U3T+dAouKP9yz/SaJA/K+uXanpIBjzaWYD9WSWITT2rlH
UoG1cX7COU4SxwoOZm169Q6Gt+afMTopiVnzPlbGyzMgr/m3/uVKCRzhdMpG
80AGeFbYW+ojCbymRdNW1jkDWklZynJ8Cbz7batDe0kGdBtLjBNcCVzwNozH
18r88xfvRQcfS+Ahi8Hiw/WZMJfj6mVxSAKfTA6vcV+QDcL9qyzH26g4xvqB
6QXVbBgbOu2xtYmKe+Su1VnqZQPl7yX3H9ZQscu9vZ92WWeDkcHJJoP3VPzU
fKiJlpYNE9pcxWUJVFwyu/efaNMc2O9g9Tz0OhWrmQ2LPvrngvwD0yUCOSpW
9jY2uMjJhenbm/iZ0lS8KI3tz+TnQsjWcslQKSqeoVtomfXkwnozE8vbMxTc
gPnundt4ILAYD2P3UPBdHZ+5n308WB340PFGLgXXL1RQ0DLkw2w3SznBmoI/
7rrm2HiSD9k6/gbXLSk4/0pF3o0rfJg+I/i8z4KC4yvvnC4K40ObluHBeRMK
vuP9NdZkiA8pWsH+aAsFryK4Gg5R+bCk0phvt4CCb9dvhwhxAdCWW4QKSslY
RovXV0UvhAKmdnDiezJOCNB5/mtZIehmPejyKCTjRtN1X2z2F4Kbpudx7Wwy
3lCj4K4WVgi+sy+iajlk/K2S4GbrF8FuonauyoeMjT8kytTdLQafs3tpr/eR
sWKubCeZjMClfCTKsIWErZ7/OtG7BMGHxccqkxpIOO58X02FJgK1G97acnUk
rLm4oMDfEoG6JCtmpJyE996yDV2ciYC5unJ/M5+Et8ac4oZoYyjODqBtiCFh
OxuudXInhr2+z3VJF0k4r8eo9tPOUlBKcPfbJ0HCn018RgOMS+Fx3u0ZOzIJ
T6a/X2JqXgrF1PuTlN/zSN9zu93fF0tBL9lgXcDoPMqX157EwaVgn2v9qvGf
eVSwT3lltqgUlrkO2y5On0fF3BH3kJCPkMj79Mru1Dwqvfx66enBMkji5I+J
c+bQxNpdC9OuVULv2NOTkezfiDKdumipWjWskGwL6QqfRVvnbfMs0mthaYK4
RbHgF6r13VJfsf4TeHUZZOSOzKAVQT+m3w43wIsVw66J62bQj6lvnQKdJrg2
bSsuuzONEgaKqmVeNIOLWvnCrxU/kYxKEtHb2wJmVXmvTFb9RM+deBfYaz7D
4+wv5qFBU2jSMLX3kncreIh2q1FmJtEN3bLcJR/bYNxZqSLNfRJ9Sy/zb1T9
B1wvHtu9QTSBfl1uida42w6NKa3i3PMTaMMe2tyFog6wTawteTQsRsZxqhez
FDthi46rv8BNjG6rnFvVbfUNnl3nSWhRxUhz8CSr9UgXaNU91WVEjiP5hSP0
spkuuLv68u8TGuNIAkVnrI7phqoXV72Uy8bQlS1FXxiHe6Cm1NrgxukxlHrQ
nv1+sgd022ZlksZH0cQP5UXfw/6FQvk31arho4hnYUwN2dcLK+Xjgw/rjSJv
E783ud97QZdYd02rYwSpfj3UFu/XB2fM3LqrHo0gA33fkL90v8NyLfshfc0R
ZLX80zS5+TsMNnh2qucQaKI6oMfVRwjcrln7diqBIiRsbpivEQHN/nMQ22EY
yXfy4ihlIvDt/xQQXzWEJO/5nNh+vR8+nlFzHFIbQqS3Nhk9cgMgq991cXnQ
IHKLygiQKx2Aag1py96RH6hkwxO6rPMPKH9aKRt+6geSPeSm+UBmEJ6R1Sw2
1gygjo0NzR7Fg/Dw1q3fCXoDKDMW1vTaDIEXPTTW+10/ss7YKqsyNwT5ov60
fer96L9+HJ+OlGEQtIjnN0eLUJpIJVrGlAA/s3PP3v8lQk9e+9l2HiXgoPOd
VT6KInTefEgt3YyA1b9Ge4wWi9Cy4uLMI6cI2GI/3FG1SISeBZ6teG5PQHX8
+dxWmghd2ho5yvQgoD9yweDMhBCt8lUwoXEJ4J9rPHGuSYjmtnktaE0mAPTd
htY2CNGXoX+buKkErFXNSxuuE6KgUznWB7IISO5cmHi/Sojm15u7+xX/4bUv
ObOxEHU0BsZSmwlQ1Yi68CNdiPIfTTk0CwjoG8q5xXsnRCE7zmnEtxHQq6WQ
7p0iRIcTtXL3dhIwov0yWIErRIV36qp8+gmglnZsMnwtRGEb9QLNBgnYMP7U
kxUtRNd7Yk6oEgScbDs2+DlCiNRNr37DYgK2i2WMnEOESILckhA0RcDSqll1
g2Ah6uLtuGw7Q8D6F4N6UkFCVHw5Xlvn95/9oW1OTQFCFL6CNTE/T8DE5qKy
WH8h+h8QflY5
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVzHs81OkewHHGMIMMI+kUkl22zWWS4xLim2yGknKrVCQVYYuitKrDOE0p
t7E7jaJQGYUYtyGXPE8lYnPJJWkYdxHjN+0WhTh7/vi83v999ALCPE6QZGRk
ov/p/waqaE5t5aSASIvB6y1Ww0eqlkqQFwdeue97XJWkhldt5DAO8FJhls2v
feughlnUsg3X13BhD/lffPOzqtiQmRpfGs6F5ZfNcy17VHEHO2xS1MiFTfhe
41cTVawvZ1zAOH8TWBw3hnSKhhu+5zC6OngwWWFtTpyi4RV/8yx0E2+DUXoR
T+maChZuPsdzHrkNLiKfcEmoCvYL95w7Y5MOUm39RUN3FSyQqFbVT6RDutRq
7LG2CvaYiN8asuMONEzoilMqV+Bb/dGOwqVMaE2+xWEsKGMHbZ8csXcWDNoo
P20dVcYfD1rJUwuzYKZQpf1xqzJeN/3bsUKTbJBc0gnWeaCMw4ItDWT6smEm
/cZooZsyVj8ueMTfch+UjTSzbwqU8AGfewLppxwQJw7p7vhdERMiL6X7a/lA
ab1t3RSniK/6UU94OvKBVfaBHhqhiMuOha2t4PLh6I2Vtgreiph22o590SoX
nu7/6X7yGkX8Mq73oMLlh9DLFeVyHlKx2WO6gjY1H4LV4sLkuim4ifHSv8U0
HyRRRjUJryjYv+RCzX988iF6XLRvQy0FJ1UMhA/l58PyQExq2gMKnsCFotzd
BfDXYmiXdwQFZ3a7lGz+4zGoNcY9W6tJwcrLrMPMdQKYO5I1eTFIAd8K3u9n
7CQAdMVcvM1XAet3GfvTTwugo+tcj7qnArbP6zkmeiqAOs8Mr357BVyVxxNW
MorBnsVapK5WwBLP6dpdrcXg8LsBN7tJHns/SvszQqUU8unfQ9St5PEd3zjX
QL1SULWw3reNIY+H1U+1HLAohSanGGmUgTwOu7y9zc63FHIO1PXLacjj6x6S
DkphKUjICwcTP5Hx08Xt7zNcy6B379kytyIyNnCfmXiRUA7i2MYgLQYZr41h
2gTdK4fPRpPzpQZkrFaYnaBUWQ7SR18PeuqQ8TzVk+E+XA4iSsWWohVk3I4r
I8RbhPB2sul885QcjjZlLX0dE0Jsao5KcoEcblXV0GBsqwSd7zXaXaZyOKrV
Gm59rgLnJ4s2kXtImMYQjjVRq2HF0lYHOxcSzkkyTVzQrga1kuLVyo4k/MZ1
Q6/fjmqw+XBttdCShI3+1Igw4FVDkDUpzWEdCQ80ErmlVjXAD10fajkji5nP
+LSW6Fq45HDF4miqLF5dThfLyiJQj+UanhuRwRXDjq/btj6HVP3I2G0my+h5
yF0tn+l6iEyYPZk0v4i+/GSnWniqEfqk4e77jBYQ6VuBmpZBM3gk2LktBH9D
lsv+FZ5FryEvyu7XVzNz6PUV89YGwzawd+TRXdJnkS5n6lveTDtEOq5s3On0
BU3NDYi7TTsgwczWNmf9Z5TzsaaZltwJ/9Yfmj379S9E03lIjI52gZfOZa31
k59QYrAwMFv/LXDyFmc8FqRodlvB6MmYHnizZCijQ5WiSLP6cs0X70Bx1Uat
oYAZNFBUn/BG7z20ncnsqcqbRgshXRkbo0UgNbV/k0SbQkYOlKXAmj6glFCv
V2dPIuZ9vaCS1WJYSB5jVhtMoCidIz8MHR4A55UWWyid48h42lu5Z/cgxLwN
EStxx9BKVSm1fn4QyNd1nl1kjiIyyhD8eGcI5HzSQvu1R1CoeU2v4q5hkJ4J
2U0bG0IFLgHZdbPD4HRcw5JeN4i+TK1VG+eNQEGXsabvyQEk9GTKcX8ZhT7N
spcJNv0oxpmdVT4+CpeY6/1Pbxchvf6d7x6wx8BhxXmWKKAX2Vhd4a4xGwez
vrRTg8E96PC6tm+ynePArD/keCi7G31pThoOZ32AotRrsyfqOtEtsl+kh/4E
nCgd29xG7UArxcL7pPoJONT0y8X3ge1I/jLLy/rMJKQQI4sXDrYgmTw/wbD6
R9ga3xi8yqoZnU0XJKk//whM3wLzn8cb0FOjeCr99BQ4r4lu51S9QPSdZ43j
aNOw+dw7nms3Rn0m7Z2/1U5D/tGgWqMbNag4E/RH/SQwEkFyJv8tRL4CS7rO
kgQyTafsSm8Wo1j2PVZf/gycyr6WptvIR4UTOhk0VwI+DmSeOFTHQ/F32f5i
NwISXuemHA3goeMeEoMidwJa3LsXwhR4SLu2tnj3fgLiop5w+W430Y2UQw2J
AQQcqDTJihj4A520vP1J6TcC7GO7X98mpaIfrmg4U3IJcGpLy6JmXkVLWy6p
9Dz656/5tUV3go16JSMduQUE3M3c+SPTjI04+8t8nUoI2C+3x6qh4b9o2dAj
gl1LwI7umnK2NBb1vUnJlOskID6kREU1+Tx6cnXuWGc3AbYvhzJA/xzi2h7Z
+OAdARp6U9qc6gi0i88o3y4mILZgfpDzIRxVX2hpYk0SEO4/n6t3NRDxTCxS
3KcJoLMqhLHlx9CZ4TteegQByMV6r+6IP/rZ9dcB/JmA04v5cxZx+xBZtiuH
M0dA4I5NEmJwLxoU2ob4zxNgdr7RwT3WCdWGPNhk+p0AR7vlTzExlihNV/nL
8jIBG/xwN570rvsfzrzlpg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., -4.702984368468676},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Lambda]\"", TraditionalForm], None}, {
     FormBox["\"\[Eta]\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Automatic, Automatic}}, {{{{-4.605170185988091, 
        FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox["5", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.4849066497880004`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.5649493574615367`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.6390573296152584`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-4.605170185988091, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.4849066497880004`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.5649493574615367`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.6390573296152584`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{324.0546875, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {-4.702984368468676, 
   1.6603677271789614`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.646400746120895*^9, 3.646400784850089*^9}, {
   3.6464008276918373`*^9, 3.6464008646839857`*^9}, 3.646401284548765*^9, 
   3.646401404029707*^9, 3.646401717786158*^9, {3.6464023998590097`*^9, 
   3.646402410905472*^9}, 3.650041521374461*^9, {3.662825542065217*^9, 
   3.662825556677569*^9}, 3.66282579487044*^9, 3.6628258395781937`*^9, {
   3.662825974669408*^9, 3.662825996902875*^9}, 3.662826029038546*^9, 
   3.662830017568557*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MetapopDyn", "[", 
      RowBox[{
      "a_", ",", "\[Lambda]_", ",", "\[Eta]_", ",", "\[Mu]_", ",", "T_"}], 
      "]"}], " ", ":=", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"R", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"a", "*", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}]}], " ", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"X", "[", "t", "]"}], " ", "+", " ", 
              RowBox[{"Y", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"R", "[", "t", "]"}]}]}]}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Eta]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Eta]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], "*", 
            RowBox[{"X", "[", "t", "]"}]}], " ", "-", " ", 
           RowBox[{"\[Mu]", "*", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Y", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"\[Lambda]", "*", 
            RowBox[{"Y", "[", "t", "]"}]}], "-", 
           RowBox[{"\[Eta]", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"R", "[", "t", "]"}]}], ")"}], "*", 
            RowBox[{"Y", "[", "t", "]"}]}], " ", "+", 
           RowBox[{"\[Eta]", "*", " ", 
            RowBox[{"R", "[", "t", "]"}], " ", "*", " ", 
            RowBox[{"X", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"R", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0.05"}], ",", 
         RowBox[{
          RowBox[{"Y", "[", "0", "]"}], "\[Equal]", "0.05"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "X", ",", "Y"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "All"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "0.5"}], ",", 
       RowBox[{"\[Eta]", "=", "0.6"}], ",", 
       RowBox[{"\[Lambda]", "=", "0.5"}], ",", 
       RowBox[{"\[Mu]", "=", "0.2"}], ",", 
       RowBox[{"T", "=", "1000"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Traj", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"R", "[", "t", "]"}], ",", 
           RowBox[{"X", "[", "t", "]"}], ",", 
           RowBox[{"Y", "[", "t", "]"}]}], "}"}], "/.", 
         RowBox[{"MetapopDyn", "[", 
          RowBox[{
          "a", ",", "\[Lambda]", ",", "\[Eta]", ",", "\[Mu]", ",", "T"}], 
          "]"}]}], " ", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"LogPlot", "[", 
       RowBox[{"Traj", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.636818991590914*^9, 3.6368190277522917`*^9}, {
   3.636819069088731*^9, 3.6368191125387383`*^9}, {3.636819264811551*^9, 
   3.6368192980259027`*^9}, 3.6368225644646*^9, {3.636829939892223*^9, 
   3.636830014380571*^9}, {3.639404872826383*^9, 3.6394049722443237`*^9}, {
   3.6394050144911413`*^9, 3.639405019012155*^9}, {3.6394063834669647`*^9, 
   3.6394064149109983`*^9}, {3.6463985279599457`*^9, 3.646398609007303*^9}, {
   3.646398645453455*^9, 3.646398754993803*^9}, {3.646398793627618*^9, 
   3.646398828570057*^9}, {3.646398898504942*^9, 3.646398916564762*^9}, {
   3.646399089033573*^9, 3.646399093251112*^9}, {3.6463992694913187`*^9, 
   3.646399271481216*^9}, {3.646399330822397*^9, 3.646399353267209*^9}, {
   3.6463994019138317`*^9, 3.646399444394405*^9}, {3.646399508960676*^9, 
   3.646399534049861*^9}, {3.6463999152131853`*^9, 3.646400034745784*^9}, {
   3.646400132351523*^9, 3.6464001410179853`*^9}, {3.646400202948778*^9, 
   3.646400231178789*^9}, {3.646400293450811*^9, 3.64640029727627*^9}, {
   3.64640032943053*^9, 3.646400337373057*^9}, {3.6464003864565907`*^9, 
   3.646400422694214*^9}, {3.646400520282331*^9, 3.646400566181733*^9}, {
   3.646400624135583*^9, 3.6464006531024637`*^9}, 3.646401179779606*^9, {
   3.646401228337515*^9, 3.6464012464823647`*^9}, {3.646401330718317*^9, 
   3.646401371340569*^9}, {3.6464015850078363`*^9, 3.6464016957325993`*^9}, 
   3.646401762775374*^9, {3.6464017999694023`*^9, 3.6464018503358603`*^9}, {
   3.646401899187017*^9, 3.646401949408098*^9}, {3.64640634126847*^9, 
   3.6464063668609457`*^9}, {3.646408218641941*^9, 3.646408233012307*^9}, {
   3.662825861084404*^9, 3.6628259614785833`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
0YrNn7Rx9c/8svZ6Ghicb9yTZaaNOzZYCxR20OBAyAGhF2paeEmZczj3N+En
plz0zVF1vH0w7MJ6eTpIfWx3Puakgm3Mu0puK9ChIaGfmyaqgndztsrJrqPD
CR/104jY/w6SVuSsUKNDZ5a6fKKuMvYKifk9ok8Hi6ygzo4/ipgpeN//jRUd
ytYqJmttWoMrtMo8d/vQoc+6ONThiAROGNls/vYUHVbk3uTXMRXHntmvJDUC
6LCtYaVdp5gYXtiQ+uHfGToIHhj67wYWxoY7g1e9ukwHOk0zx85MAC8Ij4yu
u0oHvotx5w0U+XFZ9dEiTjgd3CtttVYsX46POe457RVBB/13Mq5ebUtx3Am1
yjUxdHCZSCup5PxBHtpJ9yJu0CGWEXLg9t05pD8qETIRRwffPpcrhwtnUMm5
P2pViXQ4r2oNohaTKHbj6T9myXS4rSF6KOHGb+Sx0F/74A4djpBu0cmL42iO
Vnfl2n06HGj/+9xadwSV7LQ5OJpBB7+PjX1yET/QDZGPui5ZdDA2lhaiSAyg
I1+M+EofEfETdFfh0l6kF/uwyegpHcwe3Y+Nf9qDZh3XPb/7nA7kriJ7u09d
qFg+niH2kg7nNGUyogU70I0OYddLr4n8dL+K7eptQe5p1ygDuXQI9pZez5Fp
Qjpe04IH3tLhdUfmvevx39CMtl8nfk8HSyM9XTvPr6hotDtH/yORv/QWs5SL
tSjmhRMnCdOhks6Ty876gtzOVx1bUUiHYzu33VXq/Ix0zLaZnSumQ2pclftO
XgWaXsiT6C6lg5rtyd7Sl2WoEBv076kg9F1xevvu7aUohp6e/+4zHY46HnXJ
21KCXG3kYzW/0MG//4nurrRipC0a4xNXS4dpL4ncDwRvTX/hh6X1dDhpvTLL
PbEYfYoNlQtooMOQ6e+LeqQSxHP6NdLSRIen67McflJKkevak4U7W4l+yV2C
/ZllSKuzLfF1Ox2shRsPLouvQJNpDkEqXYS+drk3i/mrUIFXmXV0Dx0MxDVo
lXw1KFrHUvFPLx28Sgd3eNbWIpexVxMnB+hQ0+54XGDmK9J4qV1R/4MOL38c
Gdsb1oAmzqfetRqhg4/F0drVgc0Im8leeDZGB5P0m0+uNLUhzl/2nrW/6CAs
+u+4l2cXci5YosaaoMPMhtnbRuk9SJ0RPD85RYebUt8e7zPtQ79tRmqOzhLr
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
WHcn7cFnNHAk8KqWDBu2fh54/aD/C5L7fKquXo4NR53Vl6T8rkU7Nnqrh69h
Q7ed1pSXaz06l348RF+BDc8o5s5ocyO6L3m0slmJDdXXApV5GS2o7rKbUoQK
G+4GOIRdT+9AFS7+s+pqbDDf1F06ktSNCjaG1RVrsEHvS0t8gWUvypPjPjmh
zQanygKFwp0DKHsyOYJfjw1TrTlvt+IhlFX3xCPDgA3yjo5vU16OodTsfPMd
ZDasrXo+GxT3CyVEf5bpM2LDtP79XWS5SRTt1zZGN2XD+izuuXs90yjCdqRM
zYwNS+Hfzn8LcyhMayGtyIIN3j+bH4Sd/IvOCYiGHbdkg+oV4w9R15dgv961
Tsut2NAkQz//9iYfPv5Jl5y+jQ3263tV/IqXY9e7FiLbrdkQdMbecN2aFXiX
62FE28UG3WRV9RhtUbzV/FSi6l42LLu7+srTLnFsvjr0bKEdGxLfhWYea5bE
OvVJmssc2fDE1D9SuGolFtzdwqN6sCE60fFdm7A8LrI45BF+ng1zh3a/sXZQ
xflrfMxVQoh61m32klmphl/NhMgUXGLDe3mayesaNZz26lbZkmtsyDpZ+tDX
SgNf020iXWOz4UfN3Dr5CS0cIjQorMxlA8N51b6Pcdo4cGCmF/HYcMM01KGH
rIPd769K/BdHzP/519xed128aa3T0qupbMhWR2bPr+hj4zmvVqU0wo/dA9/+
zetj3cbgnI/pRH+y3p57fMYAy8cm+Cw+ZIPC+x0nxvYbYunTD7bdecKGhoXr
D29/MMRC+3IVLZ+zwYIbrekmRcKzwg21Ya/ZkBp+2fRVIAmPD/Y9VnzDBhTJ
U7h4m4QHSqYYH96yoUVYt3xTMQl3pPN7uOWz4fJ0zhutURJuoMqa//3IBoqW
1amX0mRc7aEuk1LABun+Aqa0KRmXWJqMbSpig9iPU3LgRMY58wfSLpez4X5R
+m4US8abdvzn+rOSDRKcrEX6UzL+xNssd6yaDV2OEZtii8nYpoVcU1/DhsA9
0SJtrcT8ahrsnV+JsZPk/evjZHwgUH77u29sYn/mF2paRsGtb8UX9ZoIv/Pz
z98jzuNjy5flpbawQZw+uH5CnYIH986clm4n/OdEHx81puCAxGFdRidRf6U9
128rBU997+yb6WbDGg+1D4f3UvBlg/pU314i/xTrO/3OFMx3sexQez/hp8gK
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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
l39uYxrZ8h9+w5xBhWvkQXP/lklUfcuFOTGTCp8Pbk2+1T6GxLST9Nez6Pm4
3K3VkPqDYr6UpUTm0OuXKqOdujOMbv5qOzl6mQq75zSqlOKGUHPPFlG7PCpY
VXW8Nr06gJZ/6/W8L6CCcfbBkeylPiQ9EXF73zUqWBhcLdY91ItOzJcH3Cmm
gkpuvvcPQjcKX+vfS7hBBVA8arI7phNdZyJspt6k99+AUi/q2oEaOU+8X7xN
hT4K1xWO1+1olp980eseFfSIYvbXs9rRVuIL258PqNBpzdZKqKf7k21j2wwe
UaHxHEvdkkkHCpCXGn1eQQURr+C2UtlOlLfLukLuGRWk3h9U+6vVhV5rpEde
fk6FMJmQKWpiN/qrjYC1mgpXr7177DHTg4SPzHOE19Lr05MvdNftQzpGil+H
XlKhjVBW+Ei0H50xd8q3QlRgFaxvubzQj2qdGxU16qngf2pJXfP9IHKJLTKa
+0x/n2bpkko5I6j8uX5GcD/9/eyJV2qzmUI/X0ZZ9Q9SwclzelhUYRptvn0k
bj5MhXm95un3N6eRxTfiwz1jVEBRDnJ7r8+g5cnxz1PzVLAU7K9QujSH9BUu
8wVwpIHi3NPS3RFLqLvgd7bv7jRg+J0tY3hkE+lJZuzhU0uD5Hv8vwqaNtHt
UrXmZxppoJ18492iAgMOupvA+W9/Gkw0v44+XsGAWV6QEi/qp0HVL5uRyTpG
vPPrSf9K+zTgdNZ+t7+LGUexvzi2kZwGBRfuJrSIcmCRsNT1S21pQFTpvbV+
lB9zeAhEc3amQVOdwrWLnvx43bJoKbE7DaTnX2VJp/DjIfWns4EDaRCksuWs
YT0/rpzrHj05ngZ+ck1tOXoC2CJU8wcnAw1EaUGZCocF8cWQoYfkHTT4NdSc
p6wljJPcAneuKNLAv0dse7WtMD5nsXo3SJkGOf3ZyXoRwthJjf+msyoNdNnU
xC1fCGOVWe2CQ9o0uE8uueeoIYI/BeekrpjQ4J7/fwce7BbF2FWSJdicBjqO
61pzJqK40vweedSSvr7h8dndAaK4UBXF/rKjwRL/7pux5aLYd+ZvyHM3Grx7
cshYSoGAOYP1nIPP0eDw+LKYJYGItbp1nkpE0aD0vWyV2l4i9j6uzdoUQ4Mk
UfngBCsibtiu8UCaTAO7+WzLlUwiXriwZ6M5mQYtRPuy0ftELLuqbB6TSgNN
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
3yfdhcj/ASQbhsE=
     "]]}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., -20.935339506027695`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Automatic, Automatic}}, {{{{-16.11809565095832, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-20.72326583694641, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-16.11809565095832, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-9.210340371976182, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-20.72326583694641, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{761.76171875, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 999.9999795918368}, {-20.935339506027695`, 
   2.1767696767523312`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.646401204160153*^9, 3.646401247275033*^9}, {
   3.6464013547812634`*^9, 3.6464013717914553`*^9}, {3.646401585698496*^9, 
   3.64640169676338*^9}, 3.646401763527343*^9, {3.646401800940693*^9, 
   3.646401851275248*^9}, {3.6464018999240847`*^9, 3.646401949882011*^9}, {
   3.646406342749927*^9, 3.646406367989051*^9}, {3.6464082224573917`*^9, 
   3.646408233786303*^9}, {3.662825897175045*^9, 3.662825962102894*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hsp2", " ", "=", 
   RowBox[{"HopfAnalytic", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", "\[Rule]", "0.5"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", 
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Hsp2", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
   RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "1"}], "]"}], ",", 
        RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "2"}], "]"}], ",", 
        RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Eta]\>\"", ",", "\"\<\[Mu]\>\"", ",", "\"\<\[Lambda]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<SN\>\"", ",", "\"\<Hopf\>\""}], "}"}]}], ",", 
   RowBox[{"Lighting", "->", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\"\<Ambient\>\"", ",", " ", "White"}], "}"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.646400879021022*^9, 3.646400917455304*^9}, {
   3.6464009697528353`*^9, 3.646400986103135*^9}, {3.646401137815827*^9, 
   3.6464011427707253`*^9}, {3.646401419763637*^9, 3.646401428023664*^9}, {
   3.646402201642568*^9, 3.646402202181402*^9}, 3.646404414417719*^9, {
   3.646404467448902*^9, 3.64640452131289*^9}, {3.646404553849976*^9, 
   3.6464045646835413`*^9}, {3.646404596680439*^9, 3.646404603883389*^9}, {
   3.6464050318147573`*^9, 3.646405055299224*^9}, {3.646405446345079*^9, 
   3.646405668732765*^9}, {3.646405724923647*^9, 3.646405828886814*^9}, {
   3.646405921423428*^9, 3.646405955535101*^9}, {3.64640606800887*^9, 
   3.646406075681841*^9}, {3.646406139068281*^9, 3.646406198963415*^9}, {
   3.646406503456519*^9, 3.646406525873679*^9}, {3.650041548705781*^9, 
   3.650041549167699*^9}, {3.662826056418548*^9, 3.662826102677137*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
     "], {{{
        EdgeForm[], 
        Directive[Lighting -> {{"Ambient", 
            GrayLevel[1]}}, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Opacity[0.8]], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRESEgEgIDEwMEFAQFFQUGFgYH
FwcIGAgJGQkKGgoLGwsMHAwNHQ0O7+XkIBARIRESIhITIxMUJBQVJRUWJhYX
JxcYKBgZKRkaKhobKxscMCAhLBwdLR0eRzc4MSEiNCQlNSUmNiYnNycoLx8g
OCgpOSkqOiorPCwtPi4vPy8wQDAxRjY3QTEyRTU2OyssQzM0RDQ1QjIzMyMk
SDg5bFxdSjo7Szs8TT0+Tj4/Tz9AUEBBUUFCUkJDU0NEVERFVUVGVkZHV0dI
WEhJWUlKWkpLXExNXU1OXk5PX09QYFBRYVFSYlJTY1NUZFRVZVVWaVlaZlZX
Z1dYSTk6a1tcbV1ebl5fb19gcGBhaFhZcWFicmJjc2NkdWVmdmZnd2doeGhp
f29wemprfm5vdGRlfGxtfW1ue2tsECAfgHBxgnJzhHR1uamqjX1+g3N0hXV2
nIyNjHx9iXl6hnZ3j3+Ai3t8kICBmYmKk4OElISFuKipkoKDlYWGloaHmoqL
m4uMmIiJkYGCinp7h3d4nY2OoZGSopKTqJiZoJCRo5OUqZmatKSlpJSVno6P
rJydqpqbq5ucsqKjrp6fn4+Qjn5/rZ2e38/Qt6eosKChs6OktqansaGir5+g
MiIjuqqr7ejSvKytva2uvq6vv6+w1cXGwLCxxbW2xra3wrKzx7e4w7O0yLi5
yrq7y7u8zLy9zb2+zr6/z7/A0MDB0cHC0sLD5sXUybm6wbGyu6us1sbH2cnK
2srL28vM3MzN18fI3c3O4+IQAhIR4NDRAxMSBBQTBRUUBhYVCBgXCRkY2MjJ
BxcW3s7PChoZDBwbDR0cgXFy5B0OCxsassLBEiIhqLi3FCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MgpKRg5OShJSTiZmYhZWUhpaV
nq6tipqZjJybjZ2cjp6dj5+eiJiXi5uakKCfkqKhmKinlKSjlaWkmamomqqp
na2sk6Oim6uqnKyrkaGgEyMin6+uobGwpra1orKxo7OyoLCvp7e2qbm4qrq5
q7u6rLy7pLSzrb28rr69r7++scHAs8PCtcXEtsbFl6emt8fGu8vKsMC/ucnI
usrJuMjHvMzLvc3Mvs7N8OfmwNDPwdHQxdXUxtbVydnYy9vax9fWyNjXwtLR
ytrZzNzb5OUezt7dz9/e0ODf6ODRxebE7uriHeQezd3c8u7j6+QOEOIRpZWW
7ObU7/MPv8/O4uoC0ujR8+/r9fHt9+8P9PDs9u4B4+7i8eno6Ong6+/k+PDT
8PTT+fHh7vIB8fXh5ufE7vbq8Pjn7PDm7fHo7/fl8fnpp5eYQQheKQ==
           "]]}]}, {
        EdgeForm[], 
        Directive[Lighting -> {{"Ambient", 
            GrayLevel[1]}}, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         Opacity[0.8]], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxNmXm8l0UVxu8MLoFLIqBc2QL0KrssV1AxDAERDHEBFEsUUXBFRFCU3FcI
tVyzyLQ0TctcUNPUynJrMcs0cyt3rT6pmeXu+Tbf9zP8ce7zzrzznnnmzLzn
PL/39p27cK+jc0tLy6j40yHw+dTS8tewzcI2Dvsk+loCB8T9zcMe5V7gh9Hd
Ka43SOX6o7ANU8GPwz6bynMpbKNU+vC1iX05bGD42SLs93G9aViHsHXCuojr
hnULWy9s/bAtUp1zk1x4wrez/ni+NZcxrWE9HAuvwWG9wnqH9XO+LvZt5Fp7
i3DvI8L3cyLz9Pe5rmFbinDcSiRug8J66nsbucC9d3DrFfaYz63r2nrmMmZr
n9tQTgNdA30D9EF777AJYRPDhsgbvsPk2jdsW5G1DhfhPkKE+0gR7v2CQ9+w
P+AjFy7tYdvJi3WMFuEyRoTj9iLr3kEk3uPkwfxj5To0bCcRvp8XGbezY0fI
vbP79AX74DtNv4zdJWyUPCesxXeiCN9JInx3FeE7WYTvbuKOYVNE+E4V4bu7
CN8viuNcRx/jvoe84Pt42Piw6WF7eg3fP8qZ9l72wX0fecP322EXhF0YNlPe
8J0lwndfEb77ifCdLcJ3fxG+XxKJ35dF+P5JjgeEHSQnztd2ufCeE3aIPJj/
QNfDuEPtg8vBrmFG2Fx9NO1JrmG+Y+F7nH7xcZi84Xu4CN8jRPgOCj5bhj0R
1/1z4XVU2NFyhNdCkXUcI8JlkQjHY8V5YYtFeJwgD+ZfIi/4LhUXhB0vHibu
J2/OC+ed871MH3C/KOzMsLPCTnNu5ly+FveviHA/WYT7KSLcT/c5YnaGuETf
S+S4IuwkfZ/jepY591K5n6o/eJxtH+O+Kg/mPy/sRH392etzw9py4Uz/Sufh
mW3IFWFPxvXFzofvC5yPdV8oso6viazj6yLruMTn4P6Uc14adpnX8Foddr6+
r5AH3C/3PjFY5TqI3zfsW+lzp8jpW46j75v6WOWeLHeNV8obvlfJlf28WmSt
3xXh/hf5fi/smrW4XyvC8fsivK4TWcf1Ilx+IMLxBpF13yiSG26WB/P/SK7f
CbtJhO+PRcY9La9bwn6oD565dS2+z3j/52Fr5A3f20X43iHC904Rvj8R4XuX
CN+7Reb8qQjfe0T43ivC9z6R9f1KHsz/C7nB937xtrBfimvEa+RNnaQ2Uauo
lwNtPyRv+D4swvcREb6/FuH7GxG+vxXh+3bYv+SLJkIPdUxFB6E30B+NHqKN
9qGe00YDoTFoN1qHGocmQmOgOdAynW138D5t9EJXn3nA2LAnaIhu3mt0CTUe
bYUe6i4n4tIqpx624dTTNpx62W70UK9U9VDvVPVQHzn1tQ3Hfra7OD/tB+V4
Z6o6CX7oIHRPm5zYK3TG845D75FXyDsnymmQe0ltIZ8fJCfy7mA5DbUNp2G2
Gz00LFU9tG2qemh4qnro/9ojFw00Sk5oifZUNRDtRgONTlXTjE1VA20vpx1t
D/H+jqnqnp1S1U9j5DTOe43O2F1OaAq0BZzQDONT1T27pKp7JqSqeyamqnsm
pap7dk1V90xOVffslqrumZKq7pnqHNT8PeU4TX5w2sP2eO9PN6Y7O5acRB4l
h/YyLoPkhD7YR04zbTdaZ2aqWmdWqlpn31S1zn6pap3ZqWqd/VPVOrTRMwek
qsfQCXNc00G2mYO6f4ic0Alz5TTP9kzvz5PHfJ8h7nvrD04LvNdoiCWp6pvD
UtU3tNE1aJoj5YQeOCpVTXN0qppmYaqa5phUNc2iVDXNsXI8zvahzk97omvb
O1VNs1ROJ9iG0zLbs1PVO/yeIxds7FwzjAf5b7C/CdEE1FNqLnV4lW38Ut8b
PQI2+gVEB1Cbqe3np6p10ArL9bdCTufoq6kZ5OSmvpL/qb3UAmpbk7vJ5Sfp
o9E4INqiqUP3pKq9Tjamp9putAuagHNMbeVcN5rgKtdKvW40BXiFzzGWmvtv
Yhixeta1UotX6/dK2+zfac692LlPk8f5ztPoKnw0WuRq76+Wx0rnR2c0dZd6
Ri2lplLrm7p+e6q6odERN6WqL8BGO4A3pqoP1qSqaehrNMGd7sGtzknd7JxL
7Wy0L3vbNZff859x327zGdZzs5yuTbXON3ri7lT103Wpaibmb+r6w6nW9Uf0
gbZotAPYaIr7jUujXe5KVZNdn6pueMh1P6CvRp/dkKo2uiNVPcRzjRa8xvv4
aGrjg/paYRw5y40+5uzwflxk+6VUfkOSa/+RirYjtujwV1PJIT3i+m+pfFfp
HtfPpfLd5r2wl1P5zfdiKr/1qScfhb2RioZ9PRXdz3vxWtiHqWj7Trlcv6bR
xzv0iv7IrVvJ4Qn9oeMvFV/XZ58Y80Iq30Dgwu9kcvK60f8/1/dJ2Dup8H4r
FU2AHhjoWtBa3ezne0tv14vO+bvr4Nzxm/EVuaW4fjeVcf9MRe9y/gf4Ln7Q
Ur6BwK3NGL9ofB6X13jX+rKc4djiN7H/yPs5/X/sHF1yOfNv6++/xp0cQC54
P1xs6vl/y9i/Zmzh+q77+Iz7fYtzvOOe8i6R38hf5NSLPSvkx0tsE/fL3ItG
1/I+kP8u916LfB41fm84/mljSjw3ymVdzfo2zoXXDrns30uubx2/I8E9+32P
c/GBZ+Njff3M8/O+cWX+Z+VAX8dc+lnjm67zPtv3Gu8ZucSCGL/pPc7zBrms
gTO/fi57hr/3nGt+LrFnzsPjerb3+viNjjMwVG2Pdh5ijaPdzT39XSr7tqm5
i74u9nf3e2lHx3T1e+UQ+zlvPfz+ybkdlst8rd7v7rl6Tl/42db7rZ6NHms9
u4VjOsuPWNDXw/gPz+V5NPfIsBFq3BdcM+tlD8/yPRxuHPAP9vaa94Hn2j3H
fdXJW/l9hvwzSj2DhhljP+8gc/XzbNA3xnEj/fbY5vjR9o+Q79bO088xrB0+
j+mHuZ+Q1wjHE8MBxpl3id8R1H/y1tb+pmjP5fpI+7bxmjM4wPhzbul/0ngO
NM6buV8d5TDINXKeB8mH8zJEDowd5vjN7d/MfDbQPWrVZyfnGuZ+v2p84TbC
eBGHnu5pq2dj+Fr7NdzY9TQmbcZwpPtOfEfps81r9qu/8UeHopPRzdPd03bH
tzu+zfi1e90qn+4+N9qYgNvpE2593Dve/5NyyQfUlnPjelHYeWFLcnmP9ww8
OJccdGjgXrnkwQMD98ilrix1LHlrc/POrFy/qaEzjoj2ObnkoOmBx4VtGHZM
2AT3F39z9Hls4MRc8vG8XHjA4Wx9nJhLbjszl9y/PJcaw9lcFjgzl7y0b+C0
XHL/aM88MWF9c+U9WS5Pmc+W+ezxgVNyycHkrv1zyVEdAscaw31yyWXksQWB
p+Zyf7dc4kJMiNkhxg0fh+vn9FzyLGd2vbgel0vdIxeu7xi4k9PhPymXuBCT
xYGrcsmzb5njqMcLA/mHEnrhyLBdcnkXpuayHtZyRi65m7h9CnvO44c=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtkTdLRUEQRu8dHyoqttZW/gZzwBwaFQMYnwHFVGghRrTQQv1vhocZwRyx
MSAY8HzMFoc5u9yd++1OfnKmddqiKCqABPSzqIXjOIoeoQRfgkt8Dz7gAnah
mP1BqIcT1k8whDfAKf4Mat4LP3gWtRCu8H0ow2ugDx5i/+civgWv+B9U46tw
jx/BCN4EZ/gL1OED5lmVoRzvgmv8AKbwSTjEv6EFb4c3PKKWwhikmd9vOezJ
lXMn3FF3yw5ZZ8zvoswr1Anz3srYjI+aZzuHRnzY/C2UORHeQHfXG3SYZ1KW
d9bz5j10Npc6Dt1wyzqDauYz0NtrBjfwBRXm982kFkElpGI/WxVcPTbxDVgI
mdeo63CH94Sz6qnv1eOTGlPzqJ2h17b5f1Iho+akebWZZ0kPWZRpznxGmk0O
NQmz5m/5y94/SlVWoA==
           "]], 
          
          Polygon3DBox[{{648, 624, 471, 508, 625}, {579, 641, 604, 486, 
           470}, {650, 632, 526, 595, 494}}]}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136, 
         151, 166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 216,
          217, 218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 237, 
         210, 195, 180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 229, 247,
          15, 243, 235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 234, 
         246}]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0rlOVFEcwOE7w8wgCcREEWsLOjoqCca4sIoMTtC4BJFFQZbBsKgTlFUc
cSnt7HwCn0BlERDlDUgIjRVGSVAj63dD8eV38s89Nzf3nFOtfal0JAiCdxyN
BsF/7dBGLnONDFfZ9+CkbukzjfLH+iQR6yeUk8MYnZzhKeueOa0x/lrX63XO
kuCf2ZTGKeMIrznPDe6Ty026uEVe+L32Teg4F+ihl23z55qlmxF+mI3qRR7w
gh2zJk3Tx20q6KeSZpLcoYpBGsinmhbeMEArQ0yz670PtYY2rtBOLY+4xF1S
3KOOx7zkp72vdJhP1gW6oZ+ZYZY55vnCAoss8ZVlvvGdX5ywf0WP66Z+5APv
eUuWDN3hvyDJOUoppog1CsNz0WP6W3NJECdGDtHwLoQXin3ZY5cdSsJz0dXI
4V07AG8KSk4=
         "]]}}}, VertexNormals -> CompressedData["
1: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
      "]], {
    DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox["\"\[Eta]\"", TraditionalForm], 
       FormBox["\"\[Mu]\"", TraditionalForm], 
       FormBox["\"\[Lambda]\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
     DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
     Lighting -> {{"Ambient", 
        GrayLevel[1]}}, Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
     PlotRange -> {{0, 1}, {0, 1}, {0, 1}}, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], Automatic}, Ticks -> {Automatic, Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"SN\"", "\"Hopf\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> {{"Ambient", 
                    GrayLevel[1]}}, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.8]]}, Lighting -> {{"Ambient", 
                    GrayLevel[1]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> {{"Ambient", 
                    GrayLevel[1]}}, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.8]]}, Lighting -> {{"Ambient", 
                    GrayLevel[1]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "}"}], "}"}]}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "}"}], "}"}]}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6464055563773117`*^9, 3.6464056737718773`*^9}, {
   3.64640573702568*^9, 3.646405801096657*^9}, 3.646405833992259*^9, {
   3.646405931055196*^9, 3.646405961098241*^9}, {3.646406073004846*^9, 
   3.646406081294437*^9}, {3.6464061559672213`*^9, 3.646406204481382*^9}, {
   3.646406512949548*^9, 3.646406531545368*^9}, {3.650041542826109*^9, 
   3.650041553634326*^9}, {3.6628260615576572`*^9, 3.6628261044518013`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HopfData", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"Re", "[", 
         RowBox[{"N", "[", 
          RowBox[{"\[Lambda]", "/.", 
           RowBox[{"Hsp", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.1", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"HopfData", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"HopfNumSol2down", ",", "2"}], "]"}], "/.", 
         RowBox[{"\[Sigma]", "\[Rule]", "\"\<NA\>\""}]}], ",", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"HopfNumSol2up", ",", "2"}], "]"}], "/.", 
         RowBox[{"\[Sigma]", "\[Rule]", "\"\<NA\>\""}]}]}], "}"}], "]"}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/HopfData.csv\>\"", ",", "HopfData", ",", "\"\<CSV\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.63863990560841*^9, 3.638639926239593*^9}, {
  3.638644045909617*^9, 3.638644116989501*^9}, {3.638644615893413*^9, 
  3.638644650687533*^9}, {3.638644722860569*^9, 3.63864472443217*^9}, {
  3.638644849694337*^9, 3.6386448735325108`*^9}, {3.638645000877178*^9, 
  3.6386450203725367`*^9}, {3.6386450510972853`*^9, 3.638645067085988*^9}, {
  3.639920040670121*^9, 3.6399200436684933`*^9}, {3.646402216221128*^9, 
  3.646402289504469*^9}, {3.646402320288471*^9, 3.646402390873472*^9}, {
  3.646402442501273*^9, 3.646402455707924*^9}, {3.6464030697012367`*^9, 
  3.646403089724263*^9}, {3.6464031345594397`*^9, 3.646403138271303*^9}, {
  3.64640538319866*^9, 3.646405388648613*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/HopfData.csv\"\>"], "Output",
 CellChangeTimes->{{3.646402358736553*^9, 3.646402418105988*^9}, {
   3.646402448394082*^9, 3.646402456359692*^9}, 3.6464030924486723`*^9, 
   3.646403140009247*^9, 3.646405392496331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"RandomReal", "[", 
   RowBox[{"{", 
    RowBox[{"0.001", ",", "1000"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6628263358651743`*^9, 3.662826336296359*^9}, {
  3.662826851329584*^9, 3.662826870442465*^9}}],

Cell[BoxData["65.41483578590169`"], "Output",
 CellChangeTimes->{{3.662826856362562*^9, 3.6628268717983437`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Remove", "[", "b", "]"}]], "Input",
 CellChangeTimes->{{3.662826428295061*^9, 3.66282643070918*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"SppData", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"B0", " ", "=", " ", 
       RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bm", " ", "=", " ", 
       RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"m0", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0.001", ",", "1000"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", "0.75"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Epsilon]", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "10"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"md", " ", "=", " ", 
       RowBox[{"\[Epsilon]", "*", "m0"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b", " ", "=", " ", "600"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", " ", "=", " ", 
       RowBox[{
        FractionBox["B0", "Bm"], "*", "b"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Eta]", "*", 
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{
            FractionBox["b", "a"], "*", 
            SuperscriptBox["md", 
             RowBox[{"1", "-", "\[Beta]"}]]}]}], ")"}]}], ",", 
        FractionBox[
         RowBox[{"Log", "[", 
          FractionBox["md", "m0"], "]"}], 
         RowBox[{
          FractionBox["1", 
           RowBox[{"b", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Beta]"}], ")"}]}]], "*", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"1", " ", "-", " ", 
             RowBox[{
              FractionBox["b", "a"], "*", 
              SuperscriptBox["m0", 
               RowBox[{"1", "-", "\[Beta]"}]]}]}], 
            RowBox[{"1", " ", "-", " ", 
             RowBox[{
              FractionBox["b", "a"], "*", 
              SuperscriptBox["md", 
               RowBox[{"1", "-", "\[Beta]"}]]}]}]], "]"}]}]]}], "}"}]}], ",", 
     
     RowBox[{"{", "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.66282633984525*^9, 3.662826669942676*^9}, {
  3.662826742173698*^9, 3.662826844052639*^9}, {3.662826878872706*^9, 
  3.66282690049647*^9}, {3.662832295671022*^9, 3.6628322962775784`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Table", "::", "itform"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\({}\\)\[NoBreak] at position \
\[NoBreak]\\!\\(2\\)\[NoBreak] does not have the correct form for an \
iterator. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/itform\\\", ButtonNote -> \
\\\"Table::itform\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662832296906472*^9}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"B0", "=", 
     RowBox[{"RandomReal", "[", "]"}]}], ";", 
    RowBox[{"Bm", "=", 
     RowBox[{"RandomReal", "[", "]"}]}], ";", 
    RowBox[{"m0", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001`", ",", "1000"}], "}"}], "]"}]}], ";", 
    RowBox[{"\[Beta]", "=", "0.75`"}], ";", 
    RowBox[{"\[Epsilon]", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "10"}], "}"}], "]"}]}], ";", 
    RowBox[{"md", "=", 
     RowBox[{"\[Epsilon]", " ", "m0"}]}], ";", 
    RowBox[{"b", "=", "600"}], ";", 
    RowBox[{"a", "=", 
     FractionBox[
      RowBox[{"B0", " ", "b"}], "Bm"]}], ";", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Eta]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"b", " ", 
           SuperscriptBox["md", 
            RowBox[{"1", "-", "\[Beta]"}]]}], "a"]}], ")"}]}], ",", 
      FractionBox[
       RowBox[{"Log", "[", 
        FractionBox["md", "m0"], "]"}], 
       FractionBox[
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"b", " ", 
             SuperscriptBox["m0", 
              RowBox[{"1", "-", "\[Beta]"}]]}], "a"]}], 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"b", " ", 
             SuperscriptBox["md", 
              RowBox[{"1", "-", "\[Beta]"}]]}], "a"]}]], "]"}], 
        RowBox[{"b", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Beta]"}], ")"}]}]]]}], "}"}]}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.662832296914234*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SppData", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"b", " ", "=", " ", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0.000001", ",", "0.00001"}], "}"}], "]"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"b", " ", "=", " ", "0.08"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{"0.00002", ",", "1"}], "}"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"\[Epsilon]", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "20"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]0", " ", "=", " ", "x"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Eta]", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Eta]", "*", "\[Gamma]0"}], ",", 
        RowBox[{"N", "[", " ", 
         FractionBox[
          RowBox[{"Log", "[", "\[Epsilon]", "]"}], 
          RowBox[{
           FractionBox["1", 
            RowBox[{"b", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Beta]"}], ")"}]}]], "*", 
           RowBox[{"Log", "[", 
            FractionBox["\[Gamma]0", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["\[Epsilon]", 
                RowBox[{"1", "-", "\[Beta]"}]], "*", 
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Gamma]0"}], ")"}]}]}]], "]"}]}]], 
         "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.0001", ",", "1", ",", "0.0001"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Colors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Black", ",", "Transparent", ",", "Transparent", ",", "Gray"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"SppData", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Fraction of B to growth (\[Proportional] Starvation/Recovery \
rate)\>\"", ",", "\"\<Population growth rate\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"ColorData", "[", 
        RowBox[{"97", ",", "1"}], "]"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"\[Lambda]", "/.", 
         RowBox[{"Hsp", "[", 
          RowBox[{"[", "x", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Eta]", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Eta]\>\"", ",", "\"\<\[Lambda]\>\""}], "}"}]}], ",", 
        
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Colors", "[", 
          RowBox[{"[", "x", "]"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.662829004077982*^9, 3.6628292179921913`*^9}, {
   3.662829249089114*^9, 3.662829300329172*^9}, {3.662829349537655*^9, 
   3.6628295007732487`*^9}, {3.662829556529833*^9, 3.6628296232850437`*^9}, 
   3.66282968920401*^9, {3.662829781150975*^9, 3.662829781678225*^9}, {
   3.662829820648666*^9, 3.662829897740473*^9}, {3.6628299924624653`*^9, 
   3.6628299942829323`*^9}, {3.662830072517818*^9, 3.6628300800654078`*^9}, {
   3.662830111275455*^9, 3.662830150100445*^9}, {3.6628302060920687`*^9, 
   3.662830227027012*^9}, {3.6628303902571297`*^9, 3.662830484002282*^9}, {
   3.662831685745405*^9, 3.6628317059166*^9}, {3.662831757274156*^9, 
   3.6628318790796213`*^9}, {3.662832041532629*^9, 3.662832043272098*^9}, {
   3.662832307287486*^9, 3.662832334541666*^9}, {3.6628323679771442`*^9, 
   3.662832369685506*^9}, {3.6628388229310827`*^9, 3.662838847355082*^9}, {
   3.662839319085568*^9, 3.6628393824073277`*^9}, {3.662839413372612*^9, 
   3.662839546722831*^9}, {3.662839581242298*^9, 3.662839763359665*^9}, {
   3.662839847380988*^9, 3.66283985727798*^9}, 3.6628399049947767`*^9, {
   3.662839936078824*^9, 3.662840081194171*^9}, 3.6628401130558863`*^9, {
   3.66284032398287*^9, 3.662840345276697*^9}, {3.6628403795023813`*^9, 
   3.662840417156453*^9}, {3.6628405147177877`*^9, 3.662840523492728*^9}, {
   3.662840581477558*^9, 3.662840584800375*^9}, {3.662841525499023*^9, 
   3.6628416660360317`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.662831841301572*^9, 3.662831879534553*^9}, {
   3.662832044312796*^9, 3.66283205029039*^9}, {3.662832318734603*^9, 
   3.6628323353103848`*^9}, 3.6628323732366667`*^9, {3.662838835150072*^9, 
   3.6628388477265673`*^9}, {3.662839322222187*^9, 3.6628393840797873`*^9}, {
   3.66283941523973*^9, 3.66283943981572*^9}, {3.662839470472454*^9, 
   3.662839547156845*^9}, 3.662839583476334*^9, {3.6628396247394657`*^9, 
   3.662839763887602*^9}, {3.662839851213499*^9, 3.662839857744486*^9}, 
   3.662839965445524*^9, {3.662840020762026*^9, 3.6628400285663233`*^9}, {
   3.662840059771373*^9, 3.662840083658502*^9}, 3.662840114274221*^9, {
   3.6628403375042067`*^9, 3.66284034607022*^9}, {3.662840384659684*^9, 
   3.662840417943573*^9}, {3.662840518931489*^9, 3.662840524126341*^9}, 
   3.6628405865165443`*^9, {3.66284156198704*^9, 3.662841666566186*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
v2b/b3XoRN96ochfF9P+mf3/uzQyBPWYxbT8x+Imne7EIJ/N/r5dkObxjwjU
ZxZTjT5FLovmymhRRcKHjedxzf6+a5SI/HYxGaaccFy7UQF/lM0v/YJMzxlx
8EeLaQUFK8qmxCO/XUzKyRq9WN8b+W02PuuWBF7XJ6C/KRufQxK2ymPj4JMW
06HT6q7auXJqUpHfLqbtNYpab7oegfx2MSXnDcoZc9sbfmkxFdz6SZ87yuGX
FlPpnPrv3ZITkf8upmPbzR738gkkscIvLaYZjf56X5kejnx4MeVuda0zRxMJ
v7SYGrQa8MU33h358WKSm8yYE9YkhlL+X66UXEwLbdbMvbEqEv4pGw+evWzT
HBKQLy+mTfYb3mfL/ZEPL6Zfnp1P8K9j4KcWU2f9wIhl/dh+r6IdZTGddDnl
Xau2girbIxZTTKMaXxWZ/rS2In9eTM86r47dezUJ9afFdKTvxMKUtgr4rOz6
nu71dUn7JOTXi+nM7gGrNGluNKoiAVtMxdeX3htgVCDf/v/5/HPP7Tp+1Kgi
AcWu/9WsBoPahSPfXkyLxd9hGWy9rMy3F9OWV6faX+gWTRXpNH0xvfzPRO45
Wob8ezE5fbyQ62kThfx7MbUZ8zfj1UIZ+pcVU+3hkec9dkXCl2Xx4Vd8945d
5FSRznpdTIMP/ug1dmcA8vXF9PnPhvt+r2TI17Pr//ts6wG/FMjXF5PFbesT
5y4pkJ8vpinGoLW/nCORjy+m115+k05oq/xbNn+fmtrc2ZaEfHwxHRbSziv2
ByD/Xsz25b0yt7QLQ/1sMVl7hzg2C3RD/ayeFmXKTrZcEY78vJ5CYl5NblM/
AT6unrYrMtTPzRKQr9eT+/u98V0eJ6HeVk98xNDAsOFJqLfVUzWrQ+Z3LaKR
z9eTVd8h5Q/neyF/r6dayw1H2i0KQb5eTx5eWdkNj8spvKJfpp7Ofu7RdbtL
EPxePX3K3/nBfJUH8vl6sl5p+eIK54X+b3pyKJjv/PNBNPL7ejqkvtx9VO+z
yO/rqY5Dtfe3j0Ugn6+nCdtuZgn3opHPZz9b9ar5LSqJrCoSsHo64DB6/2tl
JPL5enp8sEPZwrZVfrCeBjt51zZbqkA+X09FNgMGbF4lp4rL2VdP8RO62N7M
ikA+X08DUxIzWxYnoh+dniwmLMpeoPZEfl9PcZ5zL6jYebYyv6+n9bOSvgdt
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
FHwb56/dF6/qbePg2yRaWtjWaFgSB98m0WjX2UHE+4li3ybRqOaXFg2sZoRv
4+dnDjxXfrwRvk2iz3M65/4yGuDb+HpbDl0njo6Cb5NoiHWu7fEzavg2iYoO
Vpv5c58Wvo3z+UzwcW+nWPg2iVaK7xw7F/rBt0m0pflb2aFbCHwbx79v7Mn1
v/wo9J9v4/qzaXD3AzYa+DaJHq61DtrF9bXYt/H6t6r3Wr0hAr5NouPHHQ1j
l4XBt/F6zbKOndtbD9/G97/1V1TDsSW+TaIeLeY0cLMLgW+T6NJi70NN/hrh
2zh/1WcWBl2MhG/j+tZkZ8TLoSa69M+3SfRg64bEwCtx8G38PJ1fJbr6R8G3
SbSnZnLT7xax8G0S3WtV9VAPnr+LfRvXm6J+jubWRvg2iercSh5ZWD4Svk2i
xLUtfeYejIdvk+jWty8tLzrr4NskarW2jF6/3hO+TSLX59eXLLIIpVX/fBvn
e0ON1ZmBGvg2ib4dedjg6aVY+DaJmrpUu+8+2gTfJlHynebt7GxN8G0SnexW
a3bNgQb4Nolm3KhYu52jBr5Nokqr3ZtaTQ6Ab+P6a/l0xOo3evg2iebN97X9
dT8Cvk0iY801A6fx/rUYbHH8HAvKvlJeB98m0fepow91XuoP38bPu8eRa1/f
x8O3SVT9hNfSjIux8G0SzY66XmH1MDV8G8f/jAsXXSoa4NskOhFctnv6glD4
NokuN9wzxGm1Fr5NokibyEH2bjr4Nn4+0xa/CRrqBd8mUb1r7eb8KBsD3yZR
51F/8k7uCYVv43j6K+bs9TfiPC+uz5U+f42QjPBuEmWse7mra5YW3o3rp9fJ
fiZjNLwb59OSDffO6Uq8m0Qp9bNLDV7xAt5NIhuT56IPAXHwbhKNKPp+SpoS
Ce8mUbePN689nK2Fd5Pobg2p8uJS4fBufL9OUzfNXGSCd5NI9cbJplKlEu/G
95/ay9j7ejy8m0T3F7W1LTtbBe8mUcTYToG7m5Z4N4k+hV/o3FqngneTaO6l
LWl+hdHwbhL92eFT2GxdHLybRMvNiScPbTLCu3E9OxixrJOsh3eT6L/sDXLZ
xnp4N86Xara3pzeKhXfj+OveZKPtaBW8m0S/adoC64fx8G4SDW5q4ThhawC8
m0TPKgXtqFMrDN5NIju/Pa98kk3wbhIdPbfBZ+jxGHg3iSw8vpwaujoU3o3n
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
q71CM488HPbvEeKBIRqV5OFwPlnr1XzMqCAPJ0HR4x7j1Hhv5x4O58n79d6a
ZjXk4bDfX3QtbOsqkoeToEWChaDZQSQPJwEzu1QQl1pJHg7zzMMNg3JATR5O
gq5hQ3b1GV1FHg7n9cKpe8dal5CHk+Cz3vNmi3qWkYfD87ur5bmV+P7cw+F5
DH9i/Ahfl3s4XI+zL5ekTyslD4f96d82OWtzKsjDSXBgydMsd2uZPByub8uW
jZ+driEPJ0FC1FiLwh2V5OEk6NJV17KfYS15OAl62n7P9EqXycNJ8PGc6Q1X
/1rycNg/hvhUeTWpIg+H691p+6yATbXk4SSYCfPtMp3qyMNhHnP/Pj5hRDF5
OAlGRO9YsG5tNXk4nPceLX8HrignD4f1/vrerHO3SsnDSfBzxePR/8yvIg+H
67OvYrpwoJQ8HPbzg096+1eqycNJ0NnNbWSEeR15OOxvxgfj720vJg+H67Wq
g/WaHaXk4bA+3r9vuWR3EXk4vI/UHHqQ/rGKPBz22zq7HRvul5OHw7yn/81v
kKKaPBzmoZdOVkGL68jDYb9wSBw1QK+ePJwEcQezS551LSUPJ8G/fs//2fCz
hDwcft00dtnj5mXk4XAep85ffUNdRB5OgnbjHr26/aSaPJwE75+8dP93cRV5
OAnMz1ufOKCqJQ+H9yf1GIOoxBLycDh/lz6an/6+lDycBFqR1z3C71STh5Pg
Ye+k+V3HyOThsP9bze//2reaPJwEj7c2/5QTXUweDvOFcKO17cA62Nng4XB+
684XXVeXkIfDfDVI5+aAynrycNjftHpuN9XQYNzDSWBw983OWTY15OGwfkON
vM5/qiUPJ0GzNc5u+upK8nCYRzZc7erZTU0eDu97n3SdZq0oIQ+H33c0bnaw
XiIPh3mh4O+shX4VMLXBw+H8ubS29umXv+ThcH/fD7rl5lpBHg7zkbZH5HDz
v+ThsP8ONE4cP7WWPBzm1CYzes66XU8eDs+X2CU7MeAveTgJbkS9/pQXUEUe
DudTcljT0I0ajHs4rIcvlxa4t/5LHk6CxKdB1fe9aqFnA5iSoNvF8Q96ryol
DydB4/eTvJqwWvJwEtS9Sz3vGFhJHk4C44wwnVMW9eTh8P4VYt7KMr+cPJwE
O+5PrToyqYY8nAT3MoI+bWpdRx5OglX1pVa3kzQY93A4j7V+2W36rMG4h8O8
0CT8frW/BuMeDs/7Jv3GxR715OHwPubzLZI5VpGHw/7X4h8P81/15OEkUNz0
GJljrsm4h5PA+dZa757af8nDYT5qnP1l4aJS8nCYh2+9vvUH8zP3cLi/7r+m
HJI0Gfdw2M+qdTp01KokD4fr289wXEJjLcY9nARBub09dmpWk4eTIGzbx0Mx
tlqMezi8n/sbOB+0KScPJ8HAmKbNVt6uJQ+H51O7THVAR5NxD4d5Pl8Zu3i7
mjwc9sMlURt66Wox7uEk2PRn3tq9lXXk4fB+XN4F/l6pIw8nwd8jKXee3tFg
3MNJYPHPrw2+d+vJw+F5TPG06V1YTR4O+2Fi9JsfSzQY93DYj1+lfj6B9cA9
nAThuh4m2b3ryMNJUHth66XyVkXk4SRwd7ea3TKwnDycBAte6Q56CEXk4TBf
+o9/sCtBi3EPh/NH/TAyeXM1eTicL0waqoyvJw+H53tPgedH7G/cw+F9eMWx
a469tBj3cHj/iM97I13SZNzDSSBM1tkz8VsZeTgJTCY87Lc4UpNxD4d5euuZ
7oFn/pKHw37vM3dr8mYtxj0c9qc2ssK1qJ48nAzT3FsnzDynxbiHk8HszSVX
6z7F5OFkOBEx/KtlI23GPZwMzZJOv/AdVU8eTgZbR92mgXVV5OFkSHvaZV4P
hRbjHk6Gq9vLXre+qcW4h5Phr+fJfocLK8jDyfBl8aPpq001GfdwMqT+Drt1
ZaIO4x5OhnZ3d9WbzywjD4e5raivdt9MbcY9nAxi2Rq7p2bajHs4Gbx7l5+9
taKCPJwMK4PCZnVUazPu4WT4vPL65YWBFeThZLj3r56eef968nAyOOg3/X5w
Vh15OBmmDm+VWrCwlDycDO8vbZwz6LUm4x4O16vt5gjNlDrycDLMDv/nWPVW
LcY9nAy6utGxdmlV5OFkeFHb1tpjbxl5OBnud9r+T8A9bcY9nAz5/nuf+c3S
ZNzDyTDDTCvl3e8a8nAy6Gkbj95qXEseToY5ze3v/JhfSh5OhqCpT7elrqok
DydDm+t/sx1/ajHu4WTwTTrUyy9Ci3EPJ4NSLh1+QlePcQ8nQ/c/tYKutibj
Hk6GcRqziyMu6TLu4WRY53Xvr6abDuMeDj9/j9rV1uv1GPdwMrzullRRskKX
cQ8ng83Hm6WpM3QZ93AyVNasuf/mgAbjHk6Gm2u7Rx9KqCQPJ8MYlj3QbbI2
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
       
       "]]}, {}}, {}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJxFxXss1AEcAPDDVnlOltPPjOiyYWKcNhWpRNJV7oiaZF7LKFq0rtqadJY8
IlbRaXROJXMnKpXH4eZUdJw7brrunM77cjHHZh7VH77fPz77OMal0RMNSSQS
7Z//n0icGhBMR/hvPll/Nk5FUA9tTjaVFTYSgfBe3x3cCiIc3t/vzX9EJMCC
Z10+BUQGnJ2Vd+MBcQ9OyNARuUQpvK00pOrPfDX8od8rONieB0dlK0a68prg
tIZr7k8XP8ILRUM9BgbtcE9Hd7v4YCeczAwxP6cVwh3GXht1l0VwDUe4brvn
KxxAbn3BqO+F3UWK5m5XMSwNYMy9nuuHU01SJDJPCfxNHtlqUTgIM4Ki1BqN
FN5XmRdZSRmCR9dLpJfuDMPjIWIOuUsO88tUzAHHEZh73yjX5eYPWB9/fibp
swI2DcyhN9go4duW42bqaBVs1uZGGqaNwn7XT691reDs6nzObrYajomg9hmH
jsHvZIklbUu4by/fcOLxL3jXsSR9SaAG9qH6FDdN4KqFgi8c1jis9Q5jEV4T
sPOs+4zBIC6kZErSsybhh1JZPJ0yBesYgmJDIf42wvqo79VpmNOXXTFmNQMv
i6JvWXXio8Xtessrs/DSwAHiroUWTi91EjBbcJs+J0tNzG+YIatbtVvHFy5W
pSpq5+D2WB7L4qQO/iRODVWewt/7u26vD8Pr7LhsWiReLi9vzI/DM8/kqE2Y
uFvABb+tNbgzz9Zo+BXuZC/vqXmD71ylhwc14Fuaj6ewWnC1B7XMaBBXPJ+P
GZThcnMehSPHv8+68I8o8ZaXDqKsabyZ/DM/TIs3ssrpjjq8Nt5aKVjEuRIJ
p2gZrzxclBy7grP5NA/PNfyJg6l+YwP/CxUIhds=
      "]]}}, {{}, {}, 
    {Opacity[0], LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAckmeD5hhWj/AZoOTkPnJP9HsvYJh
Jl4/QOLI5W8Hyj860DOwkhlkP+C3FrGhLMo/foRyzpp8Zj/A7Fn1Zj7KPwyq
CJ/0H2k/gMUK/B5Syj/dg92NViZuP6DBXlLod8o/Y/ijwsNUcD+AisSs6YrK
PyoL76pwpnE/sNsQ+fKeyj9MZQ669NdyP1A5hRQmsco/E3hZoqEpdD9ghiju
V8XKPzTSeLElW3U/cMWI2a/Xyj+pCC4tvpx2P2Am2OcR68o/knWYJO8feT+Q
UyKsEBLLP2NPbRNRJn4/8BXFh/pgyz+DgYt4ihmEP/ho+oSMAsw/ZHTvGYkZ
lD8oMb+Ne7zOPzMDknqycJQ/4DDMEZzVzj8CkjTb28eUPwQt7cbV7s4/n695
nC52lT/gPlDWlCHPP9rqAx/U0pY/XOFc7kGIzz9PYRgkH4yZP9DAktosLdA/
Ok5BLrX+nj8kLg2/ugjRPwiUSaHw8aQ/Xl1WNsnk0j/7OOH7oRqlPzeUcpdj
89I/7t14VlNDpT8viO3uBwLTP9MnqAu2lKU/2d7FW24f0z+euwZ2ezemPxRm
HSGxWtM/NOPDSgZ9pz+AuBKSBdPTP2AyPvQbCKo/4LuDxJ3K1D+30DJHRx6v
P1mCCqjb0tY/WIPc2sOLtD+a9Y0f9xjbP2+xcy2Y9Lk/Htq8hKP53z/ykNbI
AQG/P1oDwwQES+I/yMHGv888wj8kFw+0RsTkP2l5SQ1Z7MQ/7rXTf5ok5z/B
CTL/rG3HP7XTn43/Tek/pqPE/holyj88yNtw15brP0AWvaJTrsw/UDWNh46r
7T8tx9y4xirPP2MlnYCkqu8/nicUHDmXzz8AAAAAAADwP2fJPAI=
      "]]}}, 
   GraphicsComplexBox[{{2.040816326530612*^-8, 0.}, {0.9999999795918367, 
    0.}}, {}], {{}, {}, 
    {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwVknswFHgAx9EcR1thaotcD5QeZzLIpNRXHbEXaXc56dzWcWtIR2+znenB
kbJ1Oo2EOm7TAxdFeURem93yWmvXbmv9UGzF1q+HR+fE1R+f+cx8/v4sDYvl
8I0MDAx8PvPFxsKDfs7KdPSdd7wUbZ+NXw5TqzNWF+Hp/Dyl9Hg2vr7Iynv7
7hpKdoTLBN6FKJc5+/gsKoZNjE9xpHkpdiZqNY2pZXBNjPzGILMcsXcOOWaO
VGJuIjtM0/IA79O6pIaGtdgxYpTq4FELaX1TbbtHA+pNrXixrHpECVizQvRi
WFsoGXaPv3Tn6aJfJfC0qDM+N1+M6yLxlPWyJzDu8VZ8iHkET2bN39zbLWBM
BdjdzGuCo0Rb0bSqHaebHQOXiSVQeHLf3Hojg8yQn4kxKfaZRcuVTnJY8nQu
k4wnaFYH18w+34ljg+d5Jmubwd26s39gQIGXxmR9BqcFbrmpwbn2XYjwDgm2
D2lF31S6IvKECqejtpcJDrZhkNUuYjaqMeeHTSToaDtKLvcKOpZqMOFdaXt3
qwz5KTPOrDzWjQ/sc1mZbTKMhu8ainigRZLk4L1Uvw7M9Erm3JlP8HbYeoit
6EC8+SCjP7QX3/5lUXCIIwfj4WoDlX8f1nlI6jJa5dh4NOBT40QfmCHyjYWc
TuRcE4rscvph5qr750BbJ3hBrq2m257hRnKNsUugAveU/PSHY8/wyCtuySqV
Au4tJUa6jOcwYp76dyZbiSXeEaPpXgMQM3ixYwol1rquvVCmG8DO5O7B5wFd
6H1/7rEoaRB1QZrEddIu6F3YSVbOOoTy43yvfq/C8mHHIcNOHW4H8OPsxCqI
7Y/I9596gRZ1vLzaR40/FMpwjv1LRFekJiQ0qEG5dReMxC9xb/dEvXT9U9wN
mved+4FX0AiKnFbUPIWoNfHKM8shnPyK5d7opsG4JPQ3y4YhuOnNfxdUadB3
oXbUPGYYpsctfas2dGOsY4NVwmw9rpm5b9lc1o39F23rBNV6fPwzRa9z02J+
q635AO81TrKaTqhKtOAqiyZtpl4jLyuKGbqiB+935+3TFryBsNHX3KigB7V7
ipNm+1FEJpwO/GhLUNW+bxvZTvEftyJ67jKC+5tWWdxmUwj3FyU4ORAU2eTn
+AdT8GW9xZGrCbLUWaXCMPr5n3iTpy4ER3Yk95sJKLjlssJKL4LVnj9tNLlO
UZjPbD4WQbC82HqG6iaF7ZVt3RmRBLaL1NLrhRSMBv/hu3sJFkxyArfeoZA2
VZkNxxAYV/hGJ1VTODA9fX6MI+hf43p5RieFx8r15RtSCLRX3/E6lRSu2Xxx
8FkC9axie5Ga4tFIWMchIUHb8MqSLYTCN0UxVJhGUH1jseTUK4oXftkLbS4T
VDB7hGw9RcwCnsO6bILSpCzOUkqxa+Goc+AVgoLweaRuhOKsPpclzCPIl8tF
aeMUdv73A2+KCHI3p0XtmaAoM83bLc4nyCnxX+P0iWJO9M97+24QXFo8c3R6
muJt5fjhyVsE/wM0RkVP
      "]], 
     LineBox[{{0.0001496390618503016, 0.}, {0.00019937378308402745`, 
      0.0002790911526489026}, {0.0006134154079194566, 
      0.0008584705719485441}, {0.0008894431578097428, 
      0.0012445571187384985`}, {0.0011424685952091714`, 
      0.001598347379960785}, {0.0017481961574684094`, 0.002444798624438249}, {
      0.0018402054074318395`, 0.00257330899677477}, {0.002100898282328221, 
      0.002937325521351397}, {0.0024183301947020503`, 0.003380371848368924}, {
      0.0028063025320478408`, 0.003921567193780895}, {0.0030669954069442226`, 
      0.004285020265429651}, {0.0033583580318284133`, 0.00469103956931427}, {
      0.0035515774567516146`, 0.004960179138862486}}], 
     LineBox[{{0.013203347777915283`, 0.018246207567070405`}, {
      0.013494710402799476`, 0.01864123453259059}, {0.013599754296507734`, 
      0.01878354839618912}, {0.014108105402555669`, 0.01947147656715087}, {
      0.014215449527513009`, 0.019616571625393764`}, {0.0145696851398722, 
      0.020094961642447506`}}], 
     LineBox[{{0.01752778252619644, 0.024063191484018143`}, {
      0.017788475401092817`, 0.024410515463430982`}, {0.0180645031509831, 
      0.024777829850323174`}, {0.018334396950875825`, 0.02513653958036688}}], 
     LineBox[{{0.010765102653884424`, 0.01492461185345606}, {
      0.011041130403774711`, 0.01530200428336892}}]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.014950000000000001`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Population growth rate\"", TraditionalForm], None}, {
     FormBox[
     "\"Fraction of B to growth (\[Proportional] Starvation/Recovery rate)\"",
       TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{672.5390625, Automatic},
  Method->{},
  PlotRange->{{0, 1}, {0.01, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6628304688980007`*^9, 3.662830487176952*^9}, {
   3.662831686760137*^9, 3.662831706539446*^9}, {3.662831760133353*^9, 
   3.662831807784437*^9}, {3.6628318414118013`*^9, 3.662831879793388*^9}, {
   3.662832044566512*^9, 3.662832050549741*^9}, {3.6628323190114098`*^9, 
   3.662832335604569*^9}, 3.662832373504547*^9, {3.662838835444057*^9, 
   3.662838848011232*^9}, {3.662839322487872*^9, 3.6628393843400917`*^9}, {
   3.662839415499078*^9, 3.662839440087304*^9}, {3.662839470747994*^9, 
   3.662839547417487*^9}, 3.662839583739365*^9, {3.6628396250222816`*^9, 
   3.662839764238879*^9}, {3.6628398515702267`*^9, 3.662839858101137*^9}, 
   3.6628399658236647`*^9, {3.662840021135676*^9, 3.662840029038642*^9}, {
   3.662840060254434*^9, 3.662840084033991*^9}, 3.662840114657732*^9, {
   3.662840337900103*^9, 3.66284034649527*^9}, {3.662840385020135*^9, 
   3.662840418297325*^9}, {3.662840519296095*^9, 3.662840524418314*^9}, 
   3.6628405868147087`*^9, {3.662841562280196*^9, 3.662841666876647*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Colors", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662840038332796*^9, 3.662840039991613*^9}}],

Cell[BoxData["\<\"Black\"\>"], "Output",
 CellChangeTimes->{3.662840040322003*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "/.", 
     RowBox[{"Hsp", "[", 
      RowBox[{"[", "x", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.662839666159793*^9, 3.662839772544908*^9, {3.662839868338607*^9, 
   3.662839894808696*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\[Eta]", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"0.1`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.4`", " ", "\[Eta]"}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[Eta]", "2"]}]}], 
       RowBox[{"3", " ", "\[Eta]"}]]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"1", "/", "3"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.010000000000000002`"}], "+", 
          RowBox[{"0.020000000000000004`", " ", "\[Eta]"}], "-", 
          RowBox[{"0.4000000000000001`", " ", 
           SuperscriptBox["\[Eta]", "2"]}], "-", 
          RowBox[{"3.`", " ", 
           SuperscriptBox["\[Eta]", "3"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Eta]", "4"]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"3", " ", "\[Eta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.0020000000000000005`"}], "+", 
           RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
           RowBox[{"0.09600000000000003`", " ", 
            SuperscriptBox["\[Eta]", "2"]}], "-", 
           RowBox[{"0.7000000000000001`", " ", 
            SuperscriptBox["\[Eta]", "3"]}], "+", 
           RowBox[{"1.8000000000000005`", " ", 
            SuperscriptBox["\[Eta]", "4"]}], "+", 
           RowBox[{"18.`", " ", 
            SuperscriptBox["\[Eta]", "5"]}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox["\[Eta]", "6"]}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.010000000000000002`"}], "+", 
                 RowBox[{"0.020000000000000004`", " ", "\[Eta]"}], "-", 
                 RowBox[{"0.4000000000000001`", " ", 
                  SuperscriptBox["\[Eta]", "2"]}], "-", 
                 RowBox[{"3.`", " ", 
                  SuperscriptBox["\[Eta]", "3"]}], "-", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Eta]", "4"]}]}], ")"}], "3"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "0.0020000000000000005`"}], "+", 
                RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
                RowBox[{"0.09600000000000003`", " ", 
                 SuperscriptBox["\[Eta]", "2"]}], "-", 
                RowBox[{"0.7000000000000001`", " ", 
                 SuperscriptBox["\[Eta]", "3"]}], "+", 
                RowBox[{"1.8000000000000005`", " ", 
                 SuperscriptBox["\[Eta]", "4"]}], "+", 
                RowBox[{"18.`", " ", 
                 SuperscriptBox["\[Eta]", "5"]}], "+", 
                RowBox[{"27", " ", 
                 SuperscriptBox["\[Eta]", "6"]}]}], ")"}], "2"]}]]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"3", " ", 
        SuperscriptBox["2", 
         RowBox[{"1", "/", "3"}]], " ", "\[Eta]"}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.0020000000000000005`"}], "+", 
         RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
         RowBox[{"0.09600000000000003`", " ", 
          SuperscriptBox["\[Eta]", "2"]}], "-", 
         RowBox[{"0.7000000000000001`", " ", 
          SuperscriptBox["\[Eta]", "3"]}], "+", 
         RowBox[{"1.8000000000000005`", " ", 
          SuperscriptBox["\[Eta]", "4"]}], "+", 
         RowBox[{"18.`", " ", 
          SuperscriptBox["\[Eta]", "5"]}], "+", 
         RowBox[{"27", " ", 
          SuperscriptBox["\[Eta]", "6"]}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.010000000000000002`"}], "+", 
               RowBox[{"0.020000000000000004`", " ", "\[Eta]"}], "-", 
               RowBox[{"0.4000000000000001`", " ", 
                SuperscriptBox["\[Eta]", "2"]}], "-", 
               RowBox[{"3.`", " ", 
                SuperscriptBox["\[Eta]", "3"]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[Eta]", "4"]}]}], ")"}], "3"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.0020000000000000005`"}], "+", 
              RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
              RowBox[{"0.09600000000000003`", " ", 
               SuperscriptBox["\[Eta]", "2"]}], "-", 
              RowBox[{"0.7000000000000001`", " ", 
               SuperscriptBox["\[Eta]", "3"]}], "+", 
              RowBox[{"1.8000000000000005`", " ", 
               SuperscriptBox["\[Eta]", "4"]}], "+", 
              RowBox[{"18.`", " ", 
               SuperscriptBox["\[Eta]", "5"]}], "+", 
              RowBox[{"27", " ", 
               SuperscriptBox["\[Eta]", "6"]}]}], ")"}], "2"]}]]}], ")"}], 
       RowBox[{"1", "/", "3"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"0.1`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.4`", " ", "\[Eta]"}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[Eta]", "2"]}]}], 
       RowBox[{"3", " ", "\[Eta]"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["3"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.010000000000000002`"}], "+", 
          RowBox[{"0.020000000000000004`", " ", "\[Eta]"}], "-", 
          RowBox[{"0.4000000000000001`", " ", 
           SuperscriptBox["\[Eta]", "2"]}], "-", 
          RowBox[{"3.`", " ", 
           SuperscriptBox["\[Eta]", "3"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Eta]", "4"]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"3", " ", 
        SuperscriptBox["2", 
         RowBox[{"2", "/", "3"}]], " ", "\[Eta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.0020000000000000005`"}], "+", 
           RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
           RowBox[{"0.09600000000000003`", " ", 
            SuperscriptBox["\[Eta]", "2"]}], "-", 
           RowBox[{"0.7000000000000001`", " ", 
            SuperscriptBox["\[Eta]", "3"]}], "+", 
           RowBox[{"1.8000000000000005`", " ", 
            SuperscriptBox["\[Eta]", "4"]}], "+", 
           RowBox[{"18.`", " ", 
            SuperscriptBox["\[Eta]", "5"]}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox["\[Eta]", "6"]}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.010000000000000002`"}], "+", 
                 RowBox[{"0.020000000000000004`", " ", "\[Eta]"}], "-", 
                 RowBox[{"0.4000000000000001`", " ", 
                  SuperscriptBox["\[Eta]", "2"]}], "-", 
                 RowBox[{"3.`", " ", 
                  SuperscriptBox["\[Eta]", "3"]}], "-", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Eta]", "4"]}]}], ")"}], "3"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "0.0020000000000000005`"}], "+", 
                RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
                RowBox[{"0.09600000000000003`", " ", 
                 SuperscriptBox["\[Eta]", "2"]}], "-", 
                RowBox[{"0.7000000000000001`", " ", 
                 SuperscriptBox["\[Eta]", "3"]}], "+", 
                RowBox[{"1.8000000000000005`", " ", 
                 SuperscriptBox["\[Eta]", "4"]}], "+", 
                RowBox[{"18.`", " ", 
                 SuperscriptBox["\[Eta]", "5"]}], "+", 
                RowBox[{"27", " ", 
                 SuperscriptBox["\[Eta]", "6"]}]}], ")"}], "2"]}]]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}], ")"}]}], "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"6", " ", 
        SuperscriptBox["2", 
         RowBox[{"1", "/", "3"}]], " ", "\[Eta]"}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.0020000000000000005`"}], "+", 
          RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
          RowBox[{"0.09600000000000003`", " ", 
           SuperscriptBox["\[Eta]", "2"]}], "-", 
          RowBox[{"0.7000000000000001`", " ", 
           SuperscriptBox["\[Eta]", "3"]}], "+", 
          RowBox[{"1.8000000000000005`", " ", 
           SuperscriptBox["\[Eta]", "4"]}], "+", 
          RowBox[{"18.`", " ", 
           SuperscriptBox["\[Eta]", "5"]}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["\[Eta]", "6"]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "0.010000000000000002`"}], "+", 
                RowBox[{"0.020000000000000004`", " ", "\[Eta]"}], "-", 
                RowBox[{"0.4000000000000001`", " ", 
                 SuperscriptBox["\[Eta]", "2"]}], "-", 
                RowBox[{"3.`", " ", 
                 SuperscriptBox["\[Eta]", "3"]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox["\[Eta]", "4"]}]}], ")"}], "3"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.0020000000000000005`"}], "+", 
               RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
               RowBox[{"0.09600000000000003`", " ", 
                SuperscriptBox["\[Eta]", "2"]}], "-", 
               RowBox[{"0.7000000000000001`", " ", 
                SuperscriptBox["\[Eta]", "3"]}], "+", 
               RowBox[{"1.8000000000000005`", " ", 
                SuperscriptBox["\[Eta]", "4"]}], "+", 
               RowBox[{"18.`", " ", 
                SuperscriptBox["\[Eta]", "5"]}], "+", 
               RowBox[{"27", " ", 
                SuperscriptBox["\[Eta]", "6"]}]}], ")"}], "2"]}]]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"0.1`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.4`", " ", "\[Eta]"}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[Eta]", "2"]}]}], 
       RowBox[{"3", " ", "\[Eta]"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["3"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.010000000000000002`"}], "+", 
          RowBox[{"0.020000000000000004`", " ", "\[Eta]"}], "-", 
          RowBox[{"0.4000000000000001`", " ", 
           SuperscriptBox["\[Eta]", "2"]}], "-", 
          RowBox[{"3.`", " ", 
           SuperscriptBox["\[Eta]", "3"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Eta]", "4"]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"3", " ", 
        SuperscriptBox["2", 
         RowBox[{"2", "/", "3"}]], " ", "\[Eta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.0020000000000000005`"}], "+", 
           RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
           RowBox[{"0.09600000000000003`", " ", 
            SuperscriptBox["\[Eta]", "2"]}], "-", 
           RowBox[{"0.7000000000000001`", " ", 
            SuperscriptBox["\[Eta]", "3"]}], "+", 
           RowBox[{"1.8000000000000005`", " ", 
            SuperscriptBox["\[Eta]", "4"]}], "+", 
           RowBox[{"18.`", " ", 
            SuperscriptBox["\[Eta]", "5"]}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox["\[Eta]", "6"]}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.010000000000000002`"}], "+", 
                 RowBox[{"0.020000000000000004`", " ", "\[Eta]"}], "-", 
                 RowBox[{"0.4000000000000001`", " ", 
                  SuperscriptBox["\[Eta]", "2"]}], "-", 
                 RowBox[{"3.`", " ", 
                  SuperscriptBox["\[Eta]", "3"]}], "-", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Eta]", "4"]}]}], ")"}], "3"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "0.0020000000000000005`"}], "+", 
                RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
                RowBox[{"0.09600000000000003`", " ", 
                 SuperscriptBox["\[Eta]", "2"]}], "-", 
                RowBox[{"0.7000000000000001`", " ", 
                 SuperscriptBox["\[Eta]", "3"]}], "+", 
                RowBox[{"1.8000000000000005`", " ", 
                 SuperscriptBox["\[Eta]", "4"]}], "+", 
                RowBox[{"18.`", " ", 
                 SuperscriptBox["\[Eta]", "5"]}], "+", 
                RowBox[{"27", " ", 
                 SuperscriptBox["\[Eta]", "6"]}]}], ")"}], "2"]}]]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}], ")"}]}], "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"6", " ", 
        SuperscriptBox["2", 
         RowBox[{"1", "/", "3"}]], " ", "\[Eta]"}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.0020000000000000005`"}], "+", 
          RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
          RowBox[{"0.09600000000000003`", " ", 
           SuperscriptBox["\[Eta]", "2"]}], "-", 
          RowBox[{"0.7000000000000001`", " ", 
           SuperscriptBox["\[Eta]", "3"]}], "+", 
          RowBox[{"1.8000000000000005`", " ", 
           SuperscriptBox["\[Eta]", "4"]}], "+", 
          RowBox[{"18.`", " ", 
           SuperscriptBox["\[Eta]", "5"]}], "+", 
          RowBox[{"27", " ", 
           SuperscriptBox["\[Eta]", "6"]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "0.010000000000000002`"}], "+", 
                RowBox[{"0.020000000000000004`", " ", "\[Eta]"}], "-", 
                RowBox[{"0.4000000000000001`", " ", 
                 SuperscriptBox["\[Eta]", "2"]}], "-", 
                RowBox[{"3.`", " ", 
                 SuperscriptBox["\[Eta]", "3"]}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox["\[Eta]", "4"]}]}], ")"}], "3"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.0020000000000000005`"}], "+", 
               RowBox[{"0.006000000000000002`", " ", "\[Eta]"}], "-", 
               RowBox[{"0.09600000000000003`", " ", 
                SuperscriptBox["\[Eta]", "2"]}], "-", 
               RowBox[{"0.7000000000000001`", " ", 
                SuperscriptBox["\[Eta]", "3"]}], "+", 
               RowBox[{"1.8000000000000005`", " ", 
                SuperscriptBox["\[Eta]", "4"]}], "+", 
               RowBox[{"18.`", " ", 
                SuperscriptBox["\[Eta]", "5"]}], "+", 
               RowBox[{"27", " ", 
                SuperscriptBox["\[Eta]", "6"]}]}], ")"}], "2"]}]]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.662839662195425*^9, 3.662839666569927*^9}, 
   3.6628397734698553`*^9, {3.662839877526999*^9, 3.662839895501505*^9}}]
}, Open  ]]
},
WindowSize->{1251, 1286},
WindowMargins->{{194, Automatic}, {Automatic, 43}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 76, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[659, 25, 6414, 135, 233, "Input"],
Cell[7076, 162, 116923, 1928, 219, "Output"]
}, Open  ]],
Cell[124014, 2093, 121, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[124160, 2098, 3231, 84, 199, "Input"],
Cell[127394, 2184, 11233, 198, 208, "Output"]
}, Closed]],
Cell[138642, 2385, 124, 1, 27, "Text"],
Cell[CellGroupData[{
Cell[138791, 2390, 1932, 43, 97, "Input"],
Cell[140726, 2435, 2260, 56, 53, "Output"]
}, Open  ]],
Cell[143001, 2494, 551, 13, 46, "Input"],
Cell[CellGroupData[{
Cell[143577, 2511, 889, 16, 28, "Input"],
Cell[144469, 2529, 1001, 18, 28, "Output"]
}, Open  ]],
Cell[145485, 2550, 153, 3, 30, "Text"],
Cell[145641, 2555, 382, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[146048, 2565, 600, 16, 63, "Input"],
Cell[146651, 2583, 840, 16, 50, "Output"],
Cell[147494, 2601, 908, 18, 53, "Output"],
Cell[148405, 2621, 898, 17, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149340, 2643, 6072, 128, 250, "Input"],
Cell[155415, 2773, 26971, 526, 401, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182423, 3304, 415, 8, 28, "Input"],
Cell[182841, 3314, 318, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183196, 3323, 322, 7, 28, "Input"],
Cell[183521, 3332, 382, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183940, 3345, 2309, 62, 148, "Input"],
Cell[186252, 3409, 1410, 42, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187699, 3456, 131, 2, 28, "Input"],
Cell[187833, 3460, 1964, 54, 63, "Output"]
}, Open  ]],
Cell[189812, 3517, 355, 9, 28, "Input"],
Cell[CellGroupData[{
Cell[190192, 3530, 102, 1, 28, "Input"],
Cell[190297, 3533, 4445, 131, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194779, 3669, 506, 13, 28, "Input"],
Cell[195288, 3684, 1182, 36, 53, "Output"]
}, Open  ]],
Cell[196485, 3723, 173, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[196683, 3731, 204, 5, 28, "Input"],
Cell[196890, 3738, 497, 16, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197424, 3759, 5741, 130, 318, "Input"],
Cell[203168, 3891, 3477, 68, 346, "Output"],
Cell[206648, 3961, 573, 12, 24, "Message"],
Cell[207224, 3975, 580, 12, 24, "Message"],
Cell[207807, 3989, 580, 12, 24, "Message"],
Cell[208390, 4003, 1051, 19, 159, "Message"],
Cell[209444, 4024, 529, 10, 24, "Message"],
Cell[209976, 4036, 522, 10, 24, "Message"],
Cell[210501, 4048, 522, 10, 24, "Message"],
Cell[211026, 4060, 522, 10, 24, "Message"],
Cell[211551, 4072, 544, 11, 24, "Message"],
Cell[212098, 4085, 2950, 45, 108, "Message"],
Cell[215051, 4132, 2948, 45, 108, "Message"],
Cell[218002, 4179, 528, 11, 24, "Message"],
Cell[218533, 4192, 580, 12, 24, "Message"],
Cell[219116, 4206, 530, 11, 24, "Message"],
Cell[219649, 4219, 573, 12, 24, "Message"],
Cell[220225, 4233, 578, 12, 24, "Message"],
Cell[220806, 4247, 578, 12, 24, "Message"],
Cell[221387, 4261, 1049, 19, 159, "Message"],
Cell[222439, 4282, 531, 10, 24, "Message"],
Cell[222973, 4294, 522, 10, 24, "Message"],
Cell[223498, 4306, 524, 10, 24, "Message"],
Cell[224025, 4318, 522, 10, 24, "Message"],
Cell[224550, 4330, 541, 11, 24, "Message"],
Cell[225094, 4343, 2947, 45, 108, "Message"],
Cell[228044, 4390, 575, 12, 24, "Message"],
Cell[228622, 4404, 578, 12, 24, "Message"],
Cell[229203, 4418, 577, 12, 24, "Message"],
Cell[229783, 4432, 1049, 19, 159, "Message"],
Cell[230835, 4453, 529, 10, 24, "Message"],
Cell[231367, 4465, 521, 10, 24, "Message"],
Cell[231891, 4477, 522, 10, 24, "Message"],
Cell[232416, 4489, 524, 10, 24, "Message"],
Cell[232943, 4501, 544, 11, 24, "Message"],
Cell[233490, 4514, 2948, 45, 108, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236475, 4564, 93, 1, 28, "Input"],
Cell[236571, 4567, 349, 10, 28, "Output"]
}, Open  ]],
Cell[236935, 4580, 105, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[237065, 4585, 1378, 31, 80, "Input"],
Cell[238446, 4618, 609, 13, 28, "Output"],
Cell[239058, 4633, 600, 13, 28, "Output"],
Cell[239661, 4648, 493, 9, 28, "Output"],
Cell[240157, 4659, 586, 12, 28, "Output"]
}, Open  ]],
Cell[240758, 4674, 4102, 110, 266, "Input"],
Cell[CellGroupData[{
Cell[244885, 4788, 495, 15, 62, "Input"],
Cell[245383, 4805, 128, 2, 28, "Output"]
}, Open  ]],
Cell[245526, 4810, 580, 13, 63, "Input"],
Cell[246109, 4825, 620, 19, 28, "Input"],
Cell[246732, 4846, 439, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[247196, 4860, 104, 1, 28, "Input"],
Cell[247303, 4863, 25343, 585, 747, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272683, 5453, 144, 2, 28, "Input"],
Cell[272830, 5457, 101, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272968, 5463, 202, 4, 28, "Input"],
Cell[273173, 5469, 7891, 189, 214, "Output"]
}, Open  ]],
Cell[281079, 5661, 254, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[281358, 5671, 1493, 33, 46, "Input"],
Cell[282854, 5706, 36147, 808, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319038, 6519, 5675, 124, 233, "Input"],
Cell[324716, 6645, 100841, 1724, 215, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425594, 8374, 2527, 60, 80, "Input"],
Cell[428124, 8436, 43348, 776, 303, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471509, 9217, 1941, 45, 63, "Input"],
Cell[473453, 9264, 312, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473802, 9273, 344, 7, 97, "Input"],
Cell[474149, 9282, 113, 1, 28, "Output"]
}, Open  ]],
Cell[474277, 9286, 124, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[474426, 9292, 2411, 59, 307, "Input"],
Cell[476840, 9353, 517, 11, 24, "Message"],
Cell[477360, 9366, 1709, 52, 277, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479106, 9423, 5294, 123, 328, "Input"],
Cell[484403, 9548, 1280, 21, 41, "Message"],
Cell[485686, 9571, 101561, 1675, 480, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587284, 11251, 148, 3, 28, "Input"],
Cell[587435, 11256, 82, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587554, 11262, 375, 11, 28, "Input"],
Cell[587932, 11275, 16159, 386, 579, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
