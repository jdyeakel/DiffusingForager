(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    340451,       6861]
NotebookOptionsPosition[    336880,       6738]
NotebookOutlinePosition[    337236,       6754]
CellTagsIndexPosition[    337193,       6751]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[{
 RowBox[{
  RowBox[{"Generalized", " ", "system"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dfdt", " ", "=", " ", 
   RowBox[{
    SubscriptBox["a", "F"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Beta]", "F"], " ", 
       RowBox[{"g", "[", "f", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Beta]", "F"]}], ")"}], " ", 
       RowBox[{"h", "[", 
        RowBox[{"r", ",", "s"}], "]"}]}], " ", "-", " ", 
      RowBox[{"k", "[", 
       RowBox[{"r", ",", "f"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsdt", " ", "=", " ", 
   RowBox[{
    SubscriptBox["a", "S"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"r", ",", "f"}], "]"}], " ", "-", " ", 
      RowBox[{
       SubscriptBox["\[Beta]", "S"], 
       RowBox[{"m", "[", "s", "]"}]}], " ", "-", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", " ", "-", " ", 
         SubscriptBox["\[Beta]", "S"]}], ")"}], 
       RowBox[{"h", "[", 
        RowBox[{"r", ",", "s"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drdt", " ", "=", " ", 
    RowBox[{
     SubscriptBox["a", "R"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", "[", "r", "]"}], " ", "-", " ", 
       RowBox[{"l", "[", 
        RowBox[{"r", ",", "s", ",", "f"}], "]"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "f", "]"}], " ", "=", " ", 
  RowBox[{
  "Growth", " ", "function", " ", "of", " ", "F"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"r", ",", "s"}], "]"}], " ", "=", " ", 
  RowBox[{"Recovery", " ", "function"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "[", 
   RowBox[{"r", ",", "f"}], "]"}], " ", "=", " ", 
  RowBox[{"Starvation", " ", "function"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "[", "s", "]"}], " ", "=", " ", 
  RowBox[{"Mortality", " ", "function"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", "r", "]"}], " ", "=", " ", 
  RowBox[{
  "Production", " ", "of", " ", "Resource", " ", 
   "function"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l", "[", 
    RowBox[{"r", ",", "s", ",", "f"}], "]"}], " ", "=", " ", 
   RowBox[{"Loss", " ", "of", " ", "Resource", " ", "function"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["a", "F"], " ", "=", " ", 
  RowBox[{"Timescale", " ", "of", " ", "F"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["a", "S"], " ", "=", " ", 
  RowBox[{"Timescale", " ", "of", " ", "S"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["a", "R"], " ", "=", " ", 
   RowBox[{"Timescale", " ", "of", " ", "R"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Beta]", "F"], " ", "=", " ", 
  RowBox[{
  "%", " ", "gain", " ", "of", " ", "F", " ", "due", " ", "to", " ", 
   "growth"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"1", "-", 
    SubscriptBox["\[Beta]", "F"]}], " ", "=", " ", 
   RowBox[{
   "%", " ", "gain", " ", "of", " ", "F", " ", "due", " ", "to", " ", 
    "recovery"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Beta]", "S"], " ", "=", " ", 
  RowBox[{
  "%", " ", "loss", " ", "of", " ", "S", " ", "due", " ", "to", " ", 
   "mortality"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", " ", 
   SubscriptBox["\[Beta]", "S"]}], " ", "=", " ", 
  RowBox[{
  "%", " ", "loss", " ", "of", " ", "S", " ", "due", " ", "to", " ", 
   "recovery"}]}]}],
 CellGroupingRules->"NormalGrouping",
 CellChangeTimes->{{3.64943421647458*^9, 3.6494346398715343`*^9}}]], "Text",
 CellChangeTimes->{3.649434649289156*^9}],

Cell[TextData[{
 "Linearization of the generalized system:\nSubscripts on the above function \
denote the partial derative with respect to the subscript\n\ti.e. \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["\[PartialD]", 
      RowBox[{"\[PartialD]", "f"}]], 
     RowBox[{"k", "[", 
      RowBox[{"r", ",", "f"}], "]"}]}], " ", "=", " ", 
    SubscriptBox["k", "f"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["\[PartialD]", 
      RowBox[{"\[PartialD]", "r"}]], 
     RowBox[{"k", "[", 
      RowBox[{"r", ",", "f"}], "]"}]}], " ", "=", " ", 
    SubscriptBox["k", "r"]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6494346619714317`*^9, 3.649434769433146*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.649789682188654*^9, 3.649789682195195*^9}}],

Cell[CellGroupData[{

Cell["Defining the Full Model", "Subsection",
 CellChangeTimes->{{3.649446284061411*^9, 3.6494462989314337`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JacM", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", "F"], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Beta]", "F"], "*", 
           SubscriptBox["g", "f"]}], "-", 
          SubscriptBox["k", "f"]}], ")"}]}], ",", " ", 
       RowBox[{
        SubscriptBox["a", "F"], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SubscriptBox["\[Beta]", "F"]}], ")"}], "*", 
        SubscriptBox["s", "h"]}], ",", " ", 
       RowBox[{
        SubscriptBox["a", "F"], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SubscriptBox["\[Beta]", "F"]}], ")"}], "*", 
           SubscriptBox["s", "r"]}], "-", 
          SubscriptBox["k", "r"]}], ")"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", "H"], 
        SubscriptBox["k", "f"]}], ",", " ", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", "H"]}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Beta]", "H"], "*", 
           SubscriptBox["m", "h"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SubscriptBox["\[Beta]", "H"]}], ")"}], "*", 
           SubscriptBox["s", "h"]}]}], ")"}]}], ",", " ", 
       RowBox[{
        SubscriptBox["a", "H"], "*", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["k", "r"], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SubscriptBox["\[Beta]", "H"]}], ")"}], "*", 
           SubscriptBox["s", "r"]}]}], ")"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", "R"]}], "*", 
        SubscriptBox["l", "f"]}], ",", " ", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", "R"]}], "*", 
        SubscriptBox["l", "h"]}], ",", 
       RowBox[{
        SubscriptBox["a", "R"], "*", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["p", "r"], " ", "-", " ", 
          SubscriptBox["l", "r"]}], ")"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacM", " ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.649434779969433*^9, 3.649435149015606*^9}, {
   3.666459835879328*^9, 3.6664598809447308`*^9}, 3.666470282308928*^9, {
   3.6664706245575113`*^9, 3.6664706489957743`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["a", "F"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["k", "f"]}], "+", 
         RowBox[{
          SubscriptBox["g", "f"], " ", 
          SubscriptBox["\[Beta]", "F"]}]}], ")"}]}], 
      RowBox[{
       SubscriptBox["a", "F"], " ", 
       SubscriptBox["s", "h"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Beta]", "F"]}], ")"}]}], 
      RowBox[{
       SubscriptBox["a", "F"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["k", "r"]}], "+", 
         RowBox[{
          SubscriptBox["s", "r"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox["\[Beta]", "F"]}], ")"}]}]}], ")"}]}]},
     {
      RowBox[{
       SubscriptBox["a", "H"], " ", 
       SubscriptBox["k", "f"]}], 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["a", "H"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["s", "h"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox["\[Beta]", "H"]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["m", "h"], " ", 
          SubscriptBox["\[Beta]", "H"]}]}], ")"}]}], 
      RowBox[{
       SubscriptBox["a", "H"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["k", "r"], "-", 
         RowBox[{
          SubscriptBox["s", "r"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox["\[Beta]", "H"]}], ")"}]}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["a", "R"]}], " ", 
       SubscriptBox["l", "f"]}], 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["a", "R"]}], " ", 
       SubscriptBox["l", "h"]}], 
      RowBox[{
       SubscriptBox["a", "R"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["l", "r"]}], "+", 
         SubscriptBox["p", "r"]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6494351539887333`*^9, 3.649442634710724*^9, 3.6494435046289988`*^9, 
   3.6495210613690643`*^9, 3.6495224637585297`*^9, {3.649789605554285*^9, 
   3.649789610667231*^9}, 3.649789688451848*^9, 3.650128765506069*^9, 
   3.666459708944542*^9, 3.666459889535677*^9, 3.6664702992459173`*^9, 
   3.666470910469586*^9}]
}, Open  ]],

Cell["\<\
We could scale all of the timescales... this may (or may not help \
interpretation\
\>", "Text",
 CellChangeTimes->{{3.649435309582261*^9, 3.649435320300969*^9}, {
  3.649435434910705*^9, 3.649435448539826*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"JacM", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "F"], "\[Rule]", "1"}], ",", " ", 
     RowBox[{
      SubscriptBox["a", "S"], "\[Rule]", 
      FractionBox[
       SubscriptBox["a", "S"], 
       SubscriptBox["a", "F"]]}], ",", 
     RowBox[{
      SubscriptBox["a", "R"], "\[Rule]", 
      FractionBox[
       SubscriptBox["a", "R"], 
       SubscriptBox["a", "F"]]}]}], "}"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.649435201878633*^9, 3.649435304615206*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining the Constrained Generalized Model", "Subsection",
 CellChangeTimes->{{3.64944626168583*^9, 3.649446280524035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"JacMSimp", " ", "=", " ", 
    RowBox[{"JacM", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["l", "r"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["l", "h"], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SubscriptBox["l", "f"]}], ")"}]}], ",", 
       RowBox[{
        SubscriptBox["m", "h"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["s", "r"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["s", "h"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["k", "f"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["a", "F"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["a", "R"], "\[Rule]", "1"}], ",", " ", 
       RowBox[{
        SubscriptBox["a", "H"], "\[Rule]", 
        SubscriptBox["a", "scaled"]}]}], "}"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{
     SubscriptBox["k", "r"], "\[Rule]", 
     FractionBox["1", 
      RowBox[{"1", "-", 
       FractionBox["1", "Rstar"]}]]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"JacMSimp", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.6494367624056807`*^9, 3.649436810297922*^9}, {
   3.6494373803937273`*^9, 3.649437455033676*^9}, {3.6494380960584307`*^9, 
   3.649438131811322*^9}, {3.649522338889605*^9, 3.6495223478591347`*^9}, {
   3.666459893938846*^9, 3.6664599042209463`*^9}, 3.6664702524146957`*^9, 
   3.666470287092422*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SubscriptBox["g", "f"], " ", 
        SubscriptBox["\[Beta]", "F"]}]}], 
      RowBox[{"1", "-", 
       SubscriptBox["\[Beta]", "F"]}], 
      RowBox[{"1", "-", 
       SubscriptBox["k", "r"], "-", 
       SubscriptBox["\[Beta]", "F"]}]},
     {
      SubscriptBox["a", "scaled"], 
      RowBox[{"-", 
       SubscriptBox["a", "scaled"]}], 
      RowBox[{
       SubscriptBox["a", "scaled"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubscriptBox["k", "r"], "+", 
         SubscriptBox["\[Beta]", "H"]}], ")"}]}]},
     {
      RowBox[{"-", 
       SubscriptBox["l", "f"]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SubscriptBox["l", "f"]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SubscriptBox["p", "r"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.649437455884069*^9, 3.649438134108349*^9, 3.649442634877021*^9, 
   3.649443504702751*^9, 3.649521061436212*^9, 3.6495224689070473`*^9, 
   3.649789697989167*^9, 3.650128775849708*^9, 3.6501288306496487`*^9, 
   3.666459909154207*^9, {3.666470175898551*^9, 3.666470178408599*^9}, 
   3.666470254885067*^9, {3.666470295084897*^9, 3.666470302431589*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "-", 
     FractionBox["1", "Rstar"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"Rstar", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649441672304237*^9, 3.649441692030786*^9}, {
   3.649507243049329*^9, 3.649507255392769*^9}, 3.667049214172721*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
Xv4L/TMh+A==
   "], {{
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[
       PolygonBox[{{49, 47, 48, 1, 117, 102, 87, 73, 59, 50, 2, 3, 4, 5, 6, 7,
         8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
         26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 118, 103, 88, 74,
         60, 51, 39, 119, 104, 89, 75, 61, 52, 40, 120, 105, 90, 76, 62, 53, 
        41, 121, 106, 91, 77, 63, 54, 127, 112, 97, 82, 68, 42, 122, 107, 92, 
        78, 64, 55, 128, 113, 98, 83, 69, 43, 123, 108, 93, 79, 65, 56, 129, 
        114, 99, 84, 70, 44, 124, 109, 94, 80, 66, 57, 130, 115, 100, 85, 71, 
        45, 125, 110, 95, 81, 67, 58, 131, 116, 101, 86, 72, 46, 126, 111, 96,
         132}}]]}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{1, 117, 102, 87, 73, 59, 50, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
       11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
        29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 118, 103, 88, 74, 60, 51, 39, 
       119, 104, 89, 75, 61, 52, 40, 120, 105, 90, 76, 62, 53, 41, 121, 106, 
       91, 77, 63, 54, 127, 112, 97, 82, 68, 42, 122, 107, 92, 78, 64, 55, 
       128, 113, 98, 83, 69, 43, 123, 108, 93, 79, 65, 56, 129, 114, 99, 84, 
       70, 44, 124, 109, 94, 80, 66, 57, 130, 115, 100, 85, 71, 45, 125, 110, 
       95, 81, 67, 58, 131, 116, 101, 86, 72, 46, 126, 111, 96, 132}]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{{0, 1}, {-11.452082329897614`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.649441685885545*^9, 3.649441692623725*^9}, 
   3.649443504794479*^9, {3.649507243608284*^9, 3.6495072561249647`*^9}, 
   3.667049214599413*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "*", "R", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}]}], "/.", 
    RowBox[{"a", "\[Rule]", "0.5"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"R", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.667049718076448*^9, 3.6670497364153757`*^9}, 
   3.66705069839727*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1nk8VV0XB3D00EBJRZQGUspciQb8VIYkDchQKGOlQZPmSahEMtUjUSSa
lKkH4d4tKYTMXFx3Mt7CJUMI9z3vX+fz/eOss87ea6+1ldx8rD3FRERE5omK
iPz/udOzu7qA72mU0dNZWMDfb9T1wc6NrWCCB+pW5tlyupCTrA/NVLBF1B2L
8+7zTaC1aUFSnIIHHAIDgielbLG5an1ahMJ5bHr1NNpaxAMFT79seKAQgFXX
FynP7joHf7/gS/cVoiB/tuDE/Y/+8DgvUAhSeIl7tzhLgvZEYkaURUL/wEeE
blJxNdqSiOyqdebmSwnSxtR9+va/g4M/s/lLcBFkHvXMvIF0+KSf04weKsUM
yyq7Tekf8TusoURUtBLil+/yA25kI/9EOtrlKiEV9T26NCgbd3eEZH3TqISm
/e5yiUfZUBTZ9jLYoRL59QsLvN9lw9Tn/U3ZtErM+pjRzGjMRvmqbU+jtKvg
OTydaaWdg+XiCtavWVVYHqwj/ZSRg5LP30ilQQ3ixa7oFy7IRXL5RPsD8xr8
4mD1xJJcBDaum7XLugZhd/15Wqq52Nb7zLbkSA04mgGZNzblIl/+Ir8gogbJ
LO/iYudcpPmozs/orkFRVUWW8GUuopfc84qKqoXZH36mhFYeLqymB1s/r0Uc
52ido14e9q8fSpv7tha7IzzpSUZ5mGdx+G8IqcV/uxl9qnvyEHJ+Y1jgz1q8
VU/8XO+Th1tl3Z8uGNdh5YUfWo2peTh22WK2Y08d3Kyuqp5Ry8fbxTLOLiN1
aHvDHnNem48eGiPFXaQep4OeBZpszMcpsaO7Ti2ox6tq9dIp03ycD74T7G9Q
j3/vBIisds3HzbgvMz+E1OPsbS0dq8f5ePTZUGKaZgOUCj0ieX/z0eAubjdD
vwHDNxXCJcRokJeoSJq9tQH1Bat3qMygIWank6n8/gZkltnxdi2gIb72SoDm
9QYMiA98s9ag4V1HtphDRQOOSi3dt/YgDZ9nrhOmnGzEbtcDxzZ9pGG1rU72
/UuN+DZkMzQ9l4awZ1o+R/0bYbVQdWkloeHwenX2iieNuDfzwG7zMhqmnFRI
TFEjXr/4vZzNpWFzmtzNe4sZiHnVF5oym46Pdn+n3EsZMJuQCaUfokMxYSxr
ax0DwWcMh+I96PD/9efUMjYDrb7bxq4eo8P61hCreYiBVPUm9uJzdPS/6aXv
W94EoeWmZdPu0KE5yb6Bi03Ye6jIy+ctHcmJRVOLVjYjp0pcgfTScTrQlgvt
ZtiYHNA5O0DHliPtXzw2NWPaNaOmpcN0VKn9E/TBqhmv9bPYHhN0jKVvn7/t
QjP+st1I4iyCXQWFqseKm/F1KK20ZyWB3AvrWaHVzSh8Izq+cQ0B15/Xk9HS
jEZlXt4NDYIL5mIZE4JmwNV6aGQdQfyPrQZh8i1YJN2vHwOCQWbB3uxjLfij
tXxWij0Bnb53PfNcCxxWnrQJP0BwL54jK3qjBRVsC63TzgSKHiItOyNa8Dc+
I3qRO4HZL3iycltw2HarsfIpgpgx+mVxKSb23rRpnrhN4NGy20lNjol52bEG
VwMJtGksoz3LmeBn+OoM3iUoujU17YkuE8yRhvLKEILe6UahGs5MlKXaMbY8
JjCWo72w+cDEj46dm9mvCP55JOtjmsOEn0m6Qc8bgpL5p7boFzIR9KRs7uA7
gj0yy+oWNTDxdJWiVl8qgYuUnzhvkomicg3DmGwC5eCm6trprVBhravw/UTQ
MXPds68yrWjp6NGyzCM4Mb1N783KVpgzrh1poxNcFTM9etqqFSsspN6XfiUw
8ovTdbNvxbrZGd/PFROIiYyI2Lq24lGxZO7CUoL7k8lP9H1b4bSsZbZVOUH0
6IyyqdhW9B3gB52sIcjqK9d80NMKZbGi2sBWgisnV47fGGnFffU3UhUsKn7P
9W+nRVgwt9y2cA6H4Ctf65DtAhaKToYlXOcR1LWHhS02YIEYxd6f10XFd+c7
zTZjoW6R0r7V3QROvK1rhHtYQK8jX59P0Mb+/ZnnzsIC365Qk18Ev5ttB98E
s/Bt7tkP8wVUPo7vydNHLNx7/lhslPIVhnjIg+csxKv4rG7oJxBtyFI5k8lC
jYwB/+Zvar9spQfcaCzwL+sEWA5S9VF7hGZbzIIDg9E/d4hgbrW83cYWFvQu
mSJomMp3zxlltQ4Wkj7NVDIYIfj3R2nfYgEL3gN+dd2Ul5ZfuSsUY2Nke2ia
9igBb2etzYAUG/kuyk2llJNL1Ze3ybHB8PGudR4j0Cxm5nxTY0PGV87w3DhV
/33He8M2sJHGX+8hpCwi+1fpoDEbUVuiTAL+Evzcct9upSUVz1ufJTpB5eOm
ECzYz8bqi0vWXqJMD3pNPh1mo+mwmWEX5ddp+kP+x9moUM0Q2zNJcG1qv7O8
Hxv+VtafZkwReK3sCOcFs2GScuftAcp7d53/lvKYDYvuSdskypvPTft7IYGN
CNGcnG7KKjER2ltT2Fg2+rFeRUgw57OSh2Q2G/1lQ+8cKY92pUXXf2ZD4vrF
LXcp8+YYVzwvZ+OQpGHAe8rlGypFvRvZmLxgeqeccpaTi54ujw02CdvaTjne
v9d7qocN8c6lWUOU77+99rzkDxs+fEHbJOXcbnFvC1EOlnyfViakrH3NKuCD
BAfS9w4cH6f8UvrRs/lSHJiuGCrqpayQyMy5JMOh5npVYxPlUD2V2lY5Dm4O
CBLplKd9P967TZEDPxXrNbGULzlnTn+txEGJ7p8jZyn39o8rzVblwEaZfWgr
ZbeAbQZnNThQ7p0pM5Ny48L7do1rOdjw6OLVUmp9dr2rPm2gz8GDRauf36Zc
YKQQnGBADdfri6/pUt5QczhJYhsHM2j75rGp/Xjr+ZocN+dAvfm7623KS8cE
TVW7OIisu+O9lHJkiP7QBmsOkBKokUnt54zlN+c8tedA27X4lTHl65nfVos4
c+A+aMn8RtXHb7M52z3dOGhxm//dlDLzZNxF7ZMcRDd5V2tS9bRPtCM86iwH
rZzxn4+p+vsWpZEydpEDz68VtFGqPtPy8jhfbnOwfZXBw+Q/BAEzmy0cojnQ
Md/CfUudh7FYJQ9aHAePNvKKmqjzckrn2A3lRCq/6eWuopQd7Eczet5z4GJw
tHjzAIFGkpyi3xcOKsW/bLXrJUjY6KLXWcLBfu4twc4eqt7Lk/Za/uBgeYyf
3UbqPIsM6gbKNlH7kWi5d5I6/3XGNn1v+jjwlRUb1G4nGH/eFpcxyEGI4fmT
Im0ESsJzVnmjHDjGK0Z851L50KJSysW4UJCb22zJJpi+ucFbIMeFRqGfh1gz
gdYTr0Wji7kYJ0k68QwC29GRUhElLm6NCpP1G6n6y1q4Zp46F6kK9hE2dVT9
r3fs0gUXCYph7vhBcDiC/9jQhAvVfk+/t1Q/vDtw2czMgguPqTMW0mVUvqkx
SfY2XIiVaTC+Uv30pAbT/coRLmpVNPs7C6j4Kw9xyEMuvjQ7zBpLp9Y/QPCw
JIqLHMeIsimqv/e23UT1EyrefDH9qffU91/EP+MlcsHTC5D6Sc2H2qU8J/Ec
Lk4bzc/wTSCQkPds2snhomWPU5fTQ6rfzzpeU6/Dw6+rMePeXlS/ocll7dTj
wf6/+LXe1Hxjny58QrbwIDIu+8f1MIF1o4LrGzMeRJOsNLdQ83HjyxLBNSce
ivwGzKKsqPlktGq2yj0ebO0ktbnUvI09wzU/y+bh0fG7NR1/6GhQeaDe1c6D
s5RP48ggHdKMjdJOP3lwzfnqLdJPx22jsAbTYR7k1xUYTHbRcVQSngqSbTBP
4T+Ia6RDNyn2doFeG1Lz5nRc+o+OMoY9bU5oGxLNErxijlPvN3fJeke2oWj3
Kek6Lzo2Mi+e+hrdhgR+drCEGx0v2f8uu5bYhuDGgqn9DnRc62z04+e0YUnU
mx/PTKj7y5C9WVFbGwzDGmQZi+l4KO1QeXlTO05FPdvKL6LBTKZbtd6oHbzB
SUdD6r41Me/SLR2Tdsh0Npne/0TDUbnotV2725Fwe3r0nA80GC9hRNp6tONG
7KZVnx/TMKDm4KD9sB26NmP8Ci8abMwcuO3t7Qgv75xzR5SG3PlrK9v47TjL
ilDyou6TytyZNF5fO/gzekYwnI/fV/OiOaPtePEqic/pzkdY+tK9TKkOGErp
CRor81Gu2EGv1e3ArLNlV2Ji82EyeCa2MKAD4mklkWeo+65efLB9vEonbgxL
VRzZkYe0zzcvS6p1IkNNt1rGOA/qbeeeXtDuxK8V+2581M/D8lVO7F2bO3He
7URt26o8SKZoHBnb04lm6dXHfv6TB052xQXrq52YUP+47V+Si+BK6cf/1HQi
/NiyDz7aueBMRdYdvdmFaeNbvRaP5UCqpyr4YkAXvCWtD8YJcrCxafb2O0Fd
kOK6/pLvzEFY5t30xMguiDTdYk7U5MD46NVQ1qsuJP3NE7uUkoOEarcdtlVd
6JJUPbTFJQduL6mfUuqGvUOV/Uh+NjosKhPlvnSjPt5nh+GRLKQ9YV+uVvqJ
fv8sxw61TCTdmxa05sovlJxc+OqeTCqG3Q/89MrrgSIZiN95+RUkTe5Ypy/s
g+rTuirdzFhcm9shxXUSwLpQcqT3rz+k6OoijVb9WPczbsOJOn9ieGHP5Jfx
fpy7VLihLSGexL4MSVwRO4B7ippD+Y4pxGW/bsVMy98oynR0dx37SP6r94yk
j/zG2aIHagcX5ZNN5WlinY8Hcc3DOEkz6jNZbuo1HGkyhJgVLtek47+SDbob
wj92DmHSeN/LDbGlhP37QWli4DDiYlcHKGRVkJ71+wIV1o0gRa5fJlKnmqz6
pflTtHYEIcovNppcqiVFKr41p/3+YG3ywJlHsxvIw7p6d2uVUaw7oHapL5xB
BDYF4WJFo5Aa7CoqV24hGftlt286MwappINVvtNZJLHCP443bxzyz+s0orw5
5E+x09V5heNYmVT/qGWSSzjhZHjuqb8onvp12jm6jYxUb1G4PWcC3x+2eVmr
dJDTUcoFl/MnUDxPPpzJ7iQLK5TntrtMQo+UnbII7iY29SkTilOTcEusElRu
/kl+H0o4wXw7hR0tsYVTij2EHE4NnLNLiBCvgzvn9/SS3MoTlqzdQjx8vYO5
faiXZBmpyXzYJ4TPsMZx34lekqKYFGtlL8Sn1OabLVJ9JIYRkxniJkRo8veA
TM0+4rv3DnfWZSFU4iYmInz6iLqxs+H0ZCGkPrxOlh7qI6tSF01rfC2Eo+XF
xkMTfUR5KaMk+Z0Q/oMG4un/CIj8hLWtWboQrh7v7e1kBUQiZ8fxwHwhXEqU
GSl6AsLV1n0yrVYIkyeHzIMuCwjz2YBLbb0Qeu3PzPl+AsKYnaqSyBBCYnO9
yc77AvLj15q0bSwhNCVU9aSfCkj+q2XFfnwh6MsPDb3MF5AcudaQfT1C3Cm0
Y0p9FZDMwBhrJYEQK31MP/tWCMhbd1lWwZAQQ93Tb+9kCUhSTU1i2B8hlLNa
nLM6BSR+a9ixw+NCqIUm660QCEhsmpW2zqQQc88clQr/IyD/LpMcFgqFqHBR
YguFAvI/lFH05g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {-0.9999999387755111, 0.12499998766342242`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6670497370121737`*^9, 3.667049773859825*^9, 
  3.667050698654647*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"r", "*", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"r", "*", "RS"}]}], ")"}], 
     RowBox[{"1", "-", "RS"}]]}], ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.667050489619997*^9, 3.667050513115938*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"r", " ", "RS"}], 
    RowBox[{"1", "-", "RS"}]]}], "+", 
  FractionBox[
   RowBox[{"1", "-", 
    RowBox[{"r", " ", "RS"}]}], 
   RowBox[{"1", "-", "RS"}]]}]], "Output",
 CellChangeTimes->{3.667050513809535*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.66705051579959*^9, 3.667050519327404*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", "r", " ", "RS"}]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", "RS"}]]], "Output",
 CellChangeTimes->{3.667050519888214*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"2", "R"}], "-", "1"}], 
    RowBox[{"R", "-", "1"}]], ",", 
   RowBox[{"{", 
    RowBox[{"R", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", "All", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6670497743988647`*^9, 3.667049815773381*^9}, {
  3.667050449035133*^9, 3.6670504594212437`*^9}, {3.667050579251419*^9, 
  3.667050587581114*^9}, {3.667050703943766*^9, 3.667050711247107*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "prng"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value of option PlotRange -> \[NoBreak]\\!\\({All}\\)\
\[NoBreak] is not All, Full, Automatic, a positive machine number, or an \
appropriate list of range specifications.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.667050711985766*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
gNhQ8Ek0xvrUyx0dS4aATsTv4jGN8X8oTq4q
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[{{0.9996989140831557, -9.441210582842743}, {0.9997005088879948, 
     13.376771507410087`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 1.9999999591836735`}, {-9.441210582842743, 
   13.376771507410087`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6670497991005383`*^9, 3.667049816412999*^9}, {
   3.66705044928174*^9, 3.6670504604156237`*^9}, 3.6670505927083063`*^9, {
   3.667050704453101*^9, 3.667050712005413*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"2", "R"}], "-", "1"}], 
   RowBox[{"R", "-", "1"}]], "/.", 
  RowBox[{"R", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.6720778260079927`*^9, 3.672077827648714*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.672077828014021*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"X", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"X", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.667231779176626*^9, 3.6672318650796633`*^9}, 
   3.667231903255035*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVlGk4lAsDhhlZ04wSRUqEpCzHVsQ8rxZbqGyRiCwpSoszRYsUbWpCUhjh
aMhSlijZRihUki2OZWQtcpA94v36fjzX/e++7l+P3BE/a08KDw9P/J/9n+ae
3+vLBj3pk9Yz6j8pXINvz+2PdEntQs4HaYtWIoYuubSZ+ULKFrYCK9SOE6/p
r0sv+55TcsEipVbZyvsjXU1vJTteygOBmUdltYh/6Tzig/dJ2WPYybvLXraw
l14/XHLVTekkPr/p7VTwHqbvd68pcIs+jfEwM3EJuwm6/met7Egpf5Tzbnq0
ivhF32D4OLWCxYDdjvAFqSmSLpoulDApG4CWFI4ctZAPk5JnoxWTL6B3+bz2
Pa4gOq913rVXugybI4HbxLxF4T6bXF5hewXiH9dFm2aIoUXNkX4oOhiZjvJC
wnbiKIur0LkrFYIJi3tNwoQUtBvO5yg6hSIhd1bNPFgGaUJqqqWs6yBFQoJF
pmQR+fcjhVHZW/hmduUGf+EGCGRaJt5wuw3ZntknbI4iAnsoMuuTw5B19mpp
KHcj3PeeEN+vxET71ep+fu8taA2Vvzd49B7O8YROsBvUoMT14X9jG4787WmL
OzI0ELtSLtgxOgKZyuEUPjstXAsOO39bKgpZbRXjFEIPpTJeL+0Lo/B1sX/Q
uk0fs6+ISXmnByhKEOvaEWwA35EpvyJWNBgHgiooU4Ctk+vRYdkYBO110+ct
3AnmtD67oCwGprYr1dJe70J1hERviFssvB5+WJ/E2Q3D6vcua5PjkNpqzBfM
NYGSjo69ldJj/GVyqpjH2wKun2lR0lWPkU7f/VQ51hJxPkP1A0cTcNF/3f3E
BisI1delcGwTEV47oklk7MNFwVB5h+gk6B6vIklbG3j4j0rdknqCqAvcYBKO
0OKLDMw99QRCo99+t8gcBCVSu7296gnUdUpkvBYOIiErgKXGYCNa74N5cs0h
tA3xyTY1pMA7Qj97n4kr9rqtVpC9k4Zz23n07D09sG6sMMS0Nw21t3tZfj89
MHzZuf+0fjouVmxpdA/yxG3WPymV39MxNDb2siPRC5UtWzYd352J2e2Ek9ic
N/StjNTyF59jOHJOMoj/JIQ6e5lcuyx0njNI2p11Ei0+10cFn2VBxbhvYeCg
HworPR2eqWbDu05zVafTKTj0pEvxdGRDJXGVbn3FaUSu1WGxt+VipbyfqmGZ
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
El/E2uNd52jEQ9mlUyT5px+SQyRJI/4Hv5yssA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 1.9999999591836735`}, {0, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.667231791109602*^9, 3.6672318664228907`*^9}, 
   3.667231903467609*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Visualization of the Jacobian for the Constrained Generalized Model\
\>", "Subsection",
 CellChangeTimes->{{3.649446191528554*^9, 3.649446243470315*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Eig", " ", "=", " ", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{
       RowBox[{"N", "[", "JacMSimp", "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["g", "f"], "\[Rule]", "gf"}], ",", 
         RowBox[{
          SubscriptBox["p", "r"], "\[Rule]", "pr"}], ",", 
         RowBox[{
          SubscriptBox["l", "f"], "\[Rule]", "lf"}], ",", 
         RowBox[{
          SubscriptBox["k", "r"], "\[Rule]", 
          FractionBox["1", 
           RowBox[{"1", "-", 
            FractionBox["1", "Rstar"]}]]}], ",", 
         RowBox[{
          SubscriptBox["a", "scaled"], "\[Rule]", "as"}], ",", 
         RowBox[{
          SubscriptBox["\[Beta]", "F"], "\[Rule]", "bf"}], ",", 
         RowBox[{
          SubscriptBox["\[Beta]", "S"], "\[Rule]", "bs"}]}], "}"}]}], "]"}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"EigConstellation", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", "Eig", "]"}], ",", 
        RowBox[{"Im", "[", "Eig", "]"}]}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"EigConstellation", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Real Axis\>\"", ",", "\"\<Imaginary Axis\>\""}], 
           "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"LightGray", ",", 
          RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
          RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]",
       "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gf", ",", "1"}], "}"}], ",", "0", ",", "2"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pr", ",", "1"}], "}"}], ",", "0", ",", "2"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lf", ",", "1"}], "}"}], ",", "0", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Rstar", ",", "0.5"}], "}"}], ",", "0.001", ",", "0.999"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"as", ",", "1"}], "}"}], ",", "0", ",", "2"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bf", ",", "0.5"}], "}"}], ",", "0", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bs", ",", "0.5"}], "}"}], ",", "0", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.649438155538541*^9, 3.649438203137624*^9}, {
   3.6494382434634542`*^9, 3.6494384403805513`*^9}, {3.649438517331517*^9, 
   3.64943856355025*^9}, {3.649438711984764*^9, 3.6494388527369633`*^9}, 
   3.649443180358157*^9, {3.649522370282858*^9, 3.649522382004757*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stability Analysis of the Constrained Generalized Model", "Subsection",
 CellChangeTimes->{{3.649446191528554*^9, 3.6494462468476973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RValues", " ", "=", 
    RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"gf", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pr", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lf", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Rstar", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0.001", ",", "0.999"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"as", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bf", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bs", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Eig", " ", "=", " ", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{
          RowBox[{"N", "[", "JacMSimp", "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["g", "f"], "\[Rule]", "gf"}], ",", 
            RowBox[{
             SubscriptBox["p", "r"], "\[Rule]", "pr"}], ",", 
            RowBox[{
             SubscriptBox["l", "f"], "\[Rule]", "lf"}], ",", 
            RowBox[{
             SubscriptBox["k", "r"], "\[Rule]", 
             FractionBox["1", 
              RowBox[{"1", "-", 
               FractionBox["1", "Rstar"]}]]}], ",", 
            RowBox[{
             SubscriptBox["a", "scaled"], "\[Rule]", "as"}], ",", 
            RowBox[{
             SubscriptBox["\[Beta]", "F"], "\[Rule]", "bf"}], ",", 
            RowBox[{
             SubscriptBox["\[Beta]", "S"], "\[Rule]", "bs"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"MREig", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"Re", "[", "Eig", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "as", ",", "bf", ",", "bs", ",", "gf", ",", "pr", ",", "lf", ",", 
         RowBox[{"N", "[", 
          FractionBox["1", 
           RowBox[{"1", "-", 
            FractionBox["1", "Rstar"]}]], "]"}], ",", "MREig"}], "}"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "100000"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.649438922721942*^9, 3.649439146970871*^9}, {
   3.6494410212325277`*^9, 3.6494410285302887`*^9}, {3.649441215055294*^9, 
   3.649441215165935*^9}, {3.6494412545269012`*^9, 3.649441258343403*^9}, {
   3.649441406029963*^9, 3.649441417052949*^9}, 3.649441466428481*^9, 
   3.649442622324992*^9, 3.649443105663425*^9, 3.649443188541472*^9, 
   3.6494435353381643`*^9, 3.649444275248149*^9, 3.649444311321622*^9, 
   3.64944434743928*^9, {3.649502806191126*^9, 3.649502808857049*^9}, {
   3.64950451880853*^9, 3.649504522127578*^9}, {3.6495224114494667`*^9, 
   3.6495224386632643`*^9}, {3.649527782458407*^9, 3.649527807264317*^9}, {
   3.649527849312113*^9, 3.649527850335699*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Corr", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Correlation", "[", 
      RowBox[{
       RowBox[{"RValues", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}], ",", 
       RowBox[{"RValues", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "8"}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "7", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CorrChart", " ", "=", " ", 
  RowBox[{"BarChart", "[", 
   RowBox[{"Corr", ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(a\), \(scale\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(f\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(s\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(g\), \(f\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(p\), \(r\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(l\), \(f\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(k\), \(r\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"ColorData", "[", 
      RowBox[{"97", ",", "1"}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Parameters\>\"", ",", "\"\<Correlation\>\""}], "}"}]}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.649441139281321*^9, 3.6494412035324907`*^9}, {
   3.6494412434689293`*^9, 3.649441398435637*^9}, {3.6494415102138653`*^9, 
   3.649441590034174*^9}, {3.649441990717024*^9, 3.649442028403173*^9}, {
   3.649442999672277*^9, 3.649443001830456*^9}, 3.649443044258293*^9, 
   3.6494444140722923`*^9, {3.649444533855198*^9, 3.649444534211972*^9}, 
   3.6495224548551188`*^9, 3.649527794481721*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.40424519670631287`, 0}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
     Thickness[Small]}], 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5425434583714547, 0.}, {1.4574565416285452`, 
            0.12474648581315495`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{51.70823529411766, 
           84.14945846240059}, {-62.64901152839019, -37.707713101824716`}}],
         StatusArea[#, 0.12474648581315495`]& ,
         TagBoxNote->"0.12474648581315495"],
        StyleBox["0.12474648581315495`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.12474648581315495`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5425434583714546`, 0.}, {2.457456541628545, 
            0.07462259520570284}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.61999221705089, 
           119.06121538533384`}, {-52.828350363856856`, \
-37.707713101824716`}}],
         StatusArea[#, 0.07462259520570284]& ,
         TagBoxNote->"0.07462259520570284"],
        StyleBox["0.07462259520570284`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.07462259520570284, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.542543458371455, 0.}, {
            3.457456541628545, -0.04259413250119142}, "RoundingRadius" -> 0]},
          
          
          ImageSizeCache->{{121.53174913998416`, 
           153.97297230826706`}, {-38.207713101824716`, \
-29.362340509593277`}}],
         StatusArea[#, -0.04259413250119142]& ,
         TagBoxNote->"-0.04259413250119142"],
        StyleBox[
         RowBox[{"-", "0.04259413250119142`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.04259413250119142, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.542543458371455, 0.}, {4.457456541628545, 
            0.09710851709308413}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{156.44350606291738`, 
           188.8847292312003}, {-57.23396647130451, -37.707713101824716`}}],
         StatusArea[#, 0.09710851709308413]& ,
         TagBoxNote->"0.09710851709308413"],
        StyleBox["0.09710851709308413`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.09710851709308413, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.542543458371455, 0.}, {5.457456541628545, 
            0.2736518981288678}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{191.35526298585063`, 
           223.79648615413356`}, {-91.82371409428262, -37.707713101824716`}}],
         
         StatusArea[#, 0.2736518981288678]& ,
         TagBoxNote->"0.2736518981288678"],
        StyleBox["0.2736518981288678`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.2736518981288678, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.542543458371455, 0.}, {
            6.457456541628545, -0.3361461952312277}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{226.26701990878388`, 
           258.7082430770668}, {-38.207713101824716`, 28.15265498026026}}],
         StatusArea[#, -0.3361461952312277]& ,
         TagBoxNote->"-0.3361461952312277"],
        StyleBox[
         RowBox[{"-", "0.3361461952312277`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.3361461952312277, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.542543458371455, 0.}, {
            7.457456541628545, -0.45454074166353226`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{261.17877683171713`, 
           293.62000000000006`}, {-38.207713101824716`, 51.34943220863061}}],
         StatusArea[#, -0.45454074166353226`]& ,
         TagBoxNote->"-0.45454074166353226"],
        StyleBox[
         RowBox[{"-", "0.45454074166353226`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.45454074166353226`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.40424519670631287`, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Correlation\"", TraditionalForm], None}, {
     FormBox["\"Parameters\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(a\\), \\(scale\\)]\\)\"", TraditionalForm],
        0}, {2., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(f\\)]\\)\"", 
        TraditionalForm], 0}, {3., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(s\\)]\\)\"", 
        TraditionalForm], 0}, {4., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(g\\), \\(f\\)]\\)\"", TraditionalForm], 
       0}, {5., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(r\\)]\\)\"", TraditionalForm], 
       0}, {6., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(l\\), \\(f\\)]\\)\"", TraditionalForm], 
       0}, {7., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(r\\)]\\)\"", TraditionalForm], 
       0}}, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.649441204849268*^9, 3.6494412212213497`*^9}, {
   3.6494413781641693`*^9, 3.649441414129496*^9}, 3.649441462362671*^9, 
   3.649441513428588*^9, {3.649441557472165*^9, 3.6494416036086273`*^9}, {
   3.649442013015545*^9, 3.6494420292599573`*^9}, 3.6494426492873993`*^9, 
   3.649443002717306*^9, 3.649443045758247*^9, {3.649443102764485*^9, 
   3.649443111233436*^9}, 3.649443196313138*^9, {3.649443510816738*^9, 
   3.649443539776976*^9}, 3.649444279807884*^9, 3.6494443144524307`*^9, 
   3.6494443561650543`*^9, 3.6494444158519793`*^9, 3.649444534845271*^9, 
   3.649444599535595*^9, 3.649522496177372*^9, 3.64952780046113*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Observations:\n",
  FontWeight->"Bold"],
 "\n1) As ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["l", "f"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "increases, the consumer population becomes saturated with those in the \
Full-energetic state, because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["l", "f"], "=", " ", 
    FractionBox[
     SuperscriptBox["F", "*"], 
     RowBox[{
      SuperscriptBox["S", "*"], "+", 
      SuperscriptBox["F", "*"]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". As the consumer population becomes saturated with those in the \
Full-energetic state, the system becomes STABLE.\n\n2) The elasticity of \
growth for the Resource is strongly associated with instability\n3) The value \
of the steady state for the resource is strongly associated with instability\n"
}], "Text",
 CellChangeTimes->{{3.6494436493827887`*^9, 3.64944381430716*^9}, {
   3.6494439147086353`*^9, 3.649443959257737*^9}, {3.649505326380365*^9, 
   3.64950533629043*^9}, 3.6495057901016903`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RValues", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"RValues", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "8"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Parameter Value\>\"", ",", "\"\<Maximum Real Eigenvalue\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649441032736114*^9, 3.649441105974481*^9}, {
   3.649441224950623*^9, 3.649441226532631*^9}, {3.649441624175837*^9, 
   3.64944164725556*^9}, 3.649442974366349*^9, {3.649443980100595*^9, 
   3.649444020145953*^9}, 3.649444267352283*^9, 3.6494443330636883`*^9, {
   3.649452141297195*^9, 3.64945216237431*^9}, 3.64945228411895*^9, {
   3.649522577602227*^9, 3.6495226500581293`*^9}, {3.649527734944165*^9, 
   3.6495277514945908`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
0ow5l6qjrbkdULOhK8jbn0G0PIzOC7okwMw6juPEHAWR16rbS9ULwJYkuVvK
LBR6x9qoHtwDSCs2N3uvk0z6pe//Pa60Cqe2mJ99u9oRn/Tfx8jWcXz7T/7W
R0Yax/9OI1PWzRD//aveSfYuVo69yOf0XkXJ6VjZs9aTMFLfL23q2QPlDNH2
n6ezSf0eBSMRvnk8f6Bu/syoHc2fA6/Mlczi+C7v7/MqDWhnbVkXTPMp02ts
8kJso7jr0/2W13UIjU/ef1du/gfO74mbK59PQ/FG9AHX0TpIsl+KJ7R68PH8
eela+Auy5J8ydU5kDmLZm/7GXCpFYl/keRbSAoOjxT45O2IIqxL9RdPeWvD5
Ks4M3ighdLMuQgfvVePjofSAtLBKYiEUYFjLOAsm0XeHJml1x/f4tundghWE
7fHaZPS4H4xtx0MOjfZgX6GBna1nHPF4H8//X0QH7g2febRXNAt0pYr6ClIN
YDK4ZqtqlEOoNg5Bz6oq4KYrZCmwMRol50I3X6TM4IWfngynXy5kecMP1pcP
YqtpwuPWlhTiJ2a5GPl2HNZvatnUxcvhZ33u/Z6lbpTy/t2+ZXcNYX3OeTG2
chDy24SoNs/9QHFRGf/xchATadJ0dJLpEPAV9BWO7IQSe92NOelCCD1jvb3X
twqfmjT+2vgVEKE23s5/6ysh5q7pp6ZpR4z/yj8+rUqF7lV/uueqEWB3q02S
KG2H0ezL4dUtLeg+x1ddpNELHduP7zztLhGbUl+RT5NVEFpV5yp4nouMGN9+
UfZM5PzIsNpcXEQ85Je7+qS7sTC3i89fK5RwthZKv9u5gEpabiGqBkES3MqP
TOaxw/fnnt+Z1dD6Lbtle3ER3G6wBdxT6yE5fyjf3josQPGooqDW5wrUj7De
9m7owIUknfhbIYMoGPA5cONqJX64tvY4v8olG6N1+sf/TGLU6Tij5bpO8JvV
hm5jXsWBsNQf+eE07v2QaHXn4AzirWU6KVfykJX8kENKbRFsTwVffvEeg8hU
cvq22kV8VfRMGHKvBoX9z8tfTPPw1d73sn+kCwX7LRZ+HqzFn/s3Td+kRxHq
2SHGWaYu1H944u/2sxb1Vh193/9OIYX3Dt/Brc2go0+MlbXxAvzj/G/TpxOt
sqIEAbooGNfdK+mZ9Ccakz2arQfHwXdUrnWjizek3/Pce6DZhGL7z75mLaVw
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
nHI0jETYVL5i2q1V6Diz+LSbjcBz07JP6sll/CcdVDjBSvO0It6Yct169D5T
PuX5oJRk2N9LGCxfxrnt72embgygOUXhtPTLeTi3+LkkZI6iVm9bdq7MKgIN
1K0XBScR8tmftEouQkkgwXdAMQ3PDdj+9fxeRsztB9tFj8yCa0/L4ffnmxEg
96pQTpFC3rPP/2o5MA/1D2IrrlWRJJnf0+n3ninMVe5l551oAbPOtsAu32Vw
rXH3+idcgwI+zROljau4z6OVqjE9DHur59tEAnshsiZcV6y1A1y7VnYY5VNh
iUV6lwNBMP/KvI1jqgGjga7uDwT74fKyjcs7ahWjEuTL+0+NkJvNuxk6uALJ
eCapbx9GsW4PA8owAnFl6fl8oTwEvKWjvKP1Y73p+W9uWZ2gTj+JvdXSAbp7
QUuiJiqEb7FA9NGLXFTzc6qpX0wk9HmRj3WsJmEifgC128uJ1l6bpSb/cRhp
Br3SdopE5Z9IIQPmOXQ6juj4H6wB5ShdY8OeMexlFqQMuIaAzyln+enFRJzM
3len4xBHDs+kXOQvWYDUVcWMXOZO1Oc8jrKfW8bpghINxVsdkK7LYK5614A3
xnNpXrvLSHdXk8P3XwMQMZT+sPNrESgjn+mtv0zDxDLcy98ulpg/Ybk6nPMH
/k3i8SqWVaQ9aZXp8w8qFLS7fdf+ToTa2MFSsZYFCLvJ122g1b/uUf3rd8I6
0Lxy4blncCYaY/oMj6tM47ngwXVrpxrR/oht3Z5cCro7q67Jm2QS6ZxclX7G
IvR+q3kleaSCvI/8q9TuOoAj4e/f9jnTSZtdZuKIMl1Gv9/ViGb1dkjNun+u
Ha6Hxew1cQ0TOunYczf1a+X6YHVq78QX40qiZSrMknO0DTqr0hJ+Dzuw1Hzj
ekLzCMZmJd97qU1Ddo/c5PgHKnysGN2yCQVLA7tDyvom4REf+4QrtRacT4em
FLpWwPWnOvyC7iDkLo/d7L06g8CSbJ0k/XZiELSYZWc7BcP0hV4bpQrimHrG
dbNYERxz+H7mN/oT6U1yJyLYCRQadOvDP2SQMKZ1hn6Jq6jomJPPl1hGzvuy
QuEtA+C+sNTidKsKdBaiDgeHAlCx17eFW9WJSB6byc//0QFWnWuOhhY0Dxlr
PMF2ZBw+FcMl8wp16N/7/uq3X9O46OLNGK5VjHaJV333csohfFTH7kdyFplT
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
45QvsTv4cdc96SR8art/bZo9EXF3ZZNWWywjOeWgfFcWFVqVDpVj04v4lGoz
udzWD0p1sRT0SjHz+Xqehts38h+7TyhFfRpWNaYzISHv4cvkJLouaAQBNqts
P54Ix+TS9EzG32GYbMlLVm2YhHfgmeThl7P45O//XnxrF5gch748ZlrAJ4dA
G/XYSmh5nfLp3D4GybK4hJPjs4h5+o0WebQa57qv57KNlJDs+sNn0393Q4p/
MEKKYRhmS0oTqrMNuDfoVKwhHkhkO6qYapaWMSas8dBDawCcjrcCRBanIZfa
PHWdrQZdH4eyrph0g3l3Js+yYRG59uVFUdf4EipzW76LVXYjPeYoQ9+DMTD/
uBUTrFMEptBCLb4nnbD/LH+LOSWGrKlI6fraNgWxc7ub6y5Qsfgy013JaggD
DAox7AlVpMPR6N+OFTqPCflr7dfsxYmtnGuMGWZwJOJSWZJdFb4dGwkKrZ/C
fkvzKyamtYiZ/WRcoV2Jaz7rbWS/FJOh2D5wXx7F1MyDvnYJXyQqJCbOdS1D
ZVLJertyFPG+asz53rEHniKD4RKbKkmG3bb9+jPxEP/BYVlYkUD3tTPTSpNd
mLU6Er/WtJRkXElnuJA9BorADbfMxQwYe7NFBB3uhbdV8MAVv2xCCbnK7xGV
B5aDyvcXIhLhHiD4SCdgGb4NT1XWd7GocGrxaqTQ++9Oyk7eN4HD8Lnu72ny
chLZSue9r2nnY957jN11is6L0xt1bPRXUC+gv3xHg4qzKpfnnMf+kPKNs2az
L/twOvCAudORdFAUZp5IHBxA9Xc12fU19Bw73CeQEDSFHfZnOzd3d8DHjSow
lbyCkw12qzV6JkCZSuw/yhWBiIckaf/pOsId3eN+1GwaBgPbvh3wb8KD6gKT
k2vH0Oh1hbHLqQZnTQxP75GZR+alpFo/t1FQtPf6me+tga9qSX/pxUjiZP53
9qjgBK6+bI+QL+iE2fF7tVPDi6CmLY6JxG9S4Xty8+t+3m64P1n/kno+D7Oi
MV1b/WmIq++fXvxWR3y4+RL5aSt4JMbH9HtHLyh6TzOTTRIRtW0dRamniEQF
2pQbN01CM0xdOqg+lnwxv97GJrgC9St3xlJu9uDE6Uo32ckFFPWmWZf87EX6
q+idXTzjcGDIcP0unIE7lzhYb9n3o09I15VjQyW4UpItOssqwCVy6nlBwACa
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
cqptPptAQjbdk1GIm4DOqx1Og1xV4NC01lK714mnHyZ1exMqCSU2cf7lnSJ4
+XFrZWqUEC2+7Sdtfiwj8e1/hzubetHwp/zoHukRNFC7mGuulYIyd21zk8oo
Zl3ZKNe7sontzaaPDR69sM6yiSrUziWu6+cko7rnIK25Rv+wIBU6bz5dSJts
ASfL8MXo3kbCwUE9uV91Ehwie352LOchbLWXTlrfOM4/ZBQ/cyKNnPErFD3A
MIes2w/+UhWyCKNArWmrLxU7Jk8OL67NQ4j/eg8dQve3W1aDX27Ug8MzeIrL
LhdXp16z/Nn/D1+EHvtujerDUW5nyr7hPoho1296KDiDil1xtJ+LzTBJ+u7o
ODoCfkdho1PG2USZ89OYvFQe9lrGy/1YH0sGTR7JHU0cx0jkhseyLH8xLcCx
Xr1vgp5HbwNKQgqIEXNXzN+Cabxr/rOWCGWjofrcjduB9Zie1L6s5vSDKLed
9EtlL4XWHUH5evkquAz85UkeGoTY3v0rp2ediKRYjErotV44s9/VSk/PxFUZ
m23J4ivw0Ag7Ze4ygtmNCzdOPRgA72U2dybFUSTOxk482Pr/55Iemb/xqhVU
7RdvjY0LIfSceYugezVh4GjtPBvdiOOjv155dyYThlbPZcnnLnin+Ib6mSuA
+N/dd9c9shcOMtLbosaboHNg0CEweBi9Dyqsbw1lknTfkGdevjQ8Z3usajbe
A8XTalzJ52h47Tm4pL49lvge1KU82rgEyukrLo5W/Zioeqy48+YErhZvoKxO
ysGy+gnHW9sm4JhQPKg6Xg8duTs996mzsKa5Uv6cpOdigYEZ/4cxxEz5aSWx
0fUzL//qm1ou9IT+e7X8OJdsYSx9ZME7DWa/gkp2WgFMlD5+6fUvhvMG1u8s
mgPENWjp35aESSSzHWDSFPUk98przp9ZNwPJSoOtNjy9yLy5yepyezHaa2xb
br9IJ/zXLtxsiKbzVY/7+10HqsEfv+Uaw8QQ7lZPVs10pRJWh2VnKunBg9/B
G/SrCPnPhrXZTpuCXZ0Gn8NlS8CRwfUnWz4LtkkmY9offYit8oujzS/qIRnG
OzHxXwH5QUS11uouYO8x8UwJvSno3AjQ160bQnXzxvClpSpi7vDXTXtVN7g+
Zkm67MwnOmx5rdxTU7CS1M8tdfQnDH+To/PDCiD7cXfeYvMQfc4+UspUhyB9
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
6Z93RcarF6eihlr0UwkxePlKncEoBv43DF9SxT+AX2YxwFUyH3mOudqFJjVk
Mf/ZdfZbPRjLavFY866VUF0zwpIsUrH/YfGgxJp4wqCWUOatMY022Xcp/XYU
QjlqVuNSHoy+idoOfv5iTD7OdCKuNGSvKo2sTisnggefHv/FNwaDl86tN+2S
yfzirc5e1yUES/03ybuTnmMjUrWKLMV4eohz/VhyHzE1kqr2vrCEW4KzJ1az
DIG1OjDWdtcChqYmO26oV4J63Dfg6/ACBOb1pkJLWyDWXREwrjoPu0d6rhnu
dTDRf50umjgKk5Aa02L3DPKwfVAvsWkOPvJqm2kqDLLOkhkKjxr+/5fLFD97
3VJCMbn7sHUfnbtl3lb8iUwl5ecfsR4dGUV62OpkJ+dOmG2sUXVsWwZlvtJ1
tn4Iqtt/Ujadr8WLuxxa/0qoiO9t+Za1uQtq49mX+yLqiO/knNkXnWX0CCkl
rsqZhfav/85eyaHhMO/PK9y5E6g1Dbn/Z3wZkuJb/+uSZZN9wXv7hKHkGF4t
bFzqHi+DpOeBFXyZgvHTTot1SSnEg32hSkl5Gk6qezycLCrg426ay8Q1B50r
MtUqCk0IDdR6fvfdFHTymXz7KFUYk5cY3MqThVZJ9k3aKv+QvuXruMENOo++
cRW+z0CBY9JPzu2O3WDTvW4hYt8D66PJp5zGk+Ertdeu63MRUa0qOXrUqxTe
vNWOgodKYFJxdCkquxeS9wpe5WKIqCaItKvM1eBvhOk1Z7kJeD/N+uizjZ6v
N3LHbAr6YLggfk5gZBZe6V9aEz1rUK3e5yx7rwtXu5s0LdXLCcuTxe+NVRMI
s3g3dPxHHmyeXihylZ/GUVeO4fj3twjDfYH+6VWTSL/15Rx2NSDeRDBdf34J
4x7XDwQ8z0OXWtJzC7duzFsnrZXaVo7CrE6ppcJpVC3+/Zdgng3dWf9K4YpF
HFurIfnp7TSY3S8uH7YfR92fdz+83V8R5j7DoTcfaQjuz7m3asMMbJmtmbhP
LeHDgQYzTy56vv3aKBheMIHU32tEmdqb8HDeeK9FHT2PXvN2fA2PItSzLzys
zgyAon55didvDKx/dOyRuO4F3duBWT8U2omodN4ai/5G6Hnp6NTfbYP0JapS
RHo/oijFAV/O5ZODy1F8Q269oFkOPK5LrCbVZ075ZmgOgb38z62vTOmk54uB
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
u0HZmd/ySL3n7JHYnyMIurXdWtQ3johMehYITtKx1e3rSrm6Yqg41Nz1ON0B
jbvBxiZv7hMz2qPgG6HVKLuaoSff0UyuH8oSOMUzC/cdOx90V46A0yP02vXT
S0h8uZ7rm/4QmBy+VNmOp+BDsf/9xfRvhHN1gqJKPA3+2lYPNYXfk1RrnsBj
udOw+Tv2ucm+HiFNe3////l6oyGVnlDBHqgoWnHwhVRAevzHyQyLcMRGKiUE
tFHR96ZCKmZXPGHye61fNNqCgztKLAUUO8HG+uBT3nUaEqcORdtkJqD+1xu9
x1+WIazr6lnl2Y3Wp0r2+tM0UP7sj9oj3QCVbQk50QzeTsvUtB5VZnj/mzLR
X18G4BRU9WSdchMG9O03FTRPwGnH9yPihhkkSsv1j2Q4HbyX3rY86f+GpWtC
B+xKplCUtu8IB60XRllDaUab82Bt/vyGQHE70b5zs2khPAfhWlvUdF8UkPmB
YxxFDG5YLbe9ZIS/BtmZssLjxsv4MVldzFG3yOAE7jVdvkvY/CW65+B5Goyu
fPqi6lOFjNW+Jfdka2HaJP1Uy3gS3tMXyio5reFu8/nFqqU6fC+Yfta7rRwU
oz2mPhPLiCjTu7O0chrsSQaC5RI9EPE9+jFMhUJoTmvDCrZVQ2ngkfxsH5NK
pqLGuMs/hk+e+3W1TGsQ/tWvfPpe03HPrcbKNKEfF98dPmFjOIrATQbfJ453
g+vpwfw935fQ9kIiheLbA2kDiRNahwqx+e/bKxcMBomm19PYujwa1tO8Yjin
JmDE9mZovrYFLm9Os1NWJhHh7U/eTp0ZQKronsPWtr+J6f4d6c9rZyGiLf2r
oyYfTKv4Y9zuzICN52fi5owK0Kg+iRrP6uFv16DeYfEesTYjr7deb8VPY5+P
zrbpROJtcazZpwa4NqC4wKiYFFgYhHe11KH16swRH+8yzP/3QCtq6zRUbvMc
ipG4TaQF92yWDWgH7ccbizjWOBI0yrI9rnQWyWbp6pcOUSHRLR2pXdALRbsN
Ny9+bMLpxKWtt53GEftpHZP+XB7cecRZrXcPYUWuyAY9gQIShZoL/j+msJJ3
VqhIJpfQv3I+TfjRgYTCvUPyDXQwVe9s26wQgji2fsNLn+uIjD1/W/GFQdC6
bWQNV72Edi575qhnNswu/I+iM4+m6mvAsDmVSilUQkIlCU1SvOqnolRSSiWh
RCg0IlOoJBVSyZRkqszzvM0zmefh4prna56/+/11/7jr7HvuPnu/7/OsddY5
iQadzK2kaUfH+/0xNEwXWBWG7k6Gq5uf1AfuQXTetdW0rhuEIvfnxw99JvH1
9tMOq4Z/EMx2e6spkI3oolPmCVt6yVhVcvoa6ya81YpYxaIdSJx5GG6vUlpE
4ZoIjpWNHXCMXVnFwNwJVckxanxvAnG99mJjoGIXds/Xq/NbjhKbIOHUEHo/
ip0YU2Y9VQFDA1rnsRvLOLcz8VSuRBOStkoV5YlV40GjY+3bmF6yeNfkztJY
F9S4g14/lswiKaYqB/v30RCso9XfyVkPzsWnh9cMTmDAtvumm+lPGD+8ZvGa
bxGXWaWNbW+MQYxfteuYxhImB6xk3a/R18ueN33cDDXg5rHKLRzPJTKuHop3
91Ujj/p1l3JFBWHY1n/78N4w5MyeOmkj6UsCrQtyRh5Oot/+hi2JbwWl8IxZ
klYs7G3EtnTMU4hTWN0v7sJJUB3shdawZxGJ7xrr/t9HC//Gbc9rTcKJY51C
35VuxMiZDfc6J5MU+SdCc7fGYOX1aUmhvwqZu+Tv7awLQvHYJ8NpKQe4f5hx
r+6hj+eoeZjtbSa0XxiZB8pGg0VtVabhlm4I827vlr0yjM/rz4SX65WRe7Of
EmeTqWBT6Oi6YJxHrDKET9hKzeIrdwx1VdEAaLGrvez3LCHgZWm49R8WhTSe
zp/3ri3ijJ2M6I+CNqi1uyRneU3j216eC8ExEziyJZEvwXYeUWn/1FqrOlHT
ZPTklQCdTzF/g+mVJ6Ec/9XGsnoZx6N+vFxNn0d238vnXryk/x8jpnaWzkJi
p3PuX9E9Or8XMXikbqf3j2qimx49d5hvedrtuD2KpG7dy79NaKgoPb352PIo
KvqvBSabFSO/+kMwfSkT0yMVIgNSk+h8PXt6qKINtENRf1UNp1EtHembal0P
11JtzoRtC4id2NOxaf0P+NiJ5cqbjmJulE9E6WU8Yc+lStvFV8OPnG7skC6g
85M+7+fznpDwfKP+z6yGeK4pWLlSM4rq+xyZtY9LidIPzpgRwSaICVpxfg+q
JtRX/80Zz84iSW7/ZTGNfrgy8p/i2EKDeavm3yafd8T4jP9Fi5FRNF+W7k5v
LCBhw6WvpDIn8SlNXnBumgrVZ/HfNxVWY5nN4T7T7kFYrmY8lqo7gdAs5gfc
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
GRzmZuQwNL0I5dqkjxxLPyHdvnX1SpEhMA0ZEUrDU5z8reS9S24YFfFQaExz
BpfOwqqKawvYkK8kGRbfCgMdtwInrW50sl0WMDn5hVgPPCo7+moJxrvyI/qP
ZUDVxSHtx1g7nPR0W8K8klCw+86K2NXzKLfha2RS6cViVlOdV98MmHfXvRF/
VQbK1lClYcF2WMmtK2R+weh3Fy39yv5ROAextBx0/UiSx1M8BmUq8F4jnsNT
NY7hh58iyiT6cPn1lQa7j6WobY3P1XoyhlMfJ961rnhB7PSPJo07Mriotio6
v6SJ5MWWfa9IGMYLUSbrXM0CknDnXIHZrTlGrqq3vq3+Su6f3pP7WmkBrJtE
9TjdO8BNZS9kcRiH/WKkeC8/gxNTGt/4t03hEdGJV7/cAYr9b326Xy/m2mUy
b8SlI8Jt3poWsgxTWT2iOdgAITbaF/rmRVibqV3b/qsciy/jaqYrl5F0UNbc
5UYFdE4EuK7sp2K7erpIytYaYkAjtmoM/7WXzbs87VhCRE1XnFs+P41jd0Ou
lvjVws1u007xla3o07otdFO3BYeqJu6VmI5hvrRn1dO7k+Cw5bgu6rEElqtL
mu5jfaCqZBhdW1GIvrNWa+XOV5FxsX2vJQtmYB1zbFjcsRzUajn7dN5SJJzO
XNN1s4twl8d4Lhxawlo9/hjBoA6wuL1NEbNoB0ec4qaBs/2E+7Ves97zAZxd
u09R6U4W7rduNu2znkB1qGYoz4FIIn9v8LrWqUUIXfZ2f/iSBo7RCFWd+T6U
7I4T/fSzhLhpBIu+UumHA9eOqcXuDyRiT4adybtprKqjBNFv1UEnY1B0jHsY
EvXK/EdupRLb8FctbTfGsJCnmlGbFkkEI7reBYf24v5+fU1/2XhUbM19a/5f
OeT33wihzHwn9mH7tMzPLuLf05+xba7V4ChjmT/PPwL2T81VP39vo3j4BZ5f
6UlFtHITf9opZgrr2Bt3iyML+JuR0RrM1g6q4ufDmteqcdKi3Ii/pYI8+3dw
PsZlDKp7bCvUomhgMTzq8saZivtr8pTkZJoh3CB14OkCHQc+rfD3OTKM6n5n
98L4dkRcsN55eC3DR5vTrr46OI1P95L/fVJYRXFeIv/lREXisxdZwWVGUG9j
a//p0/8qOA9/Kt8/jFPKqOwWKklFVKKpch0NqSRpKSW+FJUyUmlLQkKSLVIk
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
OjPUlof/Iwr7ytoln5cjn3vrtoKxRrK7W8JijIOOamdnVwuZYfCXLN/GF7EA
w2vL73sZdGEb+eXwccUkwgxZNm8M2ev3rJp2XTIL0aSXb0d4U8DBHXtmVCkP
blLRh7+/qiAmR3U1uNXb0SH4V9LVPANdfib0nHvs3G44ZhL/xBDUlNhOi3Mj
+Ljn9Zhq9h+YbyN2zToToM1Nh507xYKR/4cpa+tJ+D26r7x0ezRxfMr15lVJ
M468fuLQ9aoLirT6YguNGSxViZK/daoB0iuiwnvZ89nSuvn+wcIcmFbtr1f6
ycLnqAQntcdDsLcZiJQ2GIWc0kPhvIcdkNTNDKosLIHCNpOnM2sKiMmhF14W
1Q1waXs6ZHI9lvjEPChrWtMFO4//ai6KjWPgJVXuEVcXcmePaW3Ad9RebjF9
T+tB7Gebe2vfxcHxUI7uZfEeLPppPrKnow2hU7bH20RmoSPx3wvrZez3nmtI
tA+vh6LjVueR3zU4Vnb7pupaJoL43l2jCq2m7O0SPNHwfz9cwUp0aBqDfr/g
rlkptu89Gmg2vfQTkX1ZSWo6vXA13voirS2dNHYmVPCkTkNK3qI3LK0JJpeF
FTjXdUIr5sB3a+tH5FjPYHHM+z706JtU2eqlEjfZoOGom+MIG3+zeF/KRxI5
KtZ7cr4fgtwRvwd1csnTJXNe7SPTMJXYW+JQ0gatwxxZZ73Zve5GyfHfzd4Q
VfJZOsA3A49D0kIdvIXEtZRcsZ1koJX5jFF4ewgRqfn2D3ZNQl6Usn8wvwLJ
CiZiUyl9MHVct+6t9ySYnjzs8ZwB5bKk/L8D/Xhpummm8Q0LjzxNMx7qsfuG
hY282Sd2z/ohKZq3PQ4c75a+Gn8egvzGMdvF0nnkuUKc/0F6N1SMnwzt1qiG
9IPxD8vOjoN/eeQZ1v40YmdWfHlrwBgoEltnTeqbwSORyfj0tgP58RTKhahS
EiQzN9luXADmqQ63BLl8Enq0z+5p1ShixLsNsp98RbTapdkdYnXgepQ+S3uT
RxJT785J/p6Al4X4oyqRNmTta0tIMBrD34XNp1zyy1Ev25y3QY4F+4OXRQXy
6Mj/t9q8x30aLdJzD2ftR7DItMgsqmIOxSfjh9ccisWO40q7d+SMYsgpUzIj
rxiWSSMOSocZ6Gr+5lrXmoLIO5t2T1oyIZXUOCkcSMcase++/VF1qC14tzim
Ph/WuwMGP7+bwiqeIbdllExkXcv5a68+jwt3FJbfD+0Efe2bHwqbC9BWI/FH
3LGO8O2p5TxLnYXYbT/7R+z9lln+8ccnp1GEJvMtXa9JJ27Zz4XfFw9AbIUG
UQym4W/cE7txvxH4fa7K5+CmIWRtai1zWzfkn+bofUhJhUzqvM63MTZnLx4K
K7UKIXqtfaq/+8eg9YJ+QL4pk0jeLRc3rCoE16Wu8Y1nslEbeELB22YGAWM3
3o6ld4OWmNvHK9oF3a2iHSetggjdblv99S09+HtI8LyXtx15dO9BVazbBHjq
gkPMNL8Sm9oCo1UfAnFZNOT0N5ffGGkZCwmP7YOk4ZaJ4MwCIjxdEX7bfRY/
0pu1s+xaUb1PJ+zGdRZqtW+EfYzvRL5lzb6YJ32wfrBvGb9NBDERFNvY8HIO
yYE7z7rv+wnbx/wTcY/GIDP2k6ajTQe/3dDk96vzYNiGqQ0L94LjkteuA9re
SLFRF/qq3k7035n6HUlqwtG35TanaLWw+57BUz9DR91extlNChWEZ2z/XSGr
Okj7V63r8LcnPs6mR2ZnupG1mmbLlE8n5gUVPRraFfCdjL9ontMEmbzDR6nG
XeiXtWD8Y3ObPtQi3Bddgci0Hu6if3RCTx7gMjMeRuT87+U8Iu2gCjhzl35m
gqddaOzOt0aIHvHvv8U9jHTt6ePHw33Jy+29USJZc0iSCC1kRf/DfnEvyCRX
Ytu1zJ8C3imEcl3XS0EyAslvHu3/m1tBJJtGV0yfbcOpyNJ3S7MekCMOp7OW
f51B7L/wUHeufuwVvq106eA0DrpYqE1cjCWRbyuf8ygNwuyHoYGGWSpxklV9
JvFzAgvtm3sU7PMgvbq3JenXJMy3drdnp8dB0GhKt0oiB/wXRa+90yxDW8Sq
4u96k7hW28hi2tBhs3F4v65gNrzXt+GKeSKh0eUvBsbMosvhk5/ZeClMN26P
Df4+jFAxnYRHG5pJdHL4MePiFnzKn33StPQf0THJzLDZ3IpFS5KipC2qyf8A
dfD3Fw==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Maximum Real Eigenvalue\"", TraditionalForm], None}, {
     FormBox["\"Parameter Value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 1.9998903385514173`}, {-1.133407532980185, 
    1.891181139120473}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6494410343062763`*^9, {3.649441078786517*^9, 3.649441106740995*^9}, 
   3.64944122720068*^9, 3.649441490630335*^9, {3.64944160747659*^9, 
   3.649441650283708*^9}, 3.649442975175149*^9, 3.649443118773871*^9, {
   3.6494435285805264`*^9, 3.6494435428896923`*^9}, {3.649443981941098*^9, 
   3.649444021109253*^9}, {3.649444268182197*^9, 3.649444287129064*^9}, {
   3.64944432413118*^9, 3.649444352356489*^9}, 3.6494521634094753`*^9, 
   3.649452284627182*^9, 3.6495028223194847`*^9, 3.649505323610862*^9, {
   3.649522578474043*^9, 3.649522650958768*^9}, {3.6495277353236837`*^9, 
   3.649527752087253*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Correlation between parameters and stability (0, 1) :: this is what we did in \
our Theoret Ecol paper **THIS IS THE CORRECT ANALYSIS**\
\>", "Subsection",
 CellChangeTimes->{{3.649504532712171*^9, 3.649504554966085*^9}, {
  3.649505577217105*^9, 3.649505592575539*^9}, {3.649524790917317*^9, 
  3.649524800557105*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacMSimp", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.666470218416761*^9, 3.666470225197872*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SubscriptBox["g", "f"], " ", 
        SubscriptBox["\[Beta]", "F"]}]}], 
      RowBox[{"1", "-", 
       SubscriptBox["\[Beta]", "F"]}], 
      RowBox[{"1", "-", 
       SubscriptBox["k", "r"], "-", 
       SubscriptBox["\[Beta]", "F"]}]},
     {
      SubscriptBox["a", "scaled"], 
      RowBox[{"-", 
       SubscriptBox["a", "scaled"]}], 
      RowBox[{
       SubscriptBox["a", "scaled"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubscriptBox["k", "r"], "+", 
         SubscriptBox["\[Beta]", "H"]}], ")"}]}]},
     {
      RowBox[{"-", 
       SubscriptBox["l", "f"]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SubscriptBox["l", "f"]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SubscriptBox["p", "r"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.666470220755239*^9, 3.666470225817419*^9}, 
   3.666470308582095*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StabilityValues", " ", "=", 
    RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"gf", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pr", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lf", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Rstar", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0.001", ",", "0.999"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"as", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bf", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bh", " ", "=", " ", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Eig", " ", "=", " ", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{
          RowBox[{"N", "[", "JacMSimp", "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["a", "scaled"], "\[Rule]", "as"}], ",", 
            RowBox[{
             SubscriptBox["\[Beta]", "F"], "\[Rule]", "bf"}], ",", 
            RowBox[{
             SubscriptBox["\[Beta]", "H"], "\[Rule]", "bh"}], ",", 
            RowBox[{
             SubscriptBox["g", "f"], "\[Rule]", "gf"}], ",", 
            RowBox[{
             SubscriptBox["p", "r"], "\[Rule]", 
             FractionBox[
              RowBox[{
               RowBox[{"2", "Rstar"}], "-", "1"}], 
              RowBox[{"Rstar", "-", "1"}]]}], ",", 
            RowBox[{
             SubscriptBox["l", "f"], "\[Rule]", "lf"}], ",", 
            RowBox[{
             SubscriptBox["k", "r"], "\[Rule]", 
             FractionBox["1", 
              RowBox[{"1", "-", 
               FractionBox["1", "Rstar"]}]]}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"MREig", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"Re", "[", "Eig", "]"}], "]"}], "<", 
           RowBox[{"-", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}]}], ",", "1", ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"as", ",", "bf", ",", "bh", ",", "gf", ",", 
         RowBox[{"N", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"2", "Rstar"}], "-", "1"}], 
           RowBox[{"Rstar", "-", "1"}]], "]"}], ",", "lf", ",", 
         RowBox[{"N", "[", 
          FractionBox["1", 
           RowBox[{"1", "-", 
            FractionBox["1", "Rstar"]}]], "]"}], ",", "MREig"}], "}"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "1000000"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.649438922721942*^9, 3.649439146970871*^9}, {
   3.6494410212325277`*^9, 3.6494410285302887`*^9}, {3.649441215055294*^9, 
   3.649441215165935*^9}, {3.6494412545269012`*^9, 3.649441258343403*^9}, {
   3.649441406029963*^9, 3.649441417052949*^9}, 3.649441466428481*^9, 
   3.649442622324992*^9, 3.649443105663425*^9, 3.649443188541472*^9, 
   3.6494435353381643`*^9, 3.649444275248149*^9, 3.649444311321622*^9, 
   3.64944434743928*^9, {3.649502806191126*^9, 3.649502808857049*^9}, {
   3.64950451880853*^9, 3.649504522127578*^9}, 3.649504571886911*^9, {
   3.649504686076376*^9, 3.6495046876488733`*^9}, {3.64950570736565*^9, 
   3.649505745609643*^9}, 3.6495066227458277`*^9, {3.649521073988312*^9, 
   3.64952107492798*^9}, {3.649521570812912*^9, 3.649521585141465*^9}, {
   3.649522518825618*^9, 3.649522532047318*^9}, {3.649524035223072*^9, 
   3.649524036510009*^9}, {3.650129766604866*^9, 3.6501297992277193`*^9}, {
   3.666459970744795*^9, 3.6664599864951344`*^9}, {3.6664611317090054`*^9, 
   3.6664611319074802`*^9}, 3.6664619691478033`*^9, {3.666470349739283*^9, 
   3.666470359114731*^9}, 3.666470433806117*^9, {3.666471974633082*^9, 
   3.66647199856489*^9}, {3.667050794240183*^9, 3.667050814390294*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"StabilityCorr", " ", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Correlation", "[", 
      RowBox[{
       RowBox[{"StabilityValues", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}], ",", 
       RowBox[{"StabilityValues", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "8"}], "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "7"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StabilityChart", " ", "=", " ", 
  RowBox[{"BarChart", "[", 
   RowBox[{"StabilityCorr", ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(a\), \(h\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(f\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(h\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(g\), \(f\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(p\), \(r\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(l\), \(f\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(k\), \(r\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"ColorData", "[", 
      RowBox[{"97", ",", "1"}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Parameters\>\"", ",", "\"\<Correlation\>\""}], "}"}]}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6495045992367153`*^9, 3.649504727836776*^9}, {
   3.649504807357224*^9, 3.6495048272653923`*^9}, {3.649504938875004*^9, 
   3.649504947895938*^9}, {3.6495050853085623`*^9, 3.64950509241049*^9}, {
   3.649505669099113*^9, 3.649505681759931*^9}, {3.6495057241901608`*^9, 
   3.649505728744987*^9}, 3.64950576389638*^9, 3.649522543622057*^9, {
   3.649524040398403*^9, 3.649524061301173*^9}, {3.649524127741209*^9, 
   3.64952412906951*^9}, {3.6495279039837437`*^9, 3.649527916525465*^9}, {
   3.666460002120843*^9, 3.666460004561181*^9}, {3.667860534964571*^9, 
   3.667860538698834*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.40424519670631287`, 0}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
     Thickness[Small]}], 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5425434583714547, 0.}, {
            1.4574565416285452`, -0.10743001614230409`}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{51.70823529411766, 
           84.14945846240057}, {-20.487140942825985`, -4.659762532430706}}],
         StatusArea[#, -0.10743001614230409`]& ,
         TagBoxNote->"-0.10743001614230409"],
        StyleBox[
         RowBox[{"-", "0.10743001614230409`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.10743001614230409`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5425434583714546`, 0.}, {
            2.457456541628545, -0.28839992901994393`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.61999221705088, 
           119.06121538533381`}, {-20.487140942825985`, 21.159784323986262`}}],
         StatusArea[#, -0.28839992901994393`]& ,
         TagBoxNote->"-0.28839992901994393"],
        StyleBox[
         RowBox[{"-", "0.28839992901994393`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.28839992901994393`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.542543458371455, 0.}, {3.457456541628545, 
            0.06297708136379819}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{121.53174913998413`, 
           153.97297230826706`}, {-29.472279285973634`, \
-19.987140942825985`}}],
         StatusArea[#, 0.06297708136379819]& ,
         TagBoxNote->"0.06297708136379819"],
        StyleBox["0.06297708136379819`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.06297708136379819, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.542543458371455, 0.}, {
            4.457456541628545, -0.3083111795227055}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{156.44350606291735`, 
           188.88472923120028`}, {-20.487140942825985`, 24.00058508004071}}],
         StatusArea[#, -0.3083111795227055]& ,
         TagBoxNote->"-0.3083111795227055"],
        StyleBox[
         RowBox[{"-", "0.3083111795227055`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.3083111795227055, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.542543458371455, 0.}, {
            5.457456541628545, -0.06425047731648927}, "RoundingRadius" -> 0]},
          
          
          ImageSizeCache->{{191.3552629858506, 
           223.7964861541335}, {-20.487140942825985`, -10.820323192618504`}}],
         
         StatusArea[#, -0.06425047731648927]& ,
         TagBoxNote->"-0.06425047731648927"],
        StyleBox[
         RowBox[{"-", "0.06425047731648927`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.06425047731648927, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.542543458371455, 0.}, {6.457456541628545, 
            0.3160129456396943}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{226.26701990878382`, 
           258.70824307706675`}, {-65.57370216969265, -19.987140942825988`}}],
         
         StatusArea[#, 0.3160129456396943]& ,
         TagBoxNote->"0.3160129456396943"],
        StyleBox["0.3160129456396943`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.3160129456396943, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.542543458371455, 0.}, {
            7.457456541628545, -0.06425047731648927}, "RoundingRadius" -> 0]},
          
          
          ImageSizeCache->{{261.1787768317171, 
           293.62}, {-20.487140942825985`, -10.820323192618504`}}],
         StatusArea[#, -0.06425047731648927]& ,
         TagBoxNote->"-0.06425047731648927"],
        StyleBox[
         RowBox[{"-", "0.06425047731648927`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.06425047731648927, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.40424519670631287`, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Correlation\"", TraditionalForm], None}, {
     FormBox["\"Parameters\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(a\\), \\(scale\\)]\\)\"", TraditionalForm],
        0}, {2., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(F\\)]\\)\"", 
        TraditionalForm], 0}, {3., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(H\\)]\\)\"", 
        TraditionalForm], 0}, {4., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(g\\), \\(f\\)]\\)\"", TraditionalForm], 
       0}, {5., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(r\\)]\\)\"", TraditionalForm], 
       0}, {6., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(l\\), \\(f\\)]\\)\"", TraditionalForm], 
       0}, {7., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(r\\)]\\)\"", TraditionalForm], 
       0}}, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  PlotRange->{{All, All}, {-0.5, 0.5}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.649504719598014*^9, 3.649504742582018*^9}, 
   3.649504841684404*^9, 3.649504960228058*^9, 3.6495050943355007`*^9, {
   3.649505677419191*^9, 3.649505682290944*^9}, {3.649505739790481*^9, 
   3.649505765908189*^9}, 3.649506138107535*^9, 3.649506180609338*^9, 
   3.649506633293502*^9, 3.649521094819216*^9, 3.649521596880301*^9, 
   3.649522564357085*^9, {3.6495241132293*^9, 3.6495241310669737`*^9}, 
   3.649527919954401*^9, 3.649789771774555*^9, {3.650129786045508*^9, 
   3.650129807030171*^9}, 3.666461126189035*^9, 3.6664619249196568`*^9, 
   3.6664619836732473`*^9, {3.66647034531568*^9, 3.666470366966168*^9}, 
   3.6664704842795353`*^9, 3.66647198849104*^9, 3.666472049670034*^9, 
   3.667050908881783*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/figs/fig_GenCorr.pdf\>\"", ",", "StabilityChart"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.649789774301523*^9, 3.64978981269978*^9}, {
  3.666470401489365*^9, 3.666470411726643*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2014_DiffusingForager/\
DiffusingForager/figs/fig_GenCorr.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.649789817444084*^9, {3.666470384761997*^9, 3.66647041355385*^9}, 
   3.6664705139622107`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Observations:",
  FontWeight->"Bold"],
 "\n\n",
 StyleBox["Major:",
  FontWeight->"Bold"],
 "\n1) There is a strong positive correlation between ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "r"], "=", " ", 
    RowBox[{
     SuperscriptBox["F", "*"], "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["S", "*"], "+", 
       SuperscriptBox["F", "*"]}], ")"}]}]}], TraditionalForm]]],
 " and stability\n\n2) There is a strong negative correlation between growth \
elasticities and stability\n\n",
 StyleBox["Minor:",
  FontWeight->"Bold"],
 "\n3) As ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "scale"], TraditionalForm]]],
 " increases, stability tends to decrease... ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "scale"], "=", 
    FractionBox[
     SubscriptBox["a", "s"], 
     SubscriptBox["a", "r"]]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "r"], "=", " ", 
    RowBox[{
     SubscriptBox["a", "f"], "=", " ", "1"}]}], TraditionalForm]]],
 ". If ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "scale"], TraditionalForm]]],
 " is increasing, the timescale of the Starvers in increasing, meaning that \
the lifespan is decreasing because Lifespan = 1/timescale. So a quicker \
turnover of the starving class leads to a greater likelihood of \
instability... (there is a higher rate of mortality because there are more \
indivduals entering the starving class.\nAs the timescale of starvation \
becomes shorter, the lifespan of the starving class is longer, and the \
turnover is thus lower... this tends the system towards stability.\n\n4) As \
the proportional gain of the Full-consumers through growth increases, \
stability tends to decrease. Likewise, as the proportional gain of the \
Full-consumers through RECOVERY increases, Stability increases. Higher rates \
of recovery are good for the system in general. This is possibily similar to \
the idea that as \[Lambda] in the specific model increases (increasing the \
rate of F growth), the system moves towards a TC or Saddle node \
bifurcation... (not sure which?)"
}], "Text",
 CellChangeTimes->{{3.649505610664671*^9, 3.649505643399207*^9}, {
  3.6495057747444*^9, 3.649505796661498*^9}, {3.6495238214378567`*^9, 
  3.649523873039496*^9}, {3.649524410408578*^9, 3.64952458279767*^9}, {
  3.64952463002136*^9, 3.649524767300453*^9}, {3.649524813064142*^9, 
  3.649525028146483*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis of the Full (unconstrained) Generalized Model", "Subsection",
 CellChangeTimes->{{3.649445139508513*^9, 3.6494451794120073`*^9}, {
  3.649446321944121*^9, 3.6494463339494877`*^9}}],

Cell["There are 15 free parameters, with a Jacobian Matrix:", "Text",
 CellChangeTimes->{{3.649445182789912*^9, 3.649445196874592*^9}, {
  3.64944555939021*^9, 3.649445559534494*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacM", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.649444737699498*^9, 3.649444742784761*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["a", "F"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["k", "f"]}], "+", 
         RowBox[{
          SubscriptBox["g", "f"], " ", 
          SubscriptBox["\[Beta]", "F"]}]}], ")"}]}], 
      RowBox[{
       SubscriptBox["a", "F"], " ", 
       SubscriptBox["h", "s"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Beta]", "F"]}], ")"}]}], 
      RowBox[{
       SubscriptBox["a", "F"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["k", "r"]}], "+", 
         RowBox[{
          SubscriptBox["h", "r"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox["\[Beta]", "F"]}], ")"}]}]}], ")"}]}]},
     {
      RowBox[{
       SubscriptBox["a", "S"], " ", 
       SubscriptBox["k", "f"]}], 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["a", "S"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["h", "s"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox["\[Beta]", "S"]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["m", "s"], " ", 
          SubscriptBox["\[Beta]", "S"]}]}], ")"}]}], 
      RowBox[{
       SubscriptBox["a", "S"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["k", "r"], "-", 
         RowBox[{
          SubscriptBox["h", "r"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SubscriptBox["\[Beta]", "S"]}], ")"}]}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["a", "R"]}], " ", 
       SubscriptBox["l", "f"]}], 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["a", "R"]}], " ", 
       SubscriptBox["l", "s"]}], 
      RowBox[{
       SubscriptBox["a", "R"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["l", "r"]}], "+", 
         SubscriptBox["p", "r"]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.649444743261673*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RValuesFull", " ", "=", 
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"af", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"as", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", " ", "=", "  ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gf", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pr", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lf", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ls", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lr", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ms", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bf", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bs", " ", "=", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kf", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kr", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hs", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hr", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Eig", " ", "=", " ", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         RowBox[{"N", "[", "JacM", "]"}], "/.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            SubscriptBox["a", "F"], "\[Rule]", "af"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["a", "S"], "\[Rule]", "as"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["a", "R"], "\[Rule]", "ar"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["g", "f"], "\[Rule]", "gf"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["p", "r"], "\[Rule]", "pr"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["l", "f"], "\[Rule]", "lf"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["l", "s"], "\[Rule]", "ls"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["l", "r"], "\[Rule]", "lr"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["m", "s"], "\[Rule]", "ms"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["\[Beta]", "F"], "\[Rule]", "bf"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["\[Beta]", "S"], "\[Rule]", "bs"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["k", "f"], " ", "\[Rule]", " ", "kf"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["k", "r"], " ", "\[Rule]", " ", "kr"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["h", "s"], "\[Rule]", " ", "hs"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            SubscriptBox["h", "r"], " ", "\[Rule]", " ", "hr"}]}], 
          "\[IndentingNewLine]", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MREig", " ", "=", "  ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Re", "[", "Eig", "]"}], "]"}], "<", 
          RowBox[{"-", 
           RowBox[{"10", "^", 
            RowBox[{"-", "6"}]}]}]}], ",", "1", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "af", ",", "as", ",", "ar", ",", "bf", ",", "bs", ",", "gf", ",", "pr",
         ",", "lf", ",", "ls", ",", "lr", ",", "ms", ",", " ", "kf", ",", " ",
         "kr", ",", " ", "hs", ",", " ", "hr", ",", "MREig"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1000000", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.649438922721942*^9, 3.649439146970871*^9}, {
   3.6494410212325277`*^9, 3.6494410285302887`*^9}, {3.649441215055294*^9, 
   3.649441215165935*^9}, {3.6494412545269012`*^9, 3.649441258343403*^9}, {
   3.649441406029963*^9, 3.649441417052949*^9}, 3.649441466428481*^9, 
   3.649442622324992*^9, 3.649443105663425*^9, 3.649443188541472*^9, 
   3.6494435353381643`*^9, 3.649444275248149*^9, 3.649444311321622*^9, 
   3.64944434743928*^9, {3.649444623332418*^9, 3.6494450394069223`*^9}, {
   3.649445072849637*^9, 3.6494451155778923`*^9}, {3.649445226645952*^9, 
   3.649445227037149*^9}, {3.649445264526256*^9, 3.64944529915692*^9}, {
   3.649445514219078*^9, 3.6494455144739428`*^9}, 3.6494455792132683`*^9, {
   3.649445623873662*^9, 3.64944562413651*^9}, {3.649445663115363*^9, 
   3.649445694059998*^9}, {3.6494458472152967`*^9, 3.649445865727075*^9}, 
   3.649506206367237*^9, {3.6495065737775106`*^9, 3.64950657870422*^9}, 
   3.649506643512307*^9, {3.649506833819084*^9, 3.649506835193205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CorrFull", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Correlation", "[", 
      RowBox[{
       RowBox[{"RValuesFull", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}], ",", 
       RowBox[{"RValuesFull", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "16"}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "15", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CorrChartFull", " ", "=", " ", 
  RowBox[{"BarChart", "[", 
   RowBox[{"CorrFull", ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(a\), \(F\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(a\), \(S\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(a\), \(R\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(F\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(S\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(g\), \(f\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(p\), \(r\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(l\), \(f\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(l\), \(s\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(l\), \(r\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(m\), \(s\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(k\), \(f\)]\)\>\"", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(k\), \(r\)]\)\>\"", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(h\), \(s\)]\)\>\"", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(h\), \(r\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"ChartStyle", "\[Rule]", 
     RowBox[{"ColorData", "[", 
      RowBox[{"97", ",", "1"}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Parameters\>\"", ",", "\"\<Correlation\>\""}], "}"}]}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.649441139281321*^9, 3.6494412035324907`*^9}, {
   3.6494412434689293`*^9, 3.649441398435637*^9}, {3.6494415102138653`*^9, 
   3.649441590034174*^9}, {3.649441990717024*^9, 3.649442028403173*^9}, {
   3.649442999672277*^9, 3.649443001830456*^9}, 3.649443044258293*^9, 
   3.6494444140722923`*^9, {3.649444533855198*^9, 3.649444534211972*^9}, {
   3.6494450466322937`*^9, 3.649445063221333*^9}, {3.64944531923036*^9, 
   3.649445483318482*^9}, {3.649445553354231*^9, 3.6494455558726187`*^9}, {
   3.64944578963938*^9, 3.649445796484733*^9}, {3.649445836974544*^9, 
   3.6494458375979567`*^9}, 3.6494459933073606`*^9, {3.649506840906427*^9, 
   3.6495068450254393`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.2407373271889401, 0}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.595], 
     Thickness[Small]}], 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5391705069124424, 0.}, {1.4608294930875576`, 
            0.08536226207131756}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{51.70823529411766, 
           67.11940050139884}, {-40.60062777881847, -17.7698043507546}}],
         StatusArea[#, 0.08536226207131756]& ,
         TagBoxNote->"0.08536226207131756"],
        StyleBox["0.08536226207131756`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.08536226207131756, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5391705069124424`, 0.}, {
            2.460829493087558, -0.09043435782216445}, "RoundingRadius" -> 0]},
          
          
          ImageSizeCache->{{67.88684954401774, 
           83.29801475129892}, {-18.2698043507546, 5.887882633569838}}],
         StatusArea[#, -0.09043435782216445]& ,
         TagBoxNote->"-0.09043435782216445"],
        StyleBox[
         RowBox[{"-", "0.09043435782216445`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.09043435782216445, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.5391705069124426`, 0.}, {
            3.460829493087558, -0.015590382890320621`}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{84.06546379391781, 
           99.476629001199}, {-18.2698043507546, -13.6913500191579}}],
         StatusArea[#, -0.015590382890320621`]& ,
         TagBoxNote->"-0.015590382890320621"],
        StyleBox[
         RowBox[{"-", "0.015590382890320621`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.015590382890320621`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.5391705069124426`, 0.}, {
            4.460829493087558, -0.20117119684470108`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{100.24407804381791`, 
           115.65524325109908`}, {-18.269804350754598`, 34.85671194046206}}],
         StatusArea[#, -0.20117119684470108`]& ,
         TagBoxNote->"-0.20117119684470108"],
        StyleBox[
         RowBox[{"-", "0.20117119684470108`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.20117119684470108`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.539170506912443, 0.}, {5.460829493087559, 
            0.07786769639684626}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{116.422692293718, 
           131.8338575009992}, {-38.64004451068972, -17.7698043507546}}],
         StatusArea[#, 0.07786769639684626]& ,
         TagBoxNote->"0.07786769639684626"],
        StyleBox["0.07786769639684626`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.07786769639684626, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.539170506912444, 0.}, {
            6.460829493087559, -0.1535207564549284}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{132.60130654361808`, 
           148.01247175089927`}, {-18.2698043507546, 22.39132565858851}}],
         StatusArea[#, -0.1535207564549284]& ,
         TagBoxNote->"-0.1535207564549284"],
        StyleBox[
         RowBox[{"-", "0.1535207564549284`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.1535207564549284, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.539170506912444, 0.}, {
            7.460829493087559, -0.2741411374729293}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{148.7799207935182, 
           164.19108600079934`}, {-18.269804350754598`, 53.945695997185965`}}],
         StatusArea[#, -0.2741411374729293]& ,
         TagBoxNote->"-0.2741411374729293"],
        StyleBox[
         RowBox[{"-", "0.2741411374729293`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.2741411374729293, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.539170506912444, 0.}, {8.460829493087559, 
            0.07595059537540882}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{164.95853504341827`, 
           180.36970025069942`}, {-38.138529633217125`, -17.7698043507546}}],
         StatusArea[#, 0.07595059537540882]& ,
         TagBoxNote->"0.07595059537540882"],
        StyleBox["0.07595059537540882`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.07595059537540882, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.539170506912443, 0.}, {
            9.460829493087559, -0.10987192000142962`}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{181.13714929331832`, 
           196.5483145005995}, {-18.2698043507546, 10.972761576146848`}}],
         StatusArea[#, -0.10987192000142962`]& ,
         TagBoxNote->"-0.10987192000142962"],
        StyleBox[
         RowBox[{"-", "0.10987192000142962`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.10987192000142962`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.539170506912443, 0.}, {10.460829493087559`, 
            0.27124414778005823`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{197.3157635432184, 
           212.72692875049958`}, {-89.22745030572726, -17.769804350754598`}}],
         
         StatusArea[#, 0.27124414778005823`]& ,
         TagBoxNote->"0.27124414778005823"],
        StyleBox["0.27124414778005823`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.27124414778005823`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10.539170506912443`, 0.}, {11.460829493087559`, 
            0.09436805415001714}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{213.49437779311847`, 
           228.90554300039966`}, {-42.95654885986103, -17.7698043507546}}],
         StatusArea[#, 0.09436805415001714]& ,
         TagBoxNote->"0.09436805415001714"],
        StyleBox["0.09436805415001714`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.09436805415001714, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.539170506912443`, 0.}, {12.460829493087559`, 
            0.16828508574063367`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{229.67299204301855`, 
           245.08415725029977`}, {-62.29329253000449, -17.769804350754598`}}],
         
         StatusArea[#, 0.16828508574063367`]& ,
         TagBoxNote->"0.16828508574063367"],
        StyleBox["0.16828508574063367`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.16828508574063367`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{12.539170506912443`, 0.}, {
            13.460829493087559`, -0.18350332141089723`}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{245.85160629291866`, 
           261.26277150019985`}, {-18.2698043507546, 30.23478420462399}}],
         StatusArea[#, -0.18350332141089723`]& ,
         TagBoxNote->"-0.18350332141089723"],
        StyleBox[
         RowBox[{"-", "0.18350332141089723`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.18350332141089723`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{13.539170506912443`, 0.}, {
            14.460829493087559`, -0.03249372774378901}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{262.03022054281877`, 
           277.4413857500999}, {-18.2698043507546, -9.269423981735018}}],
         StatusArea[#, -0.03249372774378901]& ,
         TagBoxNote->"-0.03249372774378901"],
        StyleBox[
         RowBox[{"-", "0.03249372774378901`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.03249372774378901, {}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[0.595], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{14.539170506912443`, 0.}, {15.460829493087559`, 
            0.051774885913467295`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{278.20883479271885`, 
           293.62}, {-31.81414827144218, -17.7698043507546}}],
         StatusArea[#, 0.051774885913467295`]& ,
         TagBoxNote->"0.051774885913467295"],
        StyleBox["0.051774885913467295`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.051774885913467295`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.2407373271889401, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Correlation\"", TraditionalForm], None}, {
     FormBox["\"Parameters\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(a\\), \\(F\\)]\\)\"", TraditionalForm], 
       0}, {2., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(a\\), \\(S\\)]\\)\"", TraditionalForm], 
       0}, {3., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(a\\), \\(R\\)]\\)\"", TraditionalForm], 
       0}, {4., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(F\\)]\\)\"", 
        TraditionalForm], 0}, {5.000000000000001, 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(S\\)]\\)\"", 
        TraditionalForm], 0}, {6.000000000000002, 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(g\\), \\(f\\)]\\)\"", TraditionalForm], 
       0}, {7.000000000000002, 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(r\\)]\\)\"", TraditionalForm], 
       0}, {8.000000000000002, 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(l\\), \\(f\\)]\\)\"", TraditionalForm], 
       0}, {9., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(l\\), \\(s\\)]\\)\"", TraditionalForm], 
       0}, {10., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(l\\), \\(r\\)]\\)\"", TraditionalForm], 
       0}, {11., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(s\\)]\\)\"", TraditionalForm], 
       0}, {12., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(f\\)]\\)\"", TraditionalForm], 
       0}, {13., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(r\\)]\\)\"", TraditionalForm], 
       0}, {14., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(h\\), \\(s\\)]\\)\"", TraditionalForm], 
       0}, {15., 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(h\\), \\(r\\)]\\)\"", TraditionalForm], 
       0}}, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.649441204849268*^9, 3.6494412212213497`*^9}, {
   3.6494413781641693`*^9, 3.649441414129496*^9}, 3.649441462362671*^9, 
   3.649441513428588*^9, {3.649441557472165*^9, 3.6494416036086273`*^9}, {
   3.649442013015545*^9, 3.6494420292599573`*^9}, 3.6494426492873993`*^9, 
   3.649443002717306*^9, 3.649443045758247*^9, {3.649443102764485*^9, 
   3.649443111233436*^9}, 3.649443196313138*^9, {3.649443510816738*^9, 
   3.649443539776976*^9}, 3.649444279807884*^9, 3.6494443144524307`*^9, 
   3.6494443561650543`*^9, 3.6494444158519793`*^9, 3.649444534845271*^9, 
   3.649444599535595*^9, 3.649445249788723*^9, 3.649445538399221*^9, 
   3.649445569920074*^9, 3.649445629151182*^9, {3.6494456833107443`*^9, 
   3.649445705390594*^9}, {3.649445839392421*^9, 3.6494458630151176`*^9}, {
   3.64944597635192*^9, 3.649446002619478*^9}, 3.649506807487185*^9, 
   3.649506981578786*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["StabilityValues"], "Input"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "3.8365955863410317`", ",", "0.22692628696351513`", ",", 
             "0.13343913497075688`", ",", "1.3346454656400648`", ",", 
             "1.8447024712376967`", ",", "0.12433838228111593`", ",", 
             RowBox[{"-", "0.9159988047233897`"}], ",", "0"}], "}"}], ",", 
           TemplateBox[{"999"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{
            "3.0543454533559853`", ",", "0.7906386121989148`", ",", 
             "0.028953422113531913`", ",", "0.5341018875858143`", ",", 
             TemplateBox[{"19"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
             "0.3263067653533889`", ",", 
             RowBox[{"-", "3.843952051276785`"}], ",", "0"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 101, 19094881937775203028, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 101, 19094881937775203028, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 101, 19094881937775203028, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[101]]], "Output",
 CellChangeTimes->{3.666461937621242*^9, 3.666470074223831*^9, 
  3.666470338737862*^9}]
}, Open  ]],

Cell["Timescales for the specific model", "Text",
 CellChangeTimes->{{3.666472561560402*^9, 3.666472573742754*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"aF", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"\[Sigma]", "*", 
    RowBox[{"(", 
     RowBox[{"1", " ", "-", " ", 
      FractionBox[
       RowBox[{"\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ")"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"aH", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"\[Rho]", "*", 
     FractionBox[
      RowBox[{"\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
       RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], "+", "\[Mu]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"aR", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"\[Alpha]", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", "\[Sigma]"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
        RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]}], ")"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.666472586399498*^9, 3.666472657819008*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Lambda]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}], " ", "\[Sigma]"}], 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
   RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]], "Output",
 CellChangeTimes->{3.666472658908095*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}], " ", "\[Sigma]"}], 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
   RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]], "Output",
 CellChangeTimes->{3.6664726589105587`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", "\[Lambda]", " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Rho]"}], ")"}]}], 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "\[Rho]"}], "+", 
   RowBox[{"\[Mu]", " ", "\[Sigma]"}]}]]], "Output",
 CellChangeTimes->{3.666472658913025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"A", " ", "+", " ", "B"}], 
   RowBox[{
    RowBox[{"A", "*", "CC"}], " ", "+", " ", 
    RowBox[{"B", "*", "DD"}]}]], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"A", "\[Rule]", "0.8"}], ",", 
    RowBox[{"B", "\[Rule]", "0.3"}], ",", 
    RowBox[{"CC", "\[Rule]", "0.2"}], ",", 
    RowBox[{"DD", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6664738899772043`*^9, 3.66647409767811*^9}}],

Cell[BoxData["2.391304347826087`"], "Output",
 CellChangeTimes->{
  3.666473908070529*^9, {3.666473965657269*^9, 3.666474025148457*^9}, {
   3.666474072115391*^9, 3.666474098209338*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{938, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3884, 113, 412, "Text"],
Cell[4445, 135, 826, 25, 107, "Text"],
Cell[5274, 162, 142, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[5441, 168, 113, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[5579, 173, 2620, 81, 80, "Input"],
Cell[8202, 256, 2905, 91, 63, "Output"]
}, Open  ]],
Cell[11122, 350, 221, 5, 30, "Text"],
Cell[11346, 357, 540, 17, 42, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11923, 379, 129, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[12077, 384, 1517, 41, 81, "Input"],
Cell[13597, 427, 1794, 52, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15428, 484, 405, 10, 58, "Input"],
Cell[15836, 496, 5265, 94, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21138, 595, 373, 11, 28, "Input"],
Cell[21514, 608, 6598, 119, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28149, 732, 299, 9, 49, "Input"],
Cell[28451, 743, 280, 10, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28768, 758, 130, 2, 28, "Input"],
Cell[28901, 762, 210, 7, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29148, 774, 521, 13, 48, "Input"],
Cell[29672, 789, 361, 8, 24, "Message"],
Cell[30036, 799, 7308, 131, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37381, 935, 236, 7, 48, "Input"],
Cell[37620, 944, 70, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37727, 950, 357, 10, 28, "Input"],
Cell[38087, 962, 4256, 79, 256, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42392, 1047, 163, 3, 44, "Subsection"],
Cell[42558, 1052, 3648, 100, 322, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46243, 1157, 145, 1, 44, "Subsection"],
Cell[46391, 1160, 4095, 96, 322, "Input"],
Cell[CellGroupData[{
Cell[50511, 1260, 1884, 43, 63, "Input"],
Cell[52398, 1305, 8875, 232, 211, "Output"]
}, Open  ]],
Cell[61288, 1540, 1070, 27, 174, "Text"],
Cell[CellGroupData[{
Cell[62383, 1571, 1024, 24, 28, "Input"],
Cell[63410, 1597, 208826, 3435, 250, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[272285, 5038, 367, 7, 52, "Subsection"],
Cell[CellGroupData[{
Cell[272677, 5049, 132, 2, 28, "Input"],
Cell[272812, 5053, 1509, 48, 63, "Output"]
}, Open  ]],
Cell[274336, 5104, 5171, 119, 339, "Input"],
Cell[CellGroupData[{
Cell[279532, 5227, 2285, 51, 114, "Input"],
Cell[281820, 5280, 9033, 237, 211, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290890, 5522, 319, 7, 63, "Input"],
Cell[291212, 5531, 250, 4, 28, "Output"]
}, Open  ]],
Cell[291477, 5538, 2484, 63, 386, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293998, 5606, 195, 2, 44, "Subsection"],
Cell[294196, 5610, 183, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[294404, 5616, 128, 2, 28, "Input"],
Cell[294535, 5620, 2610, 86, 65, "Output"]
}, Open  ]],
Cell[297160, 5709, 7474, 180, 624, "Input"],
Cell[CellGroupData[{
Cell[304659, 5893, 2665, 55, 97, "Input"],
Cell[307327, 5950, 17351, 450, 217, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324715, 6405, 41, 0, 28, "Input"],
Cell[324759, 6407, 8975, 225, 108, "Output"]
}, Open  ]],
Cell[333749, 6635, 115, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[333889, 6640, 1400, 41, 132, "Input"],
Cell[335292, 6683, 291, 8, 50, "Output"],
Cell[335586, 6693, 289, 8, 49, "Output"],
Cell[335878, 6703, 291, 8, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336206, 6716, 457, 13, 48, "Input"],
Cell[336666, 6731, 186, 3, 28, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
